--Oracle C Kernal function. Most data is copied from http://orafun.info/
return {
    Name="Description",
    adbdrv="alter database driver",
    ain="alter index",
    ainPDrop="alter index drop an index partition",
    aop="audit options",
    apa="SQL Access Path Analysis",
    apacb="SQL Access Path Analysis connect by",
    apadrv="SQL Access Path Analysis drive access path selection for a sql command",
    apaIMC="SQL Access Path Analysis in-memory column store",
    apakkoqb="SQL Access Path Analysis drive access path analysis for every query block",
    apaqbd="SQL Access Path Analysis drive access path analysis for every query block",
    apaStmtAddXplAnnotations="SQL Access Path Analysis add explain annotations",
    atb="alter table",
    atbdrv="alter table driver",
    atbedml="alter table enable dml locks",
    aud="audit",
    audbeg="audit begin",
    auddel="audit delete",
    auddft="audit default function",
    audend="audit end (commit) transaction",
    audfro="audit top level objects",
    audins="audit insert audit record",
    audtar="audit audit create/alter/drop tablespace,rollback segment and alter system",
    aus="audit statement",
    ausdrv="audit statement driver",
    bam="PLSQL_KG_Interface",
    BZ2="bzip2",
    BZ2_decompress="bzip2 decompress",
    cdb="create database",
    cdbdrv="create database driver",
    cls="clusterware integration",
    csy="create synonym",
    ctc="create table or cluster",
    ctccom_cleanup_online_move="create table or cluster DBMS_PART.CLEANUP_ONLINE_OP_INTERNAL",
    ctcdrv="create table or cluster driver",
    cur="cursor manipulation",
    curdmp="cursor manipulation dump",
    cvw="create view",
    cvwdrv="create view driver",
    cvwgcd="create view get column definition",
    cvwgcpr="create view get table/view name, owner id given object id",
    dbg="debug and diagnostics",
    dbga="debug and diagnostics Unified Tracing Service",
    dbgc="debug and diagnostics diagnostic framework",
    dbgd="debug and diagnostics generic debug API",
    dbgdaRunAction="diagnostic events ??",
    dbgdChkEventIntv="debug and diagnostics generic debug API check events set for value to activate debug",
    dbgdCopyEventNode="debug and diagnostics generic debug API transfers event information from PGA to SGA and back",
    dbgdLinkEvent="debug and diagnostics generic debug API link event information into the list",
    dbgdRunActions="diagnostic events ??",
    dbgdSetEvents="debug and diagnostics generic debug API set event",
    dbgdUnLinkEvent="debug and diagnostics generic debug API unlink event information from the list",
    dbge="debug and diagnostics diagnostic data extractor",
    dbgeEndDDEInvocation="debug and diagnostics diagnostic data extractor Explicitly end a DDE invocation",
    dbgeEndDDEInvocationImpl="debug and diagnostics diagnostic data extractor Explicitly end a DDE invocation (internal)",
    dbgeExecuteForError="diagnostic data extractor ??",
    dbgefgHtElValidate="diagnostic data extractor ??",
    dbgePostErrorKGE="debug and diagnostics diagnostic data extractor Post the error for DDE invocation from KGE",
    dbgexExplicitEndInc="debug and diagnostics diagnostic data extractor explicitly end a split error processing",
    dbgexPhaseII="debug and diagnostics diagnostic data extractor phase 2",
    dbgexProcessError="debug and diagnostics diagnostic data extractor process error",
    dbgf="debug and diagnostics diagnostic inter library compile-time service",
    dbgpd="debug and diagnostics IPS package and diagnostics",
    dbgr="debug and diagnostics automatic diagnostic repository",
    dbgre="debug and diagnostics automatic diagnostic repository export/import services",
    dbgrf="debug and diagnostics automatic diagnostic repository directory and file services",
    dbgri="debug and diagnostics automatic diagnostic repository incident metadata services",
    dbgrl="debug and diagnostics automatic diagnostic repository diagnostic arb alert log",
    dbgrlr="debug and diagnostics automatic diagnostic repository diagnostic arb alert log diagnostic arb alert log",
    dbgrm="debug and diagnostics automatic diagnostic repository meta-data repository",
    dbgt="debug and diagnostics Unified tracing service, generic trace API",
    dbgtCtrl_intEvalCtrlEvent="debug and diagnostics Unified tracing service, generic trace API control internal evaluate control event",
    dbgtCtrl_intEvalTraceFilters="debug and diagnostics Unified tracing service, generic trace API control internal evaluate trace filters",
    dbgtf="debug and diagnostics Unified tracing service, generic trace API directory and file services",
    dbgtn="debug and diagnostics Unified tracing service, generic trace API UTS viewer toolkit",
    dbgtp="debug and diagnostics Unified tracing service, generic trace API UTS viewer toolkit",
    dbgv="debug and diagnostics diagnostic viewer toolkit",
    dbgvci="debug and diagnostics diagnostic viewer toolkit for command line",
    dbgvf="debug and diagnostics diagnostic viewer toolkit for traces and files",
    dbgvl="debug and diagnostics diagnostic viewer toolkit parser",
    dbgvm="debug and diagnostics diagnostic viewer toolkit for ams metadata",
    dbgvp="debug and diagnostics diagnostic viewer toolkit parser",
    dbgxtk="debug and diagnostics xml toolkit",
    dbk="debug and diagnostics",
    dbkd="debug and diagnostics kernel debug",
    dbkdChkEventRdbmsErr="debug and diagnostics kernel debug check event of RDBMS error",
    dbke="debug and diagnostics RDBMS diagnostic data extractor",
    dbked="debug and diagnostics RDBMS diagnostic data extractor Dumper",
    dbkedDefDump="debug and diagnostics RDBMS diagnostic data extractor Dumper do DDE default dump",
    dbkePostKGE_kgsf="debug and diagnostics RDBMS diagnostic data extractor Post KGE error for KGSF",
    dbkgc="debug and diagnostics generic configuration",
    dbkh="debug and diagnostics health monitor",
    dbkhicd_create_offl_dict="debug and diagnostics health monitor DBMS_HM.DBKHICD_CREATE_OFFL_DICT CREATE_OFFLINE_DICTIONARY",
    dbkhicd_create_schema="debug and diagnostics health monitor DBMS_HM.DBKHICD_CREATE_SCHEMA CREATE_SCHEMA",
    dbkhicd_drop_schema="debug and diagnostics health monitor DBMS_HM.DBKHICD_DROP_SCHEMA DROP_SCHEMA",
    dbkhicd_get_run_report="debug and diagnostics health monitor DBMS_HM.DBKHICD_GET_RUN_REPORT GET_RUN_REPORT",
    dbkhicd_isTraceEnabled="debug and diagnostics health monitor DBMS_HM.DBKHICD_ISTRACEENABLED",
    dbkhicd_run_check="debug and diagnostics health monitor DBMS_HM.DBKHICD_RUN_CHECK RUN_CHECK",
    dbkhicd_run_dde_action="debug and diagnostics health monitor DBMS_HM.DBKHICD_RUN_DDE_ACTION RUN_DDE_ACTION",
    dbkhicd_writeToTrace="debug and diagnostics health monitor DBMS_HM.DBKHICD_WRITETOTRACE SENDTRACEMSG",
    dbkiicd_addLine="debug and diagnostics DBMS_IR.DBKIICD_ADDLINE",
    dbkiicd_addToFailureSet="debug and diagnostics DBMS_IR.DBKIICD_ADDTOFAILURESET",
    dbkiicd_adviseDone="debug and diagnostics DBMS_IR.DBKIICD_ADVISEDONE",
    dbkiicd_beginFailureSet="debug and diagnostics DBMS_IR.DBKIICD_BEGINFAILURESET",
    dbkiicd_cancelFailureSet="debug and diagnostics DBMS_IR.DBKIICD_CANCELFAILURESET",
    dbkiicd_changePriority="debug and diagnostics DBMS_IR.DBKIICD_CHANGEPRIORITY",
    dbkiicd_cleanupAdvise="debug and diagnostics DBMS_IR.DBKIICD_CLEANUPADVISE",
    dbkiicd_closeFailure="debug and diagnostics DBMS_IR.DBKIICD_CLOSEFAILURE",
    dbkiicd_closeScriptFile="debug and diagnostics DBMS_IR.DBKIICD_CLOSESCRIPTFILE",
    dbkiicd_completeFailureSet="debug and diagnostics DBMS_IR.DBKIICD_COMPLETEFAILURESET",
    dbkiicd_completeRepairOption="debug and diagnostics DBMS_IR.DBKIICD_COMPLETEREPAIROPTION",
    dbkiicd_consolidateRepair="debug and diagnostics DBMS_IR.DBKIICD_CONSOLIDATEREPAIR",
    dbkiicd_createScriptFile="debug and diagnostics DBMS_IR.DBKIICD_CREATESCRIPTFILE",
    dbkiicd_createWorkingRepairSet="debug and diagnostics DBMS_IR.DBKIICD_CREATEWORKINGREPAIRSET",
    dbkiicd_getFeasAndImpact="debug and diagnostics DBMS_IR.DBKIICD_GETFEASANDIMPACT",
    dbkiicd_getLine="debug and diagnostics DBMS_IR.DBKIICD_GETFILE",
    dbkiicd_getRepairAdvice="debug and diagnostics DBMS_IR.DBKIICD_GETREPAIRADVICE",
    dbkiicd_isTraceEnabled="debug and diagnostics DBMS_IR.DBKIICD_STRACEENABLED",
    dbkiicd_openScriptFile="debug and diagnostics DBMS_IR.DBKIICD_OPENSCRIPTFILE",
    dbkiicd_reeval="debug and diagnostics DBMS_IR.DBKIICD_REEVAL",
    dbkiicd_startRepairOption="debug and diagnostics DBMS_IR.DBKIICD_STARTREPAIROPTION",
    dbkiicd_updateFeasAndImpact="debug and diagnostics DBMS_IR.DBKIICD_UPDATEFEASANDIMPACT",
    dbkiicd_updateRepairOption="debug and diagnostics DBMS_IR.DBKIICD_UPDATEREPAIROPTION",
    dbkiicd_writeToTrace="debug and diagnostics DBMS_IR.DBKIICD_WRITETOTRACE",
    dbkpls_get_location="debug and diagnostics DBMS_ADR_INTERNAL.GET_LOCATION",
    dbkpls_home_reserve_incids="debug and diagnostics DBMS_ADR_INTERNAL.RESERVE_INCIDS",
    dbkpls_incident_add_metadata="debug and diagnostics DBMS_ADR_INTERNAL.INCIDENT_ADD_METADATA",
    dbkpls_incident_create="debug and diagnostics DBMS_ADR_INTERNAL.INCIDENT_CREATE",
    dbkpls_run_purge="debug and diagnostics DBMS_ADR_INTERNAL.RUN_PURGE",
    dbkpls_set_tracefile_id="debug and diagnostics DBMS_ADR_INTERNAL.SET_TRACEFILE_IDENTIFIER",
    dbkpls_setup_client_home="debug and diagnostics DBMS_ADR_INTERNAL.CREATE_ADR_HOME",
    dbkpls_write_log="debug and diagnostics DBMS_ADR_INTERNAL.WRITE_LOG",
    dbkpls_write_trace="debug and diagnostics DBMS_ADR_INTERNAL.WRITE_TRACE",
    dbkr="debug and diagnostics RDBMS ADR",
    dbkripcs_cleanout_schema="debug and diagnostics RDBMS ADR DBMS_ADR.CLEANOUT_SCHEMA",
    dbkripds_downgrade_schema="debug and diagnostics RDBMS ADR DBMS_ADR.DOWNGRADE_SCHEMA",
    dbkripms_migrate_schema="debug and diagnostics RDBMS ADR DBMS_ADR.MIGRATE_SCHEMA",
    dbkriprs_recover_schema="debug and diagnostics RDBMS ADR DBMS_ADR.RECOVER_SCHEMA",
    dbkt="debug and diagnostics RDBMS UTS tracefile",
    dbs="database",
    dbsclose="database close",
    dbsgnmchg="database global name change",
    dbslrn="database log/db files rename",
    del="delete",
    delexe="delete execute",
    delrow="delete row procedure used by KXRD to delete or lock a row",
    dgliaio="DBMS_INTERNAL_LOG_STDBY.APPLY_IS_OFF",
    dglias="DBMS_LOGSTDBY.IS_APPLY_SERVER",
    dglibld="DBMS_INTERNAL_LOG_STDBY.BUILD",
    dglicdscn="DBMS_INTERNAL_LOG_STDBY.CAPTURE_SCN",
    dglicfs="DBMS_INTERNAL_LOG_STDBY.CREATE_FUTURE_SESSION",
    dgliclin="DBMS_INTERNAL_LOG_STDBY.CLEAR_LOGICAL_INSTANTIATION",
    dglidfs="DBMS_INTERNAL_LOG_STDBY.DESTROY_FUTURE_SESSION",
    dglidil="DBMS_LOGSTDBY.DB_IS_LOGSTDBY",
    dglidlfp="DBMS_INTERNAL_LOG_STDBY.PURGE_LOGS",
    dglidlr="DBMS_INTERNAL_LOG_STDBY.DISABLE_LOGICAL_REPLICATION",
    dglidxd="DBMS_INTERNAL_LOG_STDBY.DUMP_XDAT",
    dgliechgvec="DBMS_INTERNAL_LOG_STDBY.EDS_EVAL_CHANGE_VECTOR",
    dglielr="DBMS_INTERNAL_LOG_STDBY.ENABLE_LOGICAL_REPLICATION",
    dglieuc="DBMS_INTERNAL_LOG_STDBY.EDS_USER_CURSOR",
    dglifgbs="DBMS_INTERNAL_LOG_STDBY.FAL_REQ_BY_SEQ",
    dglifsrl="DBMS_INTERNAL_LOG_STDBY.FLUSH_SRLS",
    dgligbchk="DBMS_INTERNAL_LOG_STDBY.GUARD_BYPASS_CHK",
    dgligboffi="DBMS_INTERNAL_LOG_STDBY.GUARD_PASS_OFF",
    dgligboni="DBMS_INTERNAL_LOG_STDBY.GUARD_BYPASS_ON",
    dgligchk="DBMS_INTERNAL_LOG_STDBY.GUARD_CHECK",
    dgligss="DBMS_INTERNAL_LOG_STDBY.GET_SAFE_SCN",
    dglilm="DBMS_INTERNAL_LOG_STDBY.LOCK_LSBY_META",
    dglilmc="DBMS_INTERNAL_LOG_STDBY.LOCK_LSBY_META DBMS_INTERNAL_LOG_STDBY.UNLOCK_LSBY_CON",
    dglilmd="DBMS_INTERNAL_LOG_STDBY.LOCK_LSBY_META DBMS_INTERNAL_LOG_STDBY.LOCK_LSBY_META",
    dglirl="DBMS_INTERNAL_LOG_STDBY.REPAIR_LSBY_INTERNAL",
    dglisd_nowait="DBMS_INTERNAL_LOG_STDBY.APPLY_STOP_NOWAIT",
    dglisgnr="DBMS_INTERNAL_LOG_STDBY.SET_GUARD_NOT_READY",
    dglislin="DBMS_INTERNAL_LOG_STDBY.SET_LOGICAL_INSTANTIATION",
    dgliudo="DBMS_INTERNAL_LOG_STDBY.UPDATE_DYNAMIC_LSBY_OPTION",
    dgliulm="DBMS_INTERNAL_LOG_STDBY.UNLOCK_LSBY_META",
    dglius="DBMS_INTERNAL_LOG_STDBY.SEQUENCE_UPDATE",
    dglr_build_main="DBMS_ROLLING.BUILD_PLAN",
    dglr_destroy_main="DBMS_ROLLING.DESTROY_PLAN",
    dglr_finish_main="DBMS_ROLLING.FINISH_PLAN",
    dglr_init_main="DMBS_ROLLING.INIT_PLAN",
    dglr_rollback_main="DBMS_ROLLING.ROLLBACK_PLAN",
    dglr_set_main="DBMS_ROLLING.SET_PARAMETER",
    dglr_set_main_ns="DBMS_ROLLING.SET_PARAMETER (additional definition?)",
    dglr_set_upg_flags="DBMS_INTERNAL_ROLLING.SET_UPGRADE_FLAGS",
    dglr_start_main="DBMS_ROLLING.START_PLAN",
    dglr_switch_main="DBMS_ROLLING.SWITCHOVER",
    di="PLSQL diana",
    diugdn="PLSQL diana utility get diana node",
    dixdrv="PLSQL apps ??",
    dmkglcre="DMP_SEC.KGL_CREATE_LIB",
    dmutil="DBMS_DATA_MINING utilities",
    dmutilECol="DBMS_DATA_MINING utilities DBMS_DATA_MINING_TRANSFORM.EXPR_COL_LIB",
    dmutilEMrg="DBMS_DATA_MINING utilities DBMS_DATA_MINING_TRANSFORM.EXPR_MERGE_LIB",
    dmutilFeat="DBMS_DATA_MINING utilities ODM_MODEL_UTIL.DM_FEATURE",
    dmutilTxtTokensBfile="DBMS_DATA_MINING utilities ODM_UTIL.DM_TXT_TOKENS",
    dmutilTxtTokensBlob="DBMS_DATA_MINING utilities ODM_UTIL.DM_TXT_TOKENS",
    dmutilTxtTokensClob="DBMS_DATA_MINING utilities ODM_UTIL.DM_TXT_TOKENS",
    dmutilTxtTokensStr="DBMS_DATA_MINING utilities ODM_UTIL.DM_TXT_TOKENS",
    dr="text",
    dre="text index",
    drepprep="text index perform the document indexing",
    drex="text index query",
    drg="text index",
    drl="text index",
    drn="text index",
    drp="text query",
    drs="text index",
    drw="text query",
    dry="text query",
    dsy="drop synonym",
    dtb="drop table",
    dtbdrp="drop table ??",
    dtbdrv="drop table ??",
    dteerr="date error handler",
    err="error recovery",
    erroep="error recovery oracle error position",
    eva="evaluate",
    evacst="evaluate cast",
    evadid="evaluate date: internal date to date format",
    evadis="evaluate date: internal date to string",
    evadsd="evaluate date string to date",
    evaopn2="evaluate operand",
    evapls="evaluate plsql function",
    evareo="evaluate relational operator. Compare two operands of relational expression. After compare, branch on operator type and return true or false.",
    evaval="evaluate val",
    evaxl="evaluate vector translate",
    expcop="evaluate callback operator list",
    expeal="evaluate its argument AND list. It returns true if argument is true, false if argument is false, and unknown if argument is unkown.",
    expepr="evaluate the argument predicate. It returns the result of the evaluation. If the operators ODFFNEARG flas is set (currently only for OPTLNN), dont evaluate the operands.",
    fplib="filter projection library (exadata smartscan)",
    getpid="get process id",
    gipc="grid inter process calls",
    gra="grant/revoke",
    gradrv="grant/revoke driver",
    gslcsq_add_s="DBMS_LDAP_API_FFI.LDAP_ADD_S",
    gslcsq_authenticate_user="DBMS_LDAP_API_FFI.ORA_LDAP_AUTHENTICATE_USER",
    gslcsq_authenticate_user_ext="DBMS_LDAP_API_FFI.ORA_LDAP_AUTHENTICATE_USER DBMS_LDAP_API_FFI.ORA_LDAP_AUTHENTICATE_USER_EXT",
    gslcsq_ber_free="DBMS_LDAP_API_FFI.BER_FREE",
    gslcsq_bind_s="DBMS_LDAP_API_FFI.LDAP_BIND_S",
    gslcsq_check_grp_membership="DBMS_LDAP_API_FFI.ORA_LDAP_CHECK_GRP_MEMBERSHIP",
    gslcsq_check_user_scription="DBMS_LDAP_API_FFI.ORA_LDAP_CHECK_USER_SCRIPTION",
    gslcsq_compare_s="DBMS_LDAP_API_FFI.LDAP_COMPARE_S",
    gslcsq_count_entries="DBMS_LDAP_API_FFI.LDAP_COUNT_ENTRIES",
    gslcsq_create_grp_handle="DBMS_LDAP_API_FFI.ORA_LDAP_CREATE_GRP_HANDLE",
    gslcsq_create_mod_array="DBMS_LDAP_API_FFI.CREATE_MOD_ARRAY",
    gslcsq_create_mod_pset="DBMS_LDAP_API_FFI.ORA_LDAP_CREATE_MOD_PSET",
    gslcsq_create_srv_handle="DBMS_LDAP_API_FFI.ORA_LDAP_CREATE_SRV_HANDLE",
    gslcsq_create_sub_handle="DBMS_LDAP_API_FFI.ORA_LDAP_CREATE_SUB_HANDLE",
    gslcsq_create_user_handle="DBMS_LDAP_API_FFI.ORA_LDAP_CREATE_USER_HANDLE",
    gslcsq_delete_s="DBMS_LDAP_API_FFI.LDAP_DELETE_S",
    gslcsq_err2string="DBMS_LDAP_API_FFI.LDAP_ERR2STRING",
    gslcsq_explode_dn="DBMS_LDAP_API_FFI.LDAP_EXPLODE_DN",
    gslcsq_first_attr="DBMS_LDAP_API_FFI.LDAP_FIRST_ATTRIBUTE",
    gslcsq_first_entry="DBMS_LDAP_API_FFI.LDAP_FIRST_ENTRY",
    gslcsq_free_handle="DBMS_LDAP_API_FFI.ORA_LDAP_FREE_HANDLE",
    gslcsq_free_mod_array="DBMS_LDAP_API_FFI.FREE_MOD_ARRAY",
    gslcsq_free_mod_pset="DBMS_LDAP_API_FFI.ORA_LDAP_FREE_MOD_PSET",
    gslcsq_free_pset_coll="DBMS_LDAP_API_FFI.ORA_LDAP_FREE_PSET_COLL",
    gslcsq_get_avail_srvs="DBMS_LDAP_API_FFI.ORA_LDAP_GET_AVAIL_SRVS",
    gslcsq_get_dbcharset_name="DBMS_LDAP_API_FFI.LDAP_GET_DBCHARSET_NAME",
    gslcsq_get_dn="DBMS_LDAP_API_FFI.LDAP_GET_DN",
    gslcsq_get_grp_dn="DBMS_LDAP_API_FFI.ORA_LDAP_GET_GRP_DN",
    gslcsq_get_grp_membership="DBMS_LDAP_API_FFI.ORA_LDAP_GET_GRP_MEMBERSHIP",
    gslcsq_get_grp_props="DBMS_LDAP_API_FFI.ORA_LDAP_GET_GRP_PROPS",
    gslcsq_get_prop_names="DBMS_LDAP_API_FFI.ORA_LDAP_GET_PROP_NAMES",
    gslcsq_get_prop_values="DBMS_LDAP_API_FFI.ORA_LDAP_GET_PROP_VALUES",
    gslcsq_get_prop_values_blob="DBMS_LDAP_API_FFI.ORA_LDAP_GET_PROP_VALUES DBMS_LDAP_API_FFI.ORA_LDAP_GET_PROP_VALUES_BLOB",
    gslcsq_get_prop_values_len="DBMS_LDAP_API_FFI.ORA_LDAP_GET_PROP_VALUES DBMS_LDAP_API_FFI.ORA_LDAP_GET_PROP_VALUES_LEN",
    gslcsq_get_scribed_srvs="DBMS_LDAP_API_FFI.ORA_LDAP_GET_SCRIBED_SRVS",
    gslcsq_get_scribed_users="DBMS_LDAP_API_FFI.ORA_LDAP_GET_SCRIBED_USERS",
    gslcsq_get_session_info="DBMS_LDAP_API_FFI.LDAP_GET_SESSION_INFO",
    gslcsq_get_sub_dn="DBMS_LDAP_API_FFI.ORA_LDAP_GET_SUB_DN",
    gslcsq_get_sub_ext_props="DBMS_LDAP_API_FFI.ORA_LDAP_GET_SUB_EXT_PROPS",
    gslcsq_get_sub_props="DBMS_LDAP_API_FFI.ORA_LDAP_GET_SUB_PROPS",
    gslcsq_get_tracelvl="DBMS_LDAP_API_FFI.LDAP_GET_TRACE_LEVEL",
    gslcsq_get_user_dn="DBMS_LDAP_API_FFI.ORA_LDAP_GET_USER_DN",
    gslcsq_get_user_ext_props="DBMS_LDAP_API_FFI.ORA_LDAP_GET_USER_EXT_PROPS",
    gslcsq_get_user_props="DBMS_LDAP_API_FFI.ORA_LDAP_GET_USER_PROPS",
    gslcsq_get_user_props_and_auth="DBMS_LDAP_API_FFI.ORA_LDAP_GET_USER_PROPS DBMS_LDAP_API_FFI.ORA_LDAP_GET_USER_PROPS_AUTH",
    gslcsq_get_values="DBMS_LDAP_API_FFI.LDAP_GET_VALUES",
    gslcsq_get_values_blob="DBMS_LDAP_API_FFI.LDAP_GET_VALUES DBMS_LDAP_API_FFI.LDAP_GET_VALUES_BLOB",
    gslcsq_get_values_len="DBMS_LDAP_API_FFI.LDAP_GET_VALUES DBMS_LDAP_API_FFI.LDAP_GET_VALUES_LEN",
    gslcsq_init="DBMS_LDAP_API_FFI.LDAP_INIT",
    gslcsq_locate_sub_for_user="DBMS_LDAP_API_FFI.ORA_LDAP_LOCATE_SUB_FOR_USER",
    gslcsq_memfree="DBMS_LDAP_API_FFI.LDAP_MEMFREE",
    gslcsq_modify_s="DBMS_LDAP_API_FFI.LDAP_MODIFY_S",
    gslcsq_modrdn2_s="DBMS_LDAP_API_FFI.LDAP_MODRDN2_S",
    gslcsq_msgfree="DBMS_LDAP_API_FFI.LDAP_MSGFREE",
    gslcsq_next_attr="DBMS_LDAP_API_FFI.LDAP_NEXT_ATTRIBUTE",
    gslcsq_next_entry="DBMS_LDAP_API_FFI.LDAP_NEXT_ENTRY",
    gslcsq_norm_dn_with_case="DBMS_LDAP_API_FFI.ORA_LDAP_NORM_DN_WITH_CASE",
    gslcsq_open_ssl="DBMS_LDAP_API_FFI.LDAP_OPEN_SSL",
    gslcsq_populate_mod_array="DBMS_LDAP_API_FFI.POPULATE_MOD_ARRAY",
    gslcsq_populate_mod_array_blob="DBMS_LDAP_API_FFI.POPULATE_MOD_ARRAY DBMS_LDAP_API_FFI.POPULATE_MOD_ARRAY",
    gslcsq_populate_mod_pset="DBMS_LDAP_API_FFI.ORA_LDAP_POPULATE_MOD_PSET",
    gslcsq_rename_s="DBMS_LDAP_API_FFI.LDAP_RENAME_S",
    gslcsq_scribe_user="DBMS_LDAP_API_FFI.ORA_LDAP_SCRIBE_USER",
    gslcsq_search_s="DBMS_LDAP_API_FFI.LDAP_SEARCH_S",
    gslcsq_search_st="DBMS_LDAP_API_FFI.LDAP_SEARCH_S DBMS_LDAP_API_FFI.LDAP_SEARCH_ST",
    gslcsq_set_grp_handle_props="DBMS_LDAP_API_FFI.ORA_LDAP_SET_GRP_HANDLE_PROPS",
    gslcsq_set_tracelvl="DBMS_LDAP_API_FFI.LDAP_SET_TRACE_LEVEL",
    gslcsq_set_user_handle_props="DBMS_LDAP_API_FFI.ORA_LDAP_SET_USER_HANDLE_PROPS",
    gslcsq_set_user_props="DBMS_LDAP_API_FFI.ORA_LDAP_SET_USER_PROPS",
    gslcsq_simple_bind_s="DBMS_LDAP_API_FFI.LDAP_SIMPLE_BIND_S",
    gslcsq_unbind_s="DBMS_LDAP_API_FFI.LDAP_UNBIND_S",
    gslcsq_unscribe_user="DBMS_LDAP_API_FFI.ORA_LDAP_UNSCRIBE_USER",
    gslcsq_value_free_blob="DBMS_LDAP_API_FFI.VALUE_FREE_BLOB",
    gwm="global service manager (GSM)",
    gwm_call_schagent="global service manager (GSM) DBMS_GSM_FIX.GWM_CALL_SCHAGENT",
    gwm_db_info="global service manager (GSM) DBMS_GSM_FIX.GWM_DB_INFO",
    gwm_trace_output="global service manager (GSM) DBMS_GSM_FIX.GWM_TRACE_OUTPUT",
    gwm_validate_db="global service manager (GSM) DBMS_GSM_FIX.GWM_VALIDATE_DB",
    hcsOdboClosePCo="DBMS_MDX_ODBO.CLOSE_CALLOUT",
    hcsOdboConvertFormatStringPCo="DBMS_MDX_ODBO.EXECUTE_CONVERT_FMT_STR",
    hcsOdboExecutePCo="DBMS_MDX_ODBO.EXECUTE_CALLOUT",
    hcsOdboGetAxisDataPCo="DBMS_MDX_ODBO.GET_AXIS_DATA_CALLOUT",
    hcsOdboGetCellDataPCo="DBMS_MDX_ODBO.GET_CELL_DATA_CALLOUT",
    hcsOdboGetKeywordsPCo="DBMS_MDX_ODBO.GET_MDX_KEYWORD_NAMES_CALLOUT",
    hcsOdboGetMbrRowsetPCo="DBMS_MDX_ODBO.GET_MEMBERS_ROWSET",
    hcsOdboGetPropertyValuesPCo="DBMS_MDX_ODBO.GET_MDX_PROP_VALUES_CALLOUT",
    hcsOdboGetXFunctionsPCo="DBMS_MDX_ODBO.GET_MDX_FUNCTION_NAMES_CALLOUT",
    hcsOdboLogCloseSchemaRowsetPCo="DBMS_MDX_ODBO.LOG_CLOSE_SCHEMA_ROWSET",
    hcsOdboLogSchemaRowsetPCo="DBMS_MDX_ODBO.LOG_SCHEMA_ROWSET",
    hcsOdboMdxComponentIdPCo="DBMS_MDX_ODBO.EXECUTE_MDX_COMPONENT_ID",
    hep="PLSQL_KG_Interface",
    hsh="PLSQL_KG_Interface",
    ins="insert",
    inscovexe="insert ??",
    insdlexe="insert direct load execute",
    insdrv="insert ??",
    insexe="insert execute",
    insidx="insert Insert indexed keys into the indexes after each row is inserted into the table",
    insini="insert initialisation",
    insrow="insert Fetch a row for insertion. This is called back by multirow insert",
    ipc="inter process calls",
    ipclw="inter process calls lightweight (exafusion)",
    ipcor="inter process calls on wire",
    ipp="internal probe processor capabilities(?)",
    iscs_is_oracle_cloud="is this oracle cloud?",
    joe="java runtime environment(?)",
    jom="java",
    jon="java",
    jox="java jit compiler",
    joxas="java jit compiler dbms_xa",
    joxas_commit="java jit compiler dbms_xa DBMS_XA.INTERNAL_JOXAS_COMMIT XA_COMMIT",
    joxas_end="java jit compiler dbms_xa DBMS_XA.INTERNAL_JOXAS_END XA_END",
    joxas_forget="java jit compiler dbms_xa DBMS_XA.INTERNAL_JOXAS_FORGET XA_FORGET",
    joxas_getlastoer="java jit compiler dbms_xa DBMS_XA.INTERNAL_JOXAS_GETLASTOER XA_GETLASTOER",
    joxas_prepare="java jit compiler dbms_xa DBMS_XA.INTERNAL_JOXAS_PREPARE XA_PREPARE",
    joxas_rollback="java jit compiler dbms_xa DBMS_XA.INTERNAL_JOXAS_ROLLBACK XA_ROLLBACK",
    joxas_settimeout="java jit compiler dbms_xa DBMS_XA.INTERNAL_JOXAS_SETTMO XA_SETTIMEOUT",
    joxas_start="java jit compiler dbms_xa DBMS_XA.INTERNAL_JOXAS_START XA_START",
    joxcsys="java jit compiler create or replace java system",
    js="job scheduing",
    jsaAddAgentCert="job scheduing DBMS_ISCHED.ADD_AGENT_CERT",
    jsaAddEvtQSub="job scheduing DBMS_ISCHED.ADD_EVENT_QUEUE_SUBSCRIBER",
    jsaAddGroupMember="job scheduing DBMS_ISCHED.ADD_GROUP_MEMBER",
    jsaAddMemberWgr="job scheduing DBMS_ISCHED.ADD_WINDOW_GROUP_MEMBER",
    jsaAlterChn="job scheduing DBMS_ISCHED.ALTER_CHAIN",
    jsaAlterStepChn="job scheduing DBMS_ISCHED.ALTER_CHAIN_STEP",
    jsaAssArgJob="job scheduing DBMS_ISCHED.SET_JOB_ARGUMENT_VALUE",
    jsaAuditSysPriv="job scheduing DBMS_ISCHED.AUDIT_SYS_PRIV",
    jsaCheckObjectPrivs="job scheduing DBMS_ISCHED_UTL.CHECK_OBJECT_PRIVS",
    jsaCheckPurge="job scheduing DBMS_ISCHED.CHECK_PURGE",
    jsaCloseWin="job scheduing DBMS_ISCHED.CLOSE_WINDOW",
    jsaCompleteJobRun="job scheduing DBMS_ISCHED.COMPLETE_JOB_RUN",
    jsaCopyJob="job scheduing DBMS_ISCHED.COPY_JOB",
    jsaCreateAgentDestination="job scheduing DBMS_ISCHED.CREATE_AGENT_DESTINATION",
    jsaCreateCls="job scheduing DBMS_ISCHED.CREATE_JOB_CLASS",
    jsaCreateDatabaseDestination="job scheduing DBMS_ISCHED.CREATE_DATABASE_DESTINATION",
    jsaCreateFileWatch="job scheduing DBMS_ISCHED.CREATE_FILE_WATCH",
    jsaCreateGroup="job scheduing DBMS_ISCHED.CREATE_GROUP",
    jsaCreateJob="job scheduing DBMS_ISCHED.CREATE_JOB",
    jsaCreateJobStep="job scheduing DBMS_ISCHED.CREATE_JOB DBMS_ISCHED.CREATE_CHAIN_STEP",
    jsaCreatePrg="job scheduing DBMS_ISCHED.CREATE_PROGRAM",
    jsaCreateResource="job scheduing DBMS_ISCHED.CREATE_RESOURCE",
    jsaCreateSch="job scheduing DBMS_ISCHED.CREATE_SCHEDULE",
    jsaCreateWalletDir="job scheduing DBMS_ISCHED.CREATE_WALLET_DIR_CALLOUT",
    jsaCreateWin="job scheduing DBMS_ISCHED.CREATE_WINDOW",
    jsaDisable="job scheduing DBMS_ISCHED.DISABLE",
    jsaDropAgentDestination="job scheduing DBMS_ISCHED.DROP_AGENT_DESTINATION",
    jsaDropArgJob="job scheduing DBMS_ISCHED.RESET_JOB_ARGUMENT_VALUE",
    jsaDropArgPrg="job scheduing DBMS_ISCHED.DROP_PROGRAM_ARGUMENT",
    jsaDropCls="job scheduing DBMS_ISCHED.DROP_JOB_CLASS",
    jsaDropDatabaseDestination="job scheduing DBMS_ISCHED.DROP_DATABASE_DESTINATION",
    jsaDropFileWatch="job scheduing DBMS_ISCHED.DROP_FILE_WATCHER",
    jsaDropGlobalAttrib="job scheduing DBMS_ISCHED.DROP_SCHEDULER_ATTRIBUTE",
    jsaDropGroup="job scheduing DBMS_ISCHED.DROP_GROUP",
    jsaDropJob="job scheduing DBMS_ISCHED.DROP_JOB",
    jsaDropPrg="job scheduing DBMS_ISCHED.DROP_PROGRAM",
    jsaDropResource="job scheduing DBMS_ISCHED.DROP_RESOURCE",
    jsaDropSch="job scheduing DBMS_ISCHED.DROP_SCHEDULE",
    jsaDropWgr="job scheduing DBMS_ISCHED.DROP_WINDOW_GROUP",
    jsaDropWin="job scheduing DBMS_ISCHED.DROP_WINDOW",
    jsaEnable="job scheduing DBMS_ISCHED.ENABLE",
    jsaEnqEndChainJob="job scheduing DBMS_ISCHED.ENQ_END_CHAIN_JOB",
    jsaFileTransfer="job scheduing DBMS_ISCHED.FILE_TRANSFER",
    jsaGenAgentPassSalt="job scheduing DBMS_ISCHED.GEN_AGENT_PASS_SALT",
    jsaGetAgentPassVer="job scheduing DBMS_ISCHED.GET_AGENT_PASS_VERIFIER",
    jsaGetBoolAttrib="job scheduing DBMS_ISCHED.GET_BOOL_ATTRIBUTE",
    jsaGetCharAttrib="job scheduing DBMS_ISCHED.GET_CHAR_ATTRIBUTE",
    jsaGetCredPass="job scheduing DBMS_ISCHED.GET_CREDENTIAL_PASSWORD",
    jsaGetDateAttrib="job scheduing DBMS_ISCHED.GET_DATE_ATTRIBUTE",
    jsaGetGlobalAttrib="job scheduing DBMS_ISCHED.GET_SCHEDULER_ATTRIBUTE",
    jsaGetIntAttrib="job scheduing DBMS_ISCHED.GET_INT_ATTRIBUTE",
    jsaGetInterAttrib="job scheduing DBMS_ISCHED.GET_INTERVAL_ATTRIBUTE",
    jsaGetTns="job scheduing DBMS_ISCHED.GET_TNS_NVPAIR",
    jsaNotifyServiceMetricsUpdate="job scheduing DBMS_ISCHED.NTFY_SVC_METRICS_UPDT",
    jsaObfCredPass="job scheduing DBMS_ISCHED.OBFUSCATE_CREDENTIAL_PASSWORD",
    jsaOpenWin="job scheduing DBMS_ISCHED.OPEN_WINDOW",
    jsaRaiseError="job scheduing DBMS_ISCHED.RAISE_ORACLE_ERROR",
    jsaRegArgPrg="job scheduing DBMS_ISCHED.DEFINE_PROGRAM_ARGUMENT",
    jsaRegisterCallback="job scheduing DBMS_ISCHED.REGISTER_CALLBACK",
    jsaRemEvtQSub="job scheduing DBMS_ISCHED.REMOVE_EVENT_QUEUE_SUBSCRIBER",
    jsaRemoveGroupMember="job scheduing DBMS_ISCHED.REMOVE_GROUP_MEMBER",
    jsaRemoveMemberWgr="job scheduing DBMS_ISCHED.REMOVE_WINDOW_GROUP_MEMBER",
    jsaRunJob="job scheduing DBMS_ISCHED.RUN_JOB",
    jsaSetAgentPass="job scheduing DBMS_ISCHED.SET_AGENT_REGISTRATION",
    jsaSetBoolAttrib="job scheduing DBMS_ISCHED.SET_BOOL_ATTRIBUTE",
    jsaSetCharAttrib="job scheduing DBMS_ISCHED.SET_CHAR_ATTRIBUTE",
    jsaSetDateAttrib="job scheduing DBMS_ISCHED.SET_DATE_ATTRIBUTE",
    jsaSetGlobalAttrib="job scheduing DBMS_ISCHED.SET_SCHEDULER_ATTRIBUTE",
    jsaSetIntAttrib="job scheduing DBMS_ISCHED.SET_INT_ATTRIBUTE",
    jsaSetInterAttrib="job scheduing DBMS_ISCHED.SET_INTERVAL_ATTRIBUTE",
    jsaSetListAttrib="job scheduing DBMS_ISCHED.SET_LIST_ATTRIBUTE",
    jsaSetResourceConstraint="job scheduing DBMS_ISCHED.SET_RESOURCE_CONSTRAINT",
    jsaStopJob="job scheduing DBMS_ISCHED.STOP_JOB",
    jsaTime="job scheduing DBMS_ISCHED.STIME",
    jsaTranslateJssuErrorCode="job scheduing DBMS_IJOB.TRANSLATE_JSSU_ERROR_CODE",
    jsaValidateLocalCred="job scheduing DBMS_ISCHED.CHECK_LOCAL_CREDENTIAL",
    jsbaBatchJobOps="job scheduing DBMS_ISCHED.BATCH_JOB_OPS",
    jsbaCreateJobs="job scheduing DBMS_ISCHED.CREATE_JOBS",
    jsbaSetJobAttribs="job scheduing DBMS_ISCHED.SET_JOB_ATTRIBUTES",
    jsbaShowErrors="job scheduing DBMS_ISCHED.SHOW_ERRORS",
    jskeCheckAQCbkPrivs="job scheduing DBMS_ISCHED.CHECK_AQ_CBK_PRIVS",
    jskeCheckReqPrivs="job scheduing DBMS_ISCHED.CHECK_REQUEST_PRIVS",
    jskeEventCondFilter="job scheduing DBMS_ISCHED.EVENT_COND_FILTER",
    jskeFileWatchFilter="job scheduing DBMS_ISCHED.FILE_WATCH_FILTER",
    jskeGetLastFWRun="job scheduing DBMS_ISCHED.GET_LAST_RUN_TIME",
    jskeGetSchLimMsgid="job scheduing DBMS_ISCHED.RAISE_SCHLIM_EVT",
    jskeRecResendReq="job scheduing DBMS_ISCHED.RECORD_RESENT_REQUEST",
    jskeSetEvtMsgArg="job scheduing DBMS_ISCHED.SET_EVTMSG_ARG",
    jskeSetLastFWRun="job scheduing DBMS_ISCHED.SET_LAST_RUN_TIME",
    jsxsExecPrePostApply="job scheduing DBMS_ISCHED.EXEC_JOB_RUN_LSA",
    jsxsGetSysTimeZoneName="job scheduing DBMS_ISCHED.GET_SYS_TIME_ZONE_NAME",
    jzn="json",
    k="kernel",
    k2="kernel distributed execution",
    k2c="kernel distributed execution kernel to kernel",
    k2d="kernel distributed execution global unique database id",
    k2g="kernel distributed execution global transction id",
    k2gcrt="kernel distributed execution global transction id create a distributed transaction",
    k2gihash="kernel distributed execution global transction id calculate a hash value from a global transaction id",
    k2glpr="kernel distributed execution global transction id print local tran id",
    k2gt="kernel distributed execution global transction id commit global transaction",
    k2i="kernel distributed execution indoubt table interface",
    k2l="kernel distributed execution log records and log interface",
    k2labo="kernel distributed execution log records and log interface abort session: first abort aborts tx",
    k2lcom="kernel distributed execution log records and log interface commit session, first commit commits tx",
    k2lpre="kernel distributed execution log records and log interface prepare: enter prepared state for session, if last session, prepare tx",
    k2r="kernel distributed execution multiple RPC",
    k2rbeg="kernel distributed execution multiple RPC RPC for begin transaction",
    k2s="kernel distributed execution server",
    k2send="kernel distributed execution server server end transaction - 2PC state machine",
    k2serv="kernel distributed execution server service a transaction manager RPC",
    k2sfor="kernel distributed execution server forget current session of current transaction",
    k2udio="kernel distributed execution message unmarshalling",
    k2v="kernel distributed execution recovery",
    ka="kernel access",
    kad="kernel access objects anydata/images",
    kaf="kernel access fetch",
    kau="kernel access perform inserts, updates, deletes modifying indexes on tables",
    kaudel="kernel access perform inserts, updates, deletes modifying indexes on tables delete row from table and modify indexes (?)",
    kauupd="kernel access perform inserts, updates, deletes modifying indexes on tables update table and modify indexes",
    kauxsin="kernel access perform inserts, updates, deletes modifying indexes on tables insert a key into x index segment(s) only",
    kb="kernel backup",
    kbc="kernel backup backup appliance containers",
    kbrs="kernel backup backup appliance",
    kc="kernel cache",
    kcb="kernel cache buffers",
    kcb_sync_last_change="kernel cache buffers call kcrf_commit_force to sync redo",
    kcbapl="kernel cache buffers apply (changes to buffer; kcoapl executes changes)",
    kcbb="kernel cache buffers databasewriter",
    kcbbacq="kernel cache buffers databasewriter active checkpoint queue",
    kcbbdrv="kernel cache buffers databasewriter central write driver",
    kcbblwr="kernel cache buffers databasewriter create redo records for list of blocks written (media recovery marker)",
    kcbbwlru="kernel cache buffers databasewriter write buffers from one of the LRU write lists",
    kcbbxsv="kernel cache buffers databasewriter take single buffer and check if we have to return to LRU",
    kcbcbo="kernel cache buffers call begin object checkpoint (?)",
    kcbchg="kernel cache buffers change a block",
    kcbchg1="kernel cache buffers change a block change a block",
    kcbchk="kernel cache buffers ??",
    kcbchk_ctx="kernel cache buffers check context, execute check functions",
    kcbdbh="kernel cache buffers dump one buffer",
    kcbdnb="kernel cache buffers dump n buffers",
    kcbema="kernel cache buffers exam and maybe apply",
    kcbgcur="kernel cache buffers get current read",
    kcbget="kernel cache buffers get buffer (retry scan performed earlier by kcbgtcr)",
    kcbgtcr="kernel cache buffers get consistent read",
    kcbh="kernel cache buffers header",
    kcbhfix_tail="kernel cache buffers header update tail (low-order two bytes of the scn+block type+block sequence number)",
    kcbhlchk="kernel cache buffers header logical check",
    kcbhsbs_ub8="kernel cache buffers header write SCN base and wrap in buffer header",
    kcbhxor="kernel cache buffers header xor buffer contents",
    kcbhxoro="kernel cache buffers header xor buffer contents operation",
    kcbi_="kernel cache buffers shared IO pool",
    kcbi_get_rsv_bh="kernel cache buffers shared IO pool get reserved buffer header",
    kcbi_issue_io="kernel cache buffers shared IO pool issue IO",
    kcbi_issue_write="kernel cache buffers shared IO pool issue write",
    kcbibr="kernel cache buffers invalidate range of blocks",
    kcbifc="kernel cache buffers full database caching mode (?)",
    kcbipnns="kernel cache buffers is (buffer) pinned (no statistics)",
    kcbism="kernel cache buffers is medium (selection of read strategy)",
    kcbispnd="kernel cache buffers is (buffer) pinned (is buffer pinned stat is incremented)",
    kcbivlo="kernel cache buffers is very large object (selection of read strategy)",
    kcbk="kernel cache buffers checkpoint queue manipulation",
    kcbk_prefetch_track="kernel cache buffers checkpoint queue manipulation db_block_prefetch administration",
    kcbklbc="kernel cache buffers checkpoint queue manipulation link buffer into ckpt queue",
    kcbkllrba="kernel cache buffers checkpoint queue manipulation find lowest low RBA on checkpoint queues",
    kcbl="kernel cache buffers (loader) direct io routines",
    kcblci="kernel cache buffers (loader) direct io routines check input",
    kcblgt="kernel cache buffers (loader) direct io routines get buffer",
    kcblibr="kernel cache buffers (loader) direct io routines locally invalidate block range or object",
    kcblin="kernel cache buffers (loader) direct io routines operations for redo-less write interface",
    kcblio="kernel cache buffers direct io routines ??",
    kcblnb="kernel cache buffers (loader) direct io routines load new buffer",
    kcblnb_dscn="kernel cache buffers (loader) direct io routines load new buffer load new buffer",
    kcblrd="kernel cache buffers (loader) direct io routines initiate read ahead",
    kcblrl="kernel cache buffers (loader) direct io routines load release buffer",
    kcblrr="kernel cache buffers direct io routines ??",
    kcblrs="kernel cache buffers (loader) direct io routines read submit",
    kcblsy="kernel cache buffers (loader) direct io routines load sync IO",
    kcbnlc="kernel cache buffers analyze cleanout",
    kcbo="kernel cache buffers object queue",
    kcbo_ckpt_obj="kernel cache buffers object queue fast object checkpoint",
    kcbpioq="kernel cache buffers physical IO queueing (batched in planline)",
    kcbpioqAddIO="kernel cache buffers physical IO queueing (batched in planline) add IO to batched IO",
    kcbpioqcInit="kernel cache buffers physical IO queueing (batched in planline) initialize memory area in pga",
    kcbpioqInit="kernel cache buffers physical IO queueing (batched in planline) initialize memory area in shared pool",
    kcbpioqRegisterClient="kernel cache buffers physical IO queueing (batched in planline) create memory area in shared pool main function",
    kcbpioqWillWaitForIO="kernel cache buffers physical IO queueing (batched in planline) save IO for batching",
    kcbpsod="kernel cache buffers ??",
    kcbr_apply_pending="kernel cache buffers apply changed pending read completion",
    kcbr_media_apply="kernel cache buffers apply change vector for media recovery",
    kcbrbr="kernel cache buffers reuse block range: called by space management",
    kcbrbuf="kernel cache buffers get a recovery buffer",
    kcbrls="kernel cache buffers release pin",
    kcbs="kernel cache buffers simulator",
    kcbsacc="kernel cache buffers simulator access",
    kcbshlc="kernel cache buffers simulator ??",
    kcbsod="kernel cache buffers simulator ??",
    kcbtema="kernel cache buffers thread recovery examine and maybe apply",
    kcbtse="kernel cache buffers tablespace encryption",
    kcbtse_encdec_tbsblk="kernel cache buffers tablespace encryption block encrypt",
    kcbtse_get_tbskey="kernel cache buffers tablespace encryption get tablespace key, decrypt the key if needed",
    kcbtsn="kernel cache buffers get tablespace number",
    kcbv="kernel cache buffers vlm (very large memory)",
    kcbw="kernel cache buffers working set management",
    kcbz="kernel cache buffers subroutines for kcb",
    kcbz_encdec_tbsblk="kernel cache buffers subroutines for kcb tablespace block encrypt",
    kcbz_fp_cr="kernel cache buffers subroutines for kcb fast pin consistent read",
    kcbz_fp_shr="kernel cache buffers subroutines for kcb fast pin shared mode",
    kcbz_fr_buf="kernel cache buffers subroutines for kcb free buffer",
    kcbz_free_table_scan_read_buffer="kernel cache buffers subroutines for kcb free buffered multiblock read buffer",
    kcbz_table_scan_read="kernel cache buffers subroutines for kcb buffered multiblock read main loop",
    kcbzar="kernel cache buffers subroutines for kcb release buffer",
    kcbzcb="kernel cache buffers subroutines for kcb create/maybe clone buffer",
    kcbzdh="kernel cache buffers subroutines for kcb dump buffer routine",
    kcbzfb="kernel cache buffers subroutines for kcb format block",
    kcbzfs="kernel cache buffers subroutines for kcb free state object (buffer handle/kcbbf)",
    kcbzgb="kernel cache buffers subroutines for kcb get cr/read/rec (space for) buffer with dba/class; set buffer state to reading",
    kcbzgm="kernel cache buffers subroutines for kcb get (space for) multiblock buffer",
    kcbzgs="kernel cache buffers subroutines for kcb get state object (buffer handle/kcbbf)",
    kcbzgsf="kernel cache buffers subroutines for kcb get state object (buffer handle/kcbbf) fast",
    kcbzgws="kernel cache buffers subroutines for kcb get write list",
    kcbzib="kernel cache buffers subroutines for kcb input buffer (reads a block from disk into a buffer)",
    kcbzibmlt="kernel cache buffers subroutines for kcb input buffer (reads a block from disk into a buffer) for multiblock read",
    kcbzpb="kernel cache buffers subroutines for kcb prepare block for write. calls kcbhpwb to prepare block for write",
    kcbztek_trace_blk="kernel cache buffers subroutines for kcb tablespace encryption check(?)",
    kcbzvb="kernel cache buffers subroutines for kcb verify buffer",
    kcbzwb="kernel cache buffers subroutines for kcb wait buffer (buffer busy wait)",
    kcbzwc="kernel cache buffers subroutines for kcb wait (write) complete",
    kcbzwcw="kernel cache buffers subroutines for kcb wait (write) complete wait",
    kcc="kernel cache controlfile",
    kcc_tac_callback="kernel cache controlfile timed-out actions callback routine (could signal waiting too long)",
    kccbcf="kernel cache controlfile begin controlfile update",
    kccbcx="kernel cache controlfile begin control transaction",
    kccccf="kernel cache controlfile close control files",
    kccchb="kernel cache controlfile cache header block",
    kccchm="kernel cache controlfile cache header block",
    kcccmt="kernel cache controlfile commit changes",
    kccecx="kernel cache controlfile end controlfile transaction",
    kccexpd="kernel cache controlfile expand controlfile section for rectype",
    kccgft="kernel cache controlfile get for fixed table",
    kccida="kernel cache controlfile ??",
    kccidf="kernel cache controlfile identify all copies of the controlfile. sends a message to the dbwr",
    kcckfr="kernel cache controlfile deallocate controlfile cache using kernel memory free routine",
    kccocx="kernel cache controlfile open control transaction",
    kccpcp="kernel cache controlfile prepare(?) checkpoint progress records",
    kccrhd="kernel cache controlfile read header",
    kccwbp="kernel cache controlfile write block physically",
    kccxfe="kernel cache controlfile fixed table callback: database file entries",
    kcf="kernel cache file management",
    kcfaioe="kernel cache file management aio error. checks if aio is possible.",
    kcfbsy="kernel cache file management background synchronisation of SGA and controlfile",
    kcfcaf="kernel cache file management close all files",
    kcfccfl="kernel cache file management create control file logfile exam",
    kcfcdb="kernel cache file management create and mount the database",
    kcfcld="kernel cache file management close database",
    kcfcmb="kernel cache file management create/mount database subroutines",
    kcfcsy="kernel cache file management cross instance sync",
    kcfida="kernel cache file management identify file action",
    kcfis="kernel cache file management intelligent storage",
    kcfis_tablespace_is_on_sage="kernel cache file management intelligent storage test if tablespace is on exadata",
    kcfl="kernel cache file management loader",
    kcflci="kernel cache file management loader check status of IO",
    kcflwi="kernel cache file management loader wait for IO",
    kcfmdb="kernel cache file management mount database",
    kcfmrc="kernel cache file management get multiblock read count(?)",
    kcfopd="kernel cache file management open/close database code",
    kcfrbd="kernel cache file management read buffers from disk",
    kcfris="kernel cache file management release instance state queue",
    kcfrms="kernel cache file management DBMS_SYSTEM.KCFRMS_ICD KCFRMS",
    kcfwatwr="kernel cache file management wait for write IOs to finish (dbwr)",
    kcht="kernel cache hash table",
    kci="kernel cache oracle text",
    kck="kernel cache compatibility",
    kcl="kernel cache lock manager/buffer cache",
    kcl_dissolve_affinity="kernel cache lock manager/buffer cache DBMS_CACHEUTIL.KCL_DISSOLVE_AFFINITY",
    kcl_dissolve_readmostly="kernel cache lock manager/buffer cache DBMS_CACHEUTIL.KCL_DISSOLVE_READMOSTLY",
    kcl_grab_affinity="kernel cache lock manager/buffer cache DBMS_CACHEUTIL.KCL_GRAB_AFFINITY",
    kcl_grab_readmostly="kernel cache lock manager/buffer cache DBMS_CACHEUTIL.KCL_GRAB_READMOSTLY",
    kcl_obj_downconvert="kernel cache lock manager/buffer cache DBMS_CACHEUTIL.KCL_OBJ_DOWNCONVERT",
    kclalc="kernel cache lock manager/buffer cache allocate and initialize lock context",
    kclbla="kernel cache lock manager/buffer cache release processing?",
    kclcfusion="kernel cache lock manager/buffer cache claim fusion lock",
    kclclaim="kernel cache lock manager/buffer cache claim a recovery lock",
    kclcls="kernel cache lock manager/buffer cache check lock status",
    kclcrrf="kernel cache lock manager ??",
    kclcsfusion="kernel cache lock manager/buffer cache start fusion recovery request",
    kclcvb="kernel cache lock manager/buffer cache convert lock background: send message(s) to background to convert lock",
    kcldmp="kernel cache lock manager ??",
    kclebs="kernel cache lock manager/buffer cache escalate buffer state. this routine attempts to make a shared current.",
    kclgclk="kernel cache lock manager/buffer cache global cache lock",
    kclpto="kernel cache lock manager/buffer cache background timeout action",
    kclrdone="kernel cache lock manager/buffer cache recovery is done so cleanup buffer",
    kclscrs="kernel cache lock manager/buffer cache setup consistent reads",
    kclwcrs="kernel cache lock manager/buffer cache wait for consistent reads",
    kclxle="kernel cache lock manager ??",
    kcm="kernel cache miscellaneous",
    kcm_DisableAutoRollover="kernel cache miscellaneous DBMS_SCN.DISABLEAUTOROLLOVER",
    kcm_EnableAutoRollover="kernel cache miscellaneous DBMS_SCN.ENABLEAUTOROLLOVER",
    kcm_GetCurrentSCNParams="kernel cache miscellaneous DBMS_SCN.GETCURRENTSCNPARAMS",
    kcm_GetSCNAutoRolloverParams="kernel cache miscellaneous DBMS_SCN.GETSCNAUTOROLLOVERPARAMS",
    kcm_GetSCNParamsByCompat="kernel cache miscellaneous DBMS_SCN.GETSCNPARAMSBYCOMPAT",
    kcmadj="kernel cache miscellaneous adjust scn",
    kcmclscn="kernel cache miscellaneous check lamport scn",
    kcmcvc="kernel cache miscellaneous create virtual circuit",
    kcmdsc="kernel cache miscellaneous dfs: set/get/inc lock value scn and mess with backup scn if needed",
    kcmgtsf="kernel cache miscellaneous get timestamp full",
    kcmtdif="kernel cache miscellaneous time difference",
    kcn="kernel cache nologging(?)",
    kco="kernel cache operation",
    kco_blkchk="kernel cache operation main block check function",
    kcoadd="kernel cache operation add change vector to kcocv array",
    kcoadv_hdr="kernel cache operation advance SCN in buffer header",
    kcoapl="kernel cache operation apply (changes to buffer)",
    kcoapl_validate="kernel cache operation apply (changes to buffer) validate applied changes",
    kconew="kernel cache operation create (new) array (kcocv) of change vectors",
    kcopcv="kernel cache operation prepare change vector/redo entry generation and retrieval",
    kcosze="kernel cache operation calculate undo record size",
    kcoubk="kernel cache operation undo callback",
    kcp_getafndbid="kernel cache DBMS_TTS.GET_AFN_DBID",
    kcp_getafndbidxendian="kernel cache DBMS_TTS.GET_AFN_DBID DBMS_TTS.GET_AFN_DBIDXENDIAN",
    kcp_tse_get_protected_tse_key="kernel cache DBMS_TTS.GET_PROTECTED_TSE_KEY_INT",
    kcp_tse_put_protected_tse_key="kernel cache DBMS_TTS.PUT_PROTECTED_TSE_KEY_INT",
    kcpacomp="kernel cache DBMS_PLUGTS.KCP_ACOMP",
    kcpaldfts="kernel cache DBMS_PLUGTS.KCP_ALDTFS",
    kcpbexp="kernel cache DBMS_PLUGTS.KCP_BEXP",
    kcpcheckxmlsch="kernel cache DBMS_EXTENDED_TTS_CHECKS.KCP_CHECKXMLSCHEMA",
    kcpchkxPlatform="kernel cache DBMS_PLUGTS.KCP_CHKXPLATFORM",
    kcpcmt="kernel cache DBMS_PLUGTS.KCP_CMT",
    kcpgetchar="kernel cache DBMS_PLUGTS.KCP_GETCHAR",
    kcpgetfh="kernel cache DBMS_PLUGTS.KCP_GETFH",
    kcpinit="kernel cache DBMS_PLUGTS.KCP_INIT INITIMPORT",
    kcpnewts="kernel cache DBMS_PLUGTS.KCP_NEWTS",
    kcppd="kernel cache DBMS_PLUGTSP.KCP_PD PATCHDICTIONARY",
    kcpplgdf="kernel cache DBMS_PLUGTS.KCP_PLGDF",
    kcpplobp="kernel cache DBMS_PLUGTSP.KCP_PLOBP PATCHLOBPROP",
    kcpptmd="kernel cache DBMS_PLUGTSP.KCP_PTMD PATCHTABLEMETADATA",
    kcprdfh="kernel cache DBMS_PLUGTS.KCP_RDFH",
    kcr="kernel cache recovery",
    kcra="kernel cache recovery redo application/access",
    kcramr="kernel cache recovery redo application/access apply media recovery",
    kcratr="kernel cache recovery redo application/access thread redo application",
    kcratr_claim="kernel cache recovery redo application/access thread redo application claim recovery buffers",
    kcratr1="kernel cache recovery redo application/access thread redo application pass one: construct recovery set",
    kcratr2="kernel cache recovery redo application/access thread redo application pass two: apply change vectors",
    kcrcrl="kernel cache recovery corrupt redo log",
    kcrf="kernel cache recovery file",
    kcrf_cnv_fh_after_read="kernel cache recovery file convert file header after read",
    kcrf_cnv_fh_before_write="kernel cache recovery file convert file header before write",
    kcrf_cnv_fh_layout="kernel cache recovery file convert file header layout",
    kcrf_commit_force="kernel cache recovery file commit changes and post lgwr or wait for lgwr",
    kcrf_commit_force_int="kernel cache recovery file commit changes and post lgwr or wait for lgwr (12c)",
    kcrf_get_logical_block_size="kernel cache recovery file get redo block size",
    kcrf_pvt_strand_bind="kernel cache recovery file try to bind private strand",
    kcrf_read_header="kernel cache recovery file read header",
    kcrf_strand_ftcb="kernel cache recovery file strand fetch callback (x$kcrfstrand helper function)",
    kcrf_sync_adaptive_set="kernel cache recovery file set adaptive log file sync mode",
    kcrf_val_log_bsz="kernel cache recovery file evaluate physical blocksize for logfile IO(?)",
    kcrfds="kernel cache recovery file do switch of current log",
    kcrfisd="kernel cache recovery file redo is on disk",
    kcrfnl="kernel cache recovery file next log",
    kcrfr="kernel cache recovery file read",
    kcrfrgv="kernel cache recovery file read get change vector header/data",
    kcrfsl="kernel cache recovery file switch log",
    kcrfvh="kernel cache recovery file verify header",
    kcrfw="kernel cache recovery file write/broadcast SCN",
    kcrfw_alfs="kernel cache recovery file write/broadcast SCN adaptive log file sync",
    kcrfw_alfs_cron_job="kernel cache recovery file write/broadcast SCN adaptive log file sync calculate alfs stats (ckpt)",
    kcrfw_alfs_save_redowrite_time="kernel cache recovery file write/broadcast SCN adaptive log file sync save redo write time (lgwr)",
    kcrfw_cal_target_rba="kernel cache recovery file write/broadcast SCN calculate target redo byte address",
    kcrfw_copy_cv="kernel cache recovery file write/broadcast SCN copy change vectors to public redo buffer",
    kcrfw_do_null_write="kernel cache recovery file write/broadcast SCN execute write cycle without write only increase on disk SCN",
    kcrfw_do_write="kernel cache recovery file write/broadcast SCN execute write cycle with write and increase on disk and real redo SCN",
    kcrfw_gather_lwn="kernel cache recovery file write/broadcast SCN gather strand info for LWN batch and put results in PIC",
    kcrfw_gather_strand="kernel cache recovery file write/broadcast SCN gather strand write info",
    kcrfw_have_non_idle_strand="kernel cache recovery file write/broadcast SCN gather strands needing writing from PIC",
    kcrfw_partial_checksum="kernel cache recovery file write/broadcast SCN write checksum into the redo strand",
    kcrfw_post="kernel cache recovery file write/broadcast SCN post processing after (null)write",
    kcrfw_redo_gen="kernel cache recovery file write/broadcast SCN main redo generation function",
    kcrfw_redo_gen_ext="kernel cache recovery file write/broadcast SCN main redo generation function (12c)",
    kcrfw_redo_write="kernel cache recovery file write/broadcast SCN redo",
    kcrfw_redo_write_driver="kernel cache recovery file write/broadcast SCN redo main redo handling function",
    kcrfw_redo_write_initpic="kernel cache recovery file write/broadcast SCN redo initialise pending IO context buffer (PIC)",
    kcrfw_slave_adaptive_cronjob="kernel cache recovery file write/broadcast SCN calculate lgwr slave stats (ckpt)",
    kcrfw_slave_group_main="kernel cache recovery file write/broadcast SCN main logwriter worker function",
    kcrfw_slave_group_postall="kernel cache recovery file write/broadcast SCN lgwr function to post lgwr workers",
    kcrfw_slave_queue_insert="kernel cache recovery file write/broadcast SCN main lgwr function to provide writes to lgwr workers",
    kcrfw_update_and_bcast_real_redo_scn="kernel cache recovery file write/broadcast SCN update real redo SCN and real write time in kcrfsg_",
    kcrfw_update_redo_blk_hdrs="kernel cache recovery file write/broadcast SCN obtain write info from PIC and write redo headers",
    kcrfw_wait_for_fg_copy="kernel cache recovery file write/broadcast SCN read redo copy latches accompanying shared pool structure to validate writes to redo are done",
    kcrfwh="kernel cache recovery file write/broadcast SCN write header",
    kcrfwi="kernel cache recovery file write/broadcast SCN write redo into the logfile",
    kcrfwl="kernel cache recovery file write/broadcast SCN sWitch logs",
    kcrfwnf="kernel cache recovery file write/broadcast SCN new file (?)",
    kcrfwr="kernel cache recovery file write/broadcast SCN write redo into the logbuffer",
    kcrfws="kernel cache recovery file write/broadcast SCN wait for space (logswitch)",
    kcrhvbo="kernel cache recovery header verify",
    kcrm="kernel cache recovery media recovery",
    kcroio="kernel cache recovery online logfile IO routines",
    kcropn="kernel cache recovery open online logfile for kcroio and kcrfoc",
    kcrp="kernel cache recovery recovery parallel",
    kcrpap="kernel cache recovery recovery parallel apply change vector",
    kcrpclaim="kernel cache recovery recovery parallel claim recovery buffers",
    kcrpdv="kernel cache recovery recovery parallel recovery parallel (driver?)",
    kcrpsend_claim="kernel cache recovery recovery parallel send recovery buffer claim message",
    kcrr="kernel cache recovery redo archival",
    kcrrlh="kernel cache recovery redo archival log history",
    kcrv="kernel cache recovery recovery",
    kcrvfh="kernel cache recovery recovery file headers",
    kcs="kernel cache scn management",
    kcsadj1="kernel cache scn management adjust SCN",
    kcsadj3="kernel cache scn management adjust SCN",
    kcsaj8="kernel cache scn management adjust SCN",
    kcscu8="kernel cache scn management read current SCN",
    kcscur_rba="kernel cache scn management read redo byte address from kcrfsg_",
    kcscur3="kernel cache scn management read current SCN",
    kcsdnfy="kernel cache scn management distributed notify",
    kcsgbsn="kernel cache scn management get batched SCN",
    kcsgbsn8="kernel cache scn management get batched SCN get batched SCN (12.2)",
    kcsgcsn="kernel cache scn management get current SCN",
    kcsgrsn="kernel cache scn management get recent SCN",
    kcsgssn="kernel cache scn management get snapshot SCN",
    kcsm="kernel cache scn management shared routines",
    kcsnew3="kernel cache scn management get new SCN",
    kcsnew8="kernel cache scn management get new SCN",
    kct="kernel cache threads",
    kctmttr="kernel cache threads mean time to recover (?)",
    kctmttrest="kernel cache threads mean time to recover (?) estimation",
    kctrcp="kernel cache threads record checkpoint progress",
    kctrec="kernel cache threads recovery threads, recover and close threads",
    kcttsc="kernel cache threads thread state change",
    kcv="kernel cache recovery",
    kcvcca="kernel cache recovery checkpoint check action",
    kcvcrv="kernel cache recovery thread recovery",
    kcvdbeb="kernel cache recovery ??",
    kcvdmr="kernel cache recovery do media recovery",
    kcvebk="kernel cache recovery ??",
    kcvirv="kernel cache recovery instance recovery",
    kcvrcrba="kernel cache recovery read current redo byte address",
    kcvsurs="kernel cache recovery set unrecoverable SCN",
    kcvucp="kernel cache recovery ??",
    kcvvra="kernel cache recovery verify reset allowed",
    kd="kernel data",
    kda="kernel data analyze/statistics",
    kdasts="kernel data analyze/statistics Statistics Scan driver",
    kdavls="kernel data analyze/statistics validate structure driver",
    kdb="kernel data block structures and manipulation",
    kdbl="kernel data block structures and manipulation direct path load",
    kdblai="kernel data block structures and manipulation direct path load database block loader array insertion",
    kdblailb="kernel data block structures and manipulation direct path load database block loader array insertion load block",
    kdblcRejectedDueToChaining="kernel data block structures and manipulation direct path load c? rejected due to chaining",
    kdbmrd="kernel data block structures and manipulation multi row slot delete",
    kdc="kernel data cluster",
    kdccak="kernel data cluster ??",
    kdcgcs="kernel data cluster ??",
    kdcgsp="kernel data cluster ??",
    kdd="kernel data delete/(cluster?)",
    kddchg="kernel data delete/(cluster?) perform delete/update change",
    kdddgb="kernel data delete/(cluster?) delete get block",
    kddlkr="kernel data delete/(cluster?) delete rows",
    kdeu="kernel data export unload",
    kdfi="kernel data memoptimize for write",
    kdfiInitSGAState="kernel data memoptimize for write create write buffer in large pool",
    kdfiWrite="kernel data memoptimize for write write into write buffer",
    kdfs="kernel data dbfs c api",
    kdg="kernel data gathering",
    kdglfp="kernel data gathering locator function perform",
    kdglfs="kernel data gathering locator function scan block",
    kdgpnb="kernel data gathering pin block",
    kdgprd="kernel data gathering Process Row Data",
    kdgstp="kernel data gathering STatistics Perform",
    kdgsts="kernel data gathering Gathering STatistics Scan",
    kdgvsp="kernel data gathering validate structure perform",
    kdgvss="kernel data gathering validate structure scan",
    kdi="kernel data index",
    kdib="kernel data index bitmap index generation definitions",
    kdibc="kernel data index bitmap index generation definitions bitmap index compression stream",
    kdibco="kernel data index bitmap index generation definitions bitmap index compression stream stream output",
    kdibFinish="kernel data index bitmap index generation definitions kxib finish index maintenance processing",
    kdibh="kernel data index bitmap index generation definitions hash table",
    kdibi="kernel data index bitmap index generation definitions inversion item-table",
    kdibl="kernel data index bitmap index generation definitions maintenance for dml and direct load",
    kdiblcfls="kernel data index bitmap index generation definitions maintenance for dml and direct load conventional flush batch with undo overhead",
    kdiblFinish1="kernel data index bitmap index generation definitions maintenance for dml and direct load callback processing for KXIB",
    kdiblLockRange="kernel data index bitmap index generation definitions maintenance for dml and direct load lock the range associated with a given dml target",
    kdiblsorget="kernel data index bitmap index generation definitions maintenance for dml and direct load extract key/rewoid from sorter",
    kdiblwrite="kernel data index bitmap index generation definitions maintenance for dml and direct load write a kdi entry",
    kdibq="kernel data index bitmap index generation definitions queue class",
    kdibr="kernel data index bitmap index generation definitions row source utility",
    kdic="kernel data index create",
    kdicclean="kernel data index create cleanup IND$ if online builder crashes",
    kdicdrv="kernel data index create driver routine",
    kdicrws="kernel data index create using row source",
    kdics="kernel data index create cluster table scan",
    kdif="kernel data index scan",
    kdifbk="kernel data index scan fetches the single index row matching the argument key",
    kdifind="kernel data index scan find the appropriate index block to store the key",
    kdifxs="kernel data index scan fetch next or previous row in the argument index scan",
    kdifxs1="kernel data index scan fetch next or previous row in the argument index scan fetch row from index block inner function",
    kdiins="kernel data index inserts the argument key and associated keydata",
    kdiins0="kernel data index inserts the argument key and associated keydata 0",
    kdiixs="kernel data index index range scan",
    kdiknf="kernel data index key not found - debug code for oer-8102",
    kdil="kernel data index load",
    kdilrub="kernel data index load ??",
    kdim="kernel data index coalesce",
    kdimod0="kernel data index coalesce modifies the argument key's row from the argument index according",
    kdis="kernel data index split",
    kdisle="kernel data index split split the argument leaf block and insert the argument key",
    kdisnew="kernel data index split allocate a new index block during a split",
    kdisnewle="kernel data index split allocate a new index block during a split leaf block",
    kdiss="kernel data index split skip scan",
    kdiulk="kernel data index undo leaf operation",
    kdiXuFinish="kernel data index finish processing of delaued index maintenance",
    kdizoltp="kernel data index OLTP HIGH Index",
    kdk="kernel data search key",
    kdkoin="kernel data search key ??",
    kdkv="kernel data search key in-memory OLTP keyvalue",
    kdl="kernel data lob",
    kdl_write="kernel data lob write into an ilob instance",
    kdla="kernel data lob SecureFile Archive",
    kdlgsp_init="kernel data lob space management batching",
    kdli="kernel data lob Inode",
    kdlprl="kernel data lob read a contiguous range of blocks starting at a fatblock",
    kdlrci="kernel data lob rci",
    kdlrdb="kernel data lob read a block at a time",
    kdlsfb="kernel data lob pull in up to size bytes of data from stream and start writing at offset",
    kdlw="kernel data lob kdlw",
    kdlx="kernel data lob xfm",
    kdlxdup="kernel data lob xfm dedup",
    kdlxgs_init="kernel data lob xfm reclaim space from transaction freelist in index",
    kdm="kernel data in-memory data layer",
    kdmado="kernel data in-memory data layer ADO",
    kdmd="kernel data in-memory data layer dictionary and cache",
    kdmemopt_drop_object="kernel data in-memory data layer DBMS_MEMOPTIMIZE.DROP_OBJECT_INT",
    kdmemopt_populate="kernel data in-memory data layer DBMS_MEMOPTIMIZE.POPULATE_INT",
    kdmgd="kernel data in-memory data layer GD",
    kdmime="kernel data in-memory data layer IME",
    kdml="kernel data in-memory data layer populating",
    kdmo="kernel data in-memory data layer optimizer",
    kdmpdeallocateversions="kernel data in-memory data layer DBMS_INMEMORY_ADMIN.DEALLOCATE_VERSIONS",
    kdmpdisablefaststart="kernel data in-memory data layer DBMS_INMEMORY_ADMIN.FASTSTART_DISABLE",
    kdmpenablefaststart="kernel data in-memory data layer DBMS_INMEMORY_ADMIN.FASTSTART_ENABLE",
    kdmpgetfaststarttbs="kernel data in-memory data layer DBMS_INMEMORY_ADMIN.GET_FASTSTART_TABLESPACE",
    kdmpimecapexpr="kernel data in-memory data layer DBMS_INMEMORY_ADMIN.IME_CAPTURE_EXPRESSIONS",
    kdmpimeclosewindow="kernel data in-memory data layer DBMS_INMEMORY_ADMIN.IME_CLOSE_CAPTURE_WINDOW",
    kdmpimedropallexpr="kernel data in-memory data layer DBMS_INMEMORY_ADMIN.IME_DROP_ALL_EXPRESSIONS",
    kdmpimeopenwindow="kernel data in-memory data layer DBMS_INMEMORY_ADMIN.IME_OPEN_CAPTURE_WINDOW",
    kdmppopulate="kernel data in-memory data layer DBMS_INMEMORY.POPULATE_INTERNAL",
    kdmprepopulate="kernel data in-memory data layer DBMS_INMEMORY.REPOPULATE_INTERNAL",
    kdmpsegmentdeallocateversions="kernel data in-memory data layer DBMS_INMEMORY.SEG_DEALLOC_VERS_INTERNAL",
    kdmr="kernel data in-memory data layer background",
    kdmrIMCLOAD="kernel data in-memory data layer background in memory chunk load/populate",
    kdmrIMCLOAD_cb="kernel data in-memory data layer background in memory chunk load/populate callback",
    kdn="kernel data sequence number",
    kdns="kernel data sequence number sequence enqueue",
    kdo="kernel data operations",
    kdoapl="kernel data operations apply",
    kdodrp="kernel data operations delete row piece",
    kdoirp="kernel data operations insert row piece",
    kdoiur="kernel data operations insert undo record",
    kdp="kernel data archive compression: pcode",
    kdq="kernel data query",
    kdrpCC="kernel data DBMS_REPAIR.CHECK_COMPAT",
    kdrpCO="kernel data DBMS_REPAIR.CHECK_OBJECT",
    kdrpDK="kernel data DBMS_REPAIR.DUMP_ORPHAN_KEYS",
    kdrpFB="kernel data DBMS_REPAIR.SEGMENT_FIX_STATUS",
    kdrpFC="kernel data DBMS_REPAIR.FIX_CORRUPT_BLOCKS",
    kdrpFL="kernel data DBMS_REPAIR.REBUILD_FREELISTS",
    kdrpOIC="kernel data DBMS_REPAIR.ONLINE_INDEX_CLEAN",
    kdrpRCK="kernel data DBMS_REPAIR.REPAIR_CLUSTER_INDEX_KEYCOUNT",
    kdrpRQI="kernel data DBMS_REPAIR.REBUILD_SHC_INDEX",
    kdrpSC="kernel data DBMS_REPAIR.SKIP_CORRUPT_BLOCKS",
    kds="kernel data seek/scan",
    kdsc="kernel data seek/scan cluster",
    kdscgr="kernel data seek/scan cluster table scan",
    kdse="kernel data seek/scan extent",
    kdselget="kernel data seek/scan extent ??",
    kdselini="kernel data seek/scan extent list initialize",
    kdsfbr="kernel data seek/scan fetch by rowid. returns a pointer to the row header",
    kdsfbrcb="kernel data seek/scan fetch by rowid. returns a pointer to the row header ??",
    kdsgnp="kernel data seek/scan fetch by rowid get continued row piece (chained row)",
    kdsgrp="kernel data seek/scan fetch by rowid get row piece",
    kdsics="kernel data seek/scan cluster table scan",
    kdso="kernel data seek/scan service object",
    kdsocrl="kernel data seek/scan service object check if row is locked",
    kdst="kernel data seek/scan table",
    kdst_compile="kernel data seek/scan table compile scan type",
    kdst_fetch="kernel data seek/scan table fetch blocks",
    kdst_mode="kernel data seek/scan table determine scan mode",
    kdstf="kernel data seek/scan table full ultra fast scan",
    kdstgr="kernel data seek/scan table get row",
    kdstsnb="kernel data seek/scan table ??",
    kdsttgr="kernel data seek/scan table full table scan",
    kdt ="kernel data table insert",
    kdt_bseg_srch_cbk="kernel data table insert check for uncommitted space",
    kdtchg="kernel data table insert generate change",
    kdtgrs="kernel data table insert get space",
    kdtgsp="kernel data table insert table/cluster insert get space",
    kdtInsRow="kernel data table insert insert a row immediately",
    kdtSimpleInsRow="kernel data table insert simple insert a row",
    kdtwrp="kernel data table insert write row piece",
    kdu="kernel data update",
    kdugetpart="kernel data update get partition information for a deleted or opdated row",
    kdumrp="kernel data update update multiple row pieces",
    kduovw="kernel data update updates already existing rows",
    kdusru="kernel data update single row update, main entry",
    kduurp="kernel data update update row piece",
    kdwf="kernel data worker framework",
    kdx="kernel data index block",
    kdxokcmp="kernel data index block Auto Prefix Compressed Index",
    kdxt="kernel data index block temporary block",
    kdz="kernel data archive compression",
    kdza="kernel data archive compression compression",
    kdza_delete="kernel data archive compression compression DBMS_COMPRESSION.KDZA_DELETE",
    kdza_dump_map="kernel data archive compression compression DBMS_COMPRESSION.KDZA_DUMP_MAP",
    kdzc="kernel data archive compression compression",
    kdzcmptype="kernel data archive compression compression DBMS_COMPRESSION.KDZCMPTYPE",
    kdzd="kernel data archive compression decompression",
    kdzh="kernel data archive compression compression",
    kdzk="kernel data archive compression HPK",
    kdzp="kernel data archive compression pcode",
    kdzs="kernel data archive compression decompression",
    kdzu="kernel data archive compression uncompress",
    ke="kernel event",
    keadDeleteDirectivePLSQL="kernel event PRVT_ADVISOR.DELETE_DIRECTIVE_I",
    keadEvalDirectivePLSQL="kernel event PRVT_ADVISOR.EVAL_DIRECTIVE_VALUE_I",
    keadInsertDirDefPLSQL="kernel event PRVT_ADVISOR.INSERT_ADV_DIR_DEF_I",
    keadInsertDirectivePLSQL="kernel event PRVT_ADVISOR.INSERT_DIRECTIVE_I",
    keadUpdateDirDefPLSQL="kernel event PRVT_ADVISOR.UPDATE_ADV_DIR_DEF_I",
    keasEditPLSQL="kernel event PRVT_ADVISOR.EDIT",
    keauFormatMsgGroupPLSQL="kernel event PRVT_ADVISOR.FORMAT_MESSAGE_GROUP",
    keauFormatMsgPLSQL="kernel event PRVT_ADVISOR.FORMAT_MESSAGE",
    keauGetDbVersionPLSQL="kernel event PRVT_ADVISOR.GET_DB_VERSION",
    keauhtlPLSQL="kernel event PRVT_ADVISOR.HANDLE_LOCK",
    keauInterruptTaskPLSQL="kernel event PRVT_ADVISOR.SIGNAL_INTERRUPT",
    keauRecordErrorMsg="kernel event PRVT_ADVISOR.RECORD_ERRORMSG_CALLOUT",
    keauRecordJournalPLSQL="kernel event PRVT_ADVISOR.RECORD_JOURNAL",
    keautcintrPLSQL="kernel event PRVT_ADVISOR.TEST_CHECK_INTERRUPT",
    keb="kernel event MMON/MMNL infrastructure",
    kec="kernel event real application testing",
    kecpcEntryGenCapture="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_GENERATE_CAPTURE",
    kecpcEntryParseLoginQueue="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_PARSE_LOGIN_QUEUE",
    kecpcEntryScheduleEvent="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_SCHEDULE_EVENT",
    kecpEntryCalibrate="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_CALIBRATE",
    kecpEntryCancelReplay="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_CANCEL_REPLAY",
    kecpEntryClientConnect="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_CLIENT_CONNECT",
    kecpEntryClientVitals="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_CLIENT_VITALS",
    kecpEntryEndReplayActions="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_END_REPLAY_ACTIONS",
    kecpEntryFilters="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_FILTERS",
    kecpEntryGetAdvancedParameter="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_GET_ADVANCED_PARAMETER",
    kecpEntryGetCapDirType="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_GET_CAPDIR_TYPE",
    kecpEntryGetCapturedTables="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_GET_CAPTURED_TABLES",
    kecpEntryHandleRepDir="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_HANDLE_REPDIR",
    kecpEntryIsReplayPaused="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_IS_REPLAY_PAUSED",
    kecpEntryLoadDivergence="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_LOAD_DIVERGENCE",
    kecpEntryPauseReplay="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_PAUSE_REPLAY",
    kecpEntryPrepareReplay="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_PREPARE_REPLAY",
    kecpEntrySetAdvancedParameter="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_SET_ADVANCED_PARAMETER",
    kecpEntryStartReplay="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_START_REPLAY",
    kecpGetClock="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_GET_CLOCK",
    kecppEntryLoadLongSqlText="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_LOAD_LONG_SQLTEXT",
    kecppEntryProcessRecording="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_PROCESS_CAPTURE",
    kecppGetWMDSyncMode="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_GET_SYNC_MODE",
    kecpPopulateDivergenceEntry="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_POPULATE_DIVERGENCE",
    kecprm="kernel event real application testing masking",
    kecprmEntryExtract="kernel event real application testing masking DBMS_RAT_MASK_INTERNAL.DBR_EXTRACT_CALLOUT",
    kecprmEntryReplace="kernel event real application testing masking DBMS_RAT_MASK_INTERNAL_DBR_MASK_CALLOUT",
    kecpSqlIdToOCINumber="kernel event real application testing DBMS_WORKLOAD_REPLAY_I.INVOKE_SQLID_TO_OCINUMBER",
    kecpValidateEncryptionPasswd="kernel event real application testing DBMS_WRR_INTERNAL.INVOKE_VALIDATE_ENC_PASSWD",
    kecr_OS_seconds="kernel event real application testing DBMS_WRR_REPORT.OS_SECONDS",
    kecrCheckSqlsetPrivs="kernel event real application testing DBMS_WRR_INTERNAL.INVOKE_CHECK_SQLSET_PRIVS",
    kecrEntryAcquireLock="kernel event real application testing DBMS_WRR_INTERNAL.INVOKE_ACQUIRE_WRR_LOCK",
    kecrEntryDisResSes="kernel event real application testing DBMS_WRR_INTERNAL.INVOKE_DIS_RES_SESS",
    kecrEntryFinishRecord="kernel event real application testing DBMS_WORKLOAD_CAPTURE_I.INVOKE_FINISH_CAPTURE",
    kecrEntryReleaseLock="kernel event real application testing DBMS_WRR_INTERNAL.INVOKE_RELEASE_WRR_LOCK",
    kecrEntryStartRecord="kernel event real application testing DBMS_WORKLOAD_CAPTURE_I.INVOKE_START_CAPTURE",
    kecrEntrySwitchBucket="kernel event real application testing DBMS_WORKLOAD_CAPTURE_I.INVOKE_SWITCH_BUCKET",
    kecuDirExists="kernel event real application testing DBMS_WORKLOAD_CAPTURE_I.INVOKE_DIR_EXISTS",
    kecuGetDirPath="kernel event real application testing DBMS_WORKLOAD_CAPTURE_I.INVOKE_GET_PATH",
    kecuGetFeatureBooleanValue="kernel event real application testing DBMS_WRR_INTERNAL.INVOKE_GET_FEATURE_BOOL_VALUE",
    kecukghsfsNewfile="kernel event real application testing DBMS_WRR_INTERNAL.INVOKE_KGHSFSNEWFILE",
    kecuSimpleCommand="kernel event real application testing DBMS_WRR_PROTECTED.INVOKE_SIMPLE_CMD",
    kecuwReadWMD="kernel event real application testing DBMS_WRR_INTERNAL.INVOKE_READ_WMD",
    kecuwUpdateWMD="kernel event real application testing DBMS_WRR_INTERNAL.INVOKE_UPDATE_WMD",
    kegCheckRatOption="kernel event PRVT_SMGUTIL.CHECK_RAT_OPTION",
    kegPackEnabledPLSQL="kernel event PRVT_SMGUTIL.PRVT_PACK_ENABLED",
    kehASHqueryPLSQL="kernel event PRVT_HDM.GET_QUERY_PREDICATE",
    kehePlsqlRacFloodControl="kernel event PRVT_RTADDM.RAC_FLOOD_CONTROL",
    kehExecute="kernel event PRVT_HDM.EXECUTE",
    kehPlsqlValidateInstance="kernel event PRVT_HDM.VALIDATE_INSTANCE",
    keiut="kernel event IUT infrastructure",
    kel="kernel event server generated alert infrastructure",
    kelr_reconcile_threshold="kernel event server generated alert infrastructure DBMS_SERVER_ALERT.RECONCILE_THRESHOLD",
    kelr_set_threshold="kernel event server generated alert infrastructure DBMS_SERVER_ALERT.SET_THRESHOLD",
    keltpost_plsql="kernel event server generated alert infrastructure DBMS_SERVER_ALERT_PRVT.POST_ALERT_I",
    keomg="kernel event DBOP generic service/monitoring daemon",
    keomm="kernel event DBOP composite type",
    keommBeginOperationExt="kernel event DBOP composite type DBMS_SQL_MONITOR.BEGIN_OPERATION_INT",
    keommEndOperationExt="kernel event DBOP composite type DBMS_SQL_MONITOR.END_OPERATION_INT",
    keomn="kernel event DBOP monitoring",
    keplan="kernel event SQL compare plans",
    ker="kernel event orarep",
    kerctcBuildGenericTag="kernel event orarep DBMS_REPORT.BUILD_GENERIC_TAG",
    kerpiFinishFullCapture="kernel event orarep DBMS_AUTO_REPORT.FINISH_REPORT_CAPTURE_CALLOUT",
    kerpiMarkSqlMonEntryExt="kernel event orarep DBMS_AUTO_REPORT_INTERNAL.I_MARK_SQLMON_CALLOUT",
    kerpiStartFullCapture="kernel event orarep DBMS_AUTO_REPORT.START_REPORT_CAPTURE_CALLOUT",
    kertvApplySchemaExt="kernel event orarep DBMS_REPORT.APPLY_XML_SCHEMA",
    kertvApplyXsltExt="kernel event orarep DBMS_REPORT.APPLY_XSLT",
    kertvGetLargeParamValExt="kernel event orarep DBMS_REPORT.KERTVGETLARGEPARAMETERVALEXT",
    kertvTransformHtmlToTextExt="kernel event orarep DBMS_REPORT.TRANSFORM_HTML_TO_TEXT",
    kerutlBuildRRefStruct="kernel event orarep DBMS_REPORT.BUILD_REPORT_REFERENCE_STRUCT",
    kerutlBuildRRefVararg="kernel event orarep DBMS_REPORT.BUILD_REPORT_REFERENCE_VARG",
    kerutlCheckCaptureXmlExt="kernel event orarep DBMS_REPORT.I_CAPTURE_XML_ENABLED",
    kerutlCheckLrgModeExt="kernel event orarep DBMS_REPORT.I_LRG_MODE",
    kerutlCompressExt="kernel event orarep DBMS_REPORT.I_COMPRESS_REPORT_CALLOUT",
    kerutlGetExpOsdPathExt="kernel event orarep PRVT_EMX.GET_EXPANDED_OSD_PATH",
    kerutlIsRacExt="kernel event orarep PRVT_EMX.IS_RAC",
    kerutlIsZlib2base64CompExt="kernel event orarep DBMS_REPORT.I_IS_ZLIB2BASE64_CALLOUT",
    kerutlReadFileToLobExt="kernel event orarep PRVT_EMX.I_READ_FILE_TO_LOB",
    kerutlReadXmlTypeFromFileExt="kernel event orarep PRVTEMX_DBHOME.I_READ_XMLFILE",
    kerutlUnescapeRRefExt="kernel event orarep DBMS_REPORT.I_UNESCAPE_REPORT_REF",
    kerutlValidateName="kernel event orarep DBMS_REPORT.VALIDATE_NAME",
    kerutlValidateRefParam="kernel event orarep DBMS_REPORT.VALIDATE_REF_PARAMETER",
    kes="kernel event SQL manageability",
    kesai="kernel event SQL manageability infrastructure",
    kesaiCreateProfileExt="kernel event SQL manageability infrastructure DBMS_SQLTUNE_INTERNAL.I_LOAD_SQL_PROFILE",
    kesaiRemoteAcceptProfileExt="kernel event SQL manageability infrastructure DBMS_SQLTUNE_INTERNAL.I_ACCEPT_SQL_PROFILE_REMOTE",
    kesaiRemoteCreatePlanBLExt="kernel event SQL manageability infrastructure DBMS_SQLTUNE_INTERNAL.I_CREATE_SQL_PLAN_BL_REMOTE",
    kesaiTuneSqlDriver="kernel event SQL manageability infrastructure DBMS_SQLTUNE_INTERNAL.I_SUB_EXECUTE_CALLOUT",
    kesatm="kernel event SQL manageability infrastructure",
    kesdsCreateIncidentCallout="kernel event SQL manageability DBMS_SQLDIAG_INTERNAL.I_CREATE_INCIDENT_CALLOUT",
    kesdsIncidentid2SqlCallout="kernel event SQL manageability DBMS_SQLDIAG_INTERNAL.I_INCIDENTID_2_SQL_CALLOUT",
    kesdsRemoveIncidentCallout="kernel event SQL manageability DBMS_SQLDIAG_INTERNAL.I_REMOVE_INCIDENT_CALLOUT",
    kesdtcbCompressTestcaseCallout="kernel event SQL manageability DBMS_SQLTCB_INTERNAL.I_COMPRESS_TESTCASE_CALLOUT",
    keshs_alterExt="kernel event SQL manageability DBMS_SQLTUNE_INTERNAL.I_ALTER_SQL_PROFILE",
    keshs_clone="kernel event SQL manageability DBMS_SQLTUNE_INTERNAL.I_CLONE_SQL_PROFILE",
    keshs_create2Ext="kernel event SQL manageability DBMS_SQLTUNE_INTERNAL.I_CREATE_SQL_PROFILE",
    keshs_createExt="kernel event SQL manageability DBMS_SQLTUNE_INTERNAL.I_CREATE_SQL_PROFILE",
    keshs_dropExt="kernel event SQL manageability DBMS_SQLTUNE_INTERNAL.I_DROP_SQL_PROFILE",
    keshs_updateExt="kernel event SQL manageability DBMS_SQLTUNE_INTERNAL.I_UPDATE_SQL_PROFILE",
    keshs_validateCategoryExt="kernel event SQL manageability DBMS_SQLTUNE.VALIDATE_CATEGORY",
    keshs_validateProfileNameExt="kernel event SQL manageability DBMS_SQLTUNE.VALIDATE_PROFILE_NAME",
    kesm="kernel event SQL manageability real application testing: masking",
    kesmdStsExtractExt="kernel event SQL manageability real application testing: masking DBMS_RAT_MASK_INTERNAL.STS_EXTRACT_CALLOUT",
    kesmdStsReplaceExt="kernel event SQL manageability real application testing: masking DBMS_RAT_MASK_INTERNAL.STS_MASK_CALLOUT",
    kesmuIsBindMasked="kernel event SQL manageability real application testing: masking DBMS_SQLTUNE_UTIL0.IS_BIND_MASKED_CALLOUT",
    kesp="kernel event SQL manageability SQL performance analyzer",
    kespiGetCECallout="kernel event SQL manageability SQL performance analyzer DBMS_SQLPA.GET_SESS_OPTIMIZER_ENV",
    kesqs="kernel event SQL manageability infrastructure",
    kessi="kernel event SQL manageability infrastructure",
    kessiFetchSqlTraceSqlExt="kernel event SQL manageability infrastructure DBMS_SQLTUNE.FETCH_SQL_TRACE_NEXT_SQL",
    kessiGetOptParamValNumExt="kernel event SQL manageability infrastructure DBMS_SQLTUNE_INTERNAL.I_GET_OPT_PARAM_VAL_NUM",
    kessiGetOptParamValStrExt="kernel event SQL manageability infrastructure DBMS_SQLTUNE_INTERNAL.I_GET_OPT_PARAM_VAL_STR",
    kessiInsertSqlText="kernel event SQL manageability infrastructure DBMS_SQLTUNE_INTERNAL.I_INSERT_SQLSET_SQLTEXT",
    kessiUpdateStmtRefCount="kernel event SQL manageability infrastructure DBMS_SQLTUNE_INTERNAL.I_UpDATE_AWR_SQLTEXT_REFCOUNT",
    kesstp="kernel event SQL manageability SQL trace parser",
    kest="kernel event SQL manageability tokenize (?)",
    kestb_get_signature="kernel event SQL manageability tokenize (?) DBMS_SQLTUNE_UTIL0.GET_SIGNATURE",
    kestsa="kernel event SQL manageability tokenize (?) fix regression/parallel execution",
    kestsaExa="kernel event SQL manageability tokenize (?) fix regression/parallel execution exadata",
    kestse="kernel event SQL manageability tokenize (?) SQL test-execute service",
    kestsi="kernel event SQL manageability tokenize (?) index-tune",
    kestsInitCapStats="kernel event SQL manageability tokenize (?) DBMS_SQLTUNE_INTERNAL.I_INIT_CAP_STATS_CALLOUT",
    kestsMmonToTuneExt="kernel event SQL manageability tokenize (?) DBMS_SQLTUNE_INTERNAL.EXEC_EMX_TUNING_TASK_CALLOUT",
    kestsp="kernel event SQL manageability tokenize (?) plan node analysis",
    kestsProcessSqlCallout="kernel event SQL manageability tokenize (?) DBMS_SQLTUNE_INTERNAL.I_PROCESS_SQL_CALLOUT",
    kestsProcessStsCallout="kernel event SQL manageability tokenize (?) DBMS_SQLTUNE_INTERNAL.I_PROCESS_SQLSET_CALLOUT",
    kestsRemoteExecSqlExt="kernel event SQL manageability tokenize (?) DBMS_SQLPA.REMOTE_PROCESS_SQL_CALLOUT",
    kestss="kernel event SQL manageability tokenize (?) statistics advisor",
    kestsUpdCapStats="kernel event SQL manageability tokenize (?) DBMS_SQLTUNE_INTERNAL.I_UPD_CAP_STATS_CALLOUT",
    kesutl="kernel event SQL manageability infrastructure",
    kesutlCdbConDbid2NameExt="kernel event SQL manageability infrastructure DBMS_SQLTUNE_UTIL0.CDBCON_DBID_TO_NAME",
    kesutlCdbConId2DbidExt="kernel event SQL manageability infrastructure DBMS_SQLTUNE_UTIL0.CDBCON_ID_TO_DBID",
    kesutlCdbConName2IdsExt="kernel event SQL manageability infrastructure DBMS_SQLTUNE_UTIL0.CDBCON_NAME2IDS",
    kesutlCheckObjPrivExt="kernel event SQL manageability infrastructure DBMS_SQLTUNE_UTIL0.CHECK_OBJ_PRIV_CALLOUT",
    kesutlCheckPrivExt="kernel event SQL manageability infrastructure DBMS_SQLTUNE_UTIL2.CHECK_PRIV_CALLOUT",
    kesutlExtractBind="kernel event SQL manageability infrastructure DBMS_SQLTUNE_UTIL0.EXTRACT_BIND_CALLOUT",
    kesutlGenSqlId="kernel event SQL manageability infrastructure DBMS_SQLTUNE_UTIL0.SQLTEXT_TO_SQLID",
    kesutlGetBindDataCount="kernel event SQL manageability infrastructure DBMS_SQLTUNE_UTIL0.GET_BINDS_COUNT",
    kesutlGetCurTimeExt="kernel event SQL manageability infrastructure DBMS_SQLTUNE_UTIL1.GET_CURRENT_TIME",
    kesutlGetSeqExt="kernel event SQL manageability infrastructure DBMS_SQLTUNE_UTIL1.GET_SEQ_CALLOUT",
    kesutlSqlIdToHash="kernel event SQL manageability infrastructure DBMS_UTILITY.KESUTLSQLIDTOHASHICD SQLID_TO_HASH",
    kesutlSqlIdValidate="kernel event SQL manageability infrastructure DBMS_SQLTUNE_UTIL0.VALIDATE_SQLID",
    kesutlValidateName="kernel event SQL manageability infrastructure DBMS_SQLTUNE_UTIL1.VALIDATE_NAME",
    keswat="kernel event SQL manageability infrastructure",
    keswpi="kernel event SQL manageability SQL performance analyzer",
    kesws="kernel event SQL manageability SQL monitor",
    keswsq="kernel event SQL manageability SQL monitor infrastructure",
    keswts="kernel event SQL manageability infrastructure",
    keswx="kernel event SQL manageability SQL monitor",
    keswxGetCpuCores="kernel event SQL manageability SQL monitor DBMS_SQLTUNE.KESWXGETCPUCORES",
    ket="kernel event automated maintenance tasks",
    keum="kernel event dbms_umf(_internal)",
    keumatlc_acquire_top_lock_cb="kernel event dbms_umf(_internal) DBMS_UMF_INTERNAL.ACQUIRE_TOPOLOGY_LOCK",
    keumbtxc_build_target_xml_co="kernel event dbms_umf(_internal) DBMS_UMF_INTERNAL.BUILD_TARGET_XML_INTERNAL",
    keumcnc_config_node_co="kernel event dbms_umf(_internal) DBMS_UMF.CONFIGURE_NODE_CO",
    keumctic_cpy_top_info_co="kernel event dbms_umf(_internal) DBMS_UMF.COPY_TOPOLOGY_INFO_CO",
    keumdtic_del_top_info_co="kernel event dbms_umf(_internal) DBMS_UMF.DELETE_TOPOLOGY_INFO_CO",
    keumggdnco="kernel event dbms_umf(_internal) DBMS_UMF_INTERNAL.GET_GLOBAL_DBLINK_NAME_INT",
    keumgnnc_get_nn_co="kernel event dbms_umf(_internal) DBMS_UMF.GET_NODE_NAME_LOCAL_CO",
    keumgtic_get_target_id_co="kernel event dbms_umf(_internal) DBMS_UMF.GET_TARGET_ID_CO",
    keumgtnc_get_topology_name_co="kernel event dbms_umf(_internal) DBMS_UMF.GET_TOPOLOGY_NAME_LOCAL_CO",
    keumitcc_is_tgt_capable_co="kernel event dbms_umf(_internal) DBMS_UMF.IS_TGT_CAPABLE_CO",
    keummtsc_modify_top_sw_co="kernel event dbms_umf(_internal) DBMS_UMF.TOPOLOGY_ROLE_CHANGE_CO",
    keumpclc_pop_cache_local_co="kernel event dbms_umf(_internal) DBMS_UMF_INTERNAL.POP_CACHE_LOCAL_CO",
    keumqlic_query_link_info_co="kernel event dbms_umf(_internal) DBMS_UMF.QUERY_LINK_INFO_CO",
    keumqni2c_query_node_info2_co="kernel event dbms_umf(_internal) DBMS_UMF.QUERY_NODE_INFO_ID_CO",
    keumqnic_query_node_info_co="kernel event dbms_umf(_internal) DBMS_UMF.QUERY_NODE_INFO_CO",
    keumrrc_register_remote_co="kernel event dbms_umf(_internal) DBMS_UMF_INTERNAL.REGISTER_REMOTE_INTERNAL",
    keumrtlc_release_top_lock_cb="kernel event dbms_umf(_internal) DBMS_UMF_INTERNAL.RELEASE_TOPOLOGY_LOCK",
    keumruec_umf_remote_enabled_co="kernel event dbms_umf(_internal) DBMS_UMF_INTERNAL.UMF_REMOTE_ENABLED_CALLOUT",
    keumspfps_sub_pat_co="kernel event dbms_umf(_internal) DBMS_UMF_PROTECTED.PSF_SUBSTITUTE_PAT2",
    keumswtc_sync_with_target_co="kernel event dbms_umf(_internal) DBMS_UMF_INTERNAL.SYNC_WITH_TARGET_CO",
    keumunc_unconfig_node_co="kernel event dbms_umf(_internal) DBMS_UMF.UNCONFIGURE_NODE_CO",
    keumurc_unreg_remote_co="kernel event dbms_umf(_internal) DBMS_UMF_INTERNAL.UNREGISTER_REMOTE_INTERNAL",
    keumusotc_upd_svc_old_tgt_co="kernel event dbms_umf(_internal) DBMS_UMF.UPD_SVC_OLD_TGT_CO",
    keumusr_update_service_remote="kernel event dbms_umf(_internal) DBMS_UMF_INTERNAL.UPDATE_SERVICE_REMOTE_INT",
    keumxlc_xmlpar_load_c="kernel event dbms_umf(_internal) DBMS_UMF_INTERNAL.TOPOLOGY_LOAD",
    kew="kernel event AWR",
    kewa="kernel event AWR ASH",
    kewe_cln_stat_disable="kernel event AWR DBMS_MONITOR.CLIENT_ID_STAT_DISABLE",
    kewe_cln_stat_enable="kernel event AWR DBMS_MONITOR.CLIENT_ID_STAT_ENABLE",
    kewe_cln_trace_disable="kernel event AWR DBMS_MONITOR.CLIENT_ID_TRACE_DISABLE",
    kewe_cln_trace_enable="kernel event AWR DBMS_MONITOR.CLIENT_ID_TRACE_ENABLE",
    kewe_database_trace_disable="kernel event AWR DBMS_MONITOR.DATABASE_TRACE_DISABLE",
    kewe_database_trace_enable="kernel event AWR DBMS_MONITOR.DATABASE_TRACE_ENABLE",
    kewe_mysession_trace_disable="kernel event AWR DBMS_SESSION.KEWE_MYSESSION_TRACE_DISABLE SESSION_TRACE_DISABLE",
    kewe_mysession_trace_enable="kernel event AWR DBMS_SESSION.KEWE_MYSESSION_TRACE_ENABLE SESSION_TRACE_ENABLE",
    kewe_sid_trace_disable="kernel event AWR DBMS_MONITOR.SESSION_TRACE_DISABLE",
    kewe_sid_trace_enable="kernel event AWR DBMS_MONITOR.SESSION_TRACE_ENABLE",
    kewe_svm_stat_disable="kernel event AWR DBMS_MONITOR.SERV_MOD_ACT_STAT_DISABLE",
    kewe_svm_stat_enable="kernel event AWR DBMS_MONITOR.SERV_MOD_ACT_STAT_ENABLE",
    kewe_svm_trace_disable="kernel event AWR DBMS_MONITOR.SERV_MOD_ACT_TRACE_DISABLE",
    kewe_svm_trace_enable="kernel event AWR DBMS_MONITOR.SERV_MOD_ACT_TRACE_ENABLE",
    kewm="kernel event AWR metrics",
    kewr="kernel event AWR repository",
    kewrafm_auto_flush_main="kernel event AWR repository auto flush main",
    kewrcfp_create_first_partition="kernel event AWR repository create first partition for all AWR after dbid is registered",
    kewrcmp_create_manual_partns="kernel event AWR repository DBMS_SWRF_INTERNAL.CREATE_IMPORT_PARTITIONS",
    kewrcup_create_upgrade_partns="kernel event AWR repository DBMS_SWRF_INTERNAL.CREATE_UPGRADE_PARTITIONS",
    kewrf="kernel event AWR repository flush",
    kewrmas_modify_apurge_setting="kernel event AWR repository DBMS_SWRF_INTERNAL.MODIFY_AUTOPURGE_SETTINGS",
    kewrpacs_add_colored_sql="kernel event AWR repository DBMS_WORKLOAD_REPOSITORY.ADD_COLORED_SQL",
    kewrpcb_create_baseline="kernel event AWR repository DBMS_WORKLOAD_REPOSITORY.CREATE_BASELINE_CALLOUT",
    kewrpcbt_create_bl_template="kernel event AWR repository DBMS_WORKLOAD_REPOSITORY.CREATE_BL_TEMPLATE_CALLOUT",
    kewrpcbt_create_bl_timerange="kernel event AWR repository DBMS_WORKLOAD_REPOSITORY.CREATE_BL_TIMERANGE_CALLOUT",
    kewrpcldb_cleanup_database="kernel event AWR repository DBMS_SWRF_INTERNAL.CLEANUP_DATABASE_CALLOUT",
    kewrpcs_create_snapshot="kernel event AWR repository DBMS_WORKLOAD_REPOSITORY.CREATE_SNAPSHOT_CALLOUT",
    kewrpcstgs_create_stg_schema="kernel event AWR repository DBMS_SWRF_INTERNAL.CREATE_STAGING_SCHEMA",
    kewrpdbn_dropbl_byname="kernel event AWR repository DBMS_WORKLOAD_REPOSITORY.DROP_BASELINE",
    kewrpdbt_drop_bl_template="kernel event AWR repository DBMS_WORKLOAD_REPOSITORY.DROP_BASELINE_TEMPLATE",
    kewrpdsr_drop_snapshot_range="kernel event AWR repository DBMS_WORKLOAD_REPOSITORY.DROP_SNAPSHOT_RANGE",
    kewrpdtr_dump_trace="kernel event AWR repository DBMS_SWRF_INTERNAL.DUMP_TRACE",
    kewrpms_modify_settings="kernel event AWR repository DBMS_WORKLOAD_REPOSITORY.MODIFY_SNAPSETTINGS_CALLOUT",
    kewrpmvs_modify_view_settings="kernel event AWR repository DBMS_MANAGEMENT_BOOTSTRAP.MODIFY_AWR_VIEW_SETTINGS_CO",
    kewrpmws_modbl_window_size="kernel event AWR repository DBMS_WORKLOAD_REPOSITORY.MODIFY_BASELINE_WINDOW_SIZE",
    kewrprb_rename_baseline="kernel event AWR repository DBMS_WORKLOAD_REPOSITORY.RENAME_BASELINE",
    kewrprcs_remove_colored_sql="kernel event AWR repository DBMS_WORKLOAD_REPOSITORY.REMOVE_COLORED_SQL",
    kewrprdb_register_database="kernel event AWR repository DBMS_SWRF_INTERNAL.REGISTER_DBID_CALLOUT",
    kewrprmdb_register_multidb="kernel event AWR repository DBMS_SWRF_INTERNAL.REGISTER_MULTIDB_CALLOUT",
    kewrprstdb_reset_database="kernel event AWR repository DBMS_SWRF_INTERNAL.RESET_AWR_CALLOUT",
    kewrprstgs_remove_stg_schema="kernel event AWR repository DBMS_SWRF_INTERNAL.REMOVE_STAGING_SCHEMA",
    kewrprwc_remove_wr_control="kernel event AWR repository DBMS_SWRF_INTERNAL.REMOVE_WR_CONTROL",
    kewrps="kernel event AWR repository purge",
    kewrpulc_updbl_last_computed="kernel event AWR repository DBMS_SWRF_INTERNAL.BLUPDATE_LAST_TIME_COMPUTED",
    kewrpurdb_unregister_database="kernel event AWR repository DBMS_SWRF_INTERNAL.UNREGISTER_DATABASE",
    kewrpurmdb_unregister_multidb="kernel event AWR repository DBMS_SWRF_INTERNAL.UNREGISTER_REMOTE_DATABASE",
    kewrrsr_reserve_snap_range="kernel event AWR repository DBMS_SWRF_INTERNAL.RESERVE_SNAP_RANGE_CALLOUT",
    kewrst2si_source_t2s_intent="kernel event AWR repository DBMS_SWRF_INTERNAL.T2S_SNAP_INTENT_NFY",
    kewrst2srn_source_t2s_reg_nfy="kernel event AWR repository DBMS_SWRF_INTERNAL.T2S_REGISTER_NFY",
    kewrst2ss_source_t2s_snap="kernel event AWR repository DBMS_SWRF_INTERNAL.AWR_FLUSH_T2SS_SNAP_CALLOUT",
    kewrudf_update_datafile="kernel event AWR repository DBMS_SWRF_INTERNAL.UPDATE_DATAFILE",
    kewrusr_unreserve_snap_range="kernel event AWR repository DBMS_SWRF_INTERNAL.UNRESERVE_SNAP_RANGE_CALLOUT",
    kewrwfao_wait_for_awr_open="kernel event AWR repository DBMS_SWRF_INTERNAL.WAIT_FOR_AWR_OPEN_CO",
    kews="kernel event AWR statistics",
    kews_cln_timestate="kernel event AWR statistics clean timestate",
    kews_sqlst_flush="kernel event AWR statistics flush cursor statistics",
    kews_update_wait_time="kernel event AWR statistics update wait time",
    kewu="kernel event AWR utilities",
    kewx="kernel event AWR sysaux?",
    kex="kernel event EM express",
    kf="kernel automatic storage management",
    kfa="kernel automatic storage management alias operations",
    kfc="kernel automatic storage management cache",
    kfcl="kernel automatic storage management cache lock",
    kfcLoad="kernel automatic storage management cache ??",
    kfcReadBlk="kernel automatic storage management cache ??",
    kfd="kernel automatic storage management disk",
    kfdp="kernel automatic storage management disk PST",
    kfds="kernel automatic storage management disk staleness registry and resync",
    kfdva="kernel automatic storage management disk virtual ATB",
    kfdx="kernel automatic storage management disk exadata interface",
    kfe="kernel automatic storage management attributes",
    kff="kernel automatic storage management KFF",
    kffb="kernel automatic storage management KFF metadata block",
    kffbScanNext="kernel automatic storage management KFF metadata block ??",
    kffbTableCb="kernel automatic storage management KFF metadata block ??",
    kffd="kernel automatic storage management KFF metadata directory",
    kffg="kernel automatic storage management KFF file group",
    kffilTableCb="kernel automatic storage management KFF ??",
    kffm="kernel automatic storage management KFF map header",
    kffs="kernel automatic storage management KFF split mirror operations",
    kffscrub="kernel automatic storage management KFF split mirror operations scrubbing",
    kfg="kernel automatic storage management diskgroups",
    kfgb="kernel automatic storage management diskgroups background",
    kfgTableCb="kernel automatic storage management diskgroups ??",
    kfia="kernel automatic storage management remote",
    kfiac="kernel automatic storage management remote IOServer client",
    kfias="kernel automatic storage management remote IOServer",
    kfio="kernel automatic storage management translation I/O layer",
    kfioDumpPg="kernel automatic storage management translation I/O layer dump routine",
    kfioer="kernel automatic storage management translation I/O layer translation",
    kfioErrorRecord="kernel automatic storage management translation I/O layer ??",
    kfioPhysical="kernel automatic storage management translation I/O layer get physical sector size",
    kfioRequest="kernel automatic storage management translation I/O layer ??",
    kfioRequestPriv="kernel automatic storage management translation I/O layer ??",
    kfioRqSetDump="kernel automatic storage management translation I/O layer ??",
    kfioRqSetPrepare="kernel automatic storage management translation I/O layer ??",
    kfios="kernel automatic storage management translation I/O layer simple",
    kfioSubmitIO="kernel automatic storage management translation I/O layer ??",
    kfioTranslateIO="kernel automatic storage management translation I/O layer ??",
    kfis="kernel automatic storage management intelligent storage interfaces",
    kfk="kernel automatic storage management KFK",
    kfk_dump="kernel automatic storage management KFK dump routine",
    kfk_dump_iosubsys="kernel automatic storage management KFK dump routine io subsystem",
    kfk_dump_kfkio="kernel automatic storage management KFK dump routine KFK IO",
    kfm="kernel automatic storage management node monitor interface implementation",
    kfmd="kernel automatic storage management node monitor interface implementation layer for diskgroup registration",
    kfms="kernel automatic storage management node monitor interface implementation layers support function interface",
    kfmsInit="kernel automatic storage management node monitor interface implementation layers support function interface initialise group services (kgxgncin cssd)",
    kfn="kernel automatic storage management networking subsystem",
    kfnb="kernel automatic storage management networking subsystem umbilicus",
    kfnbGrpFindDisks="kernel automatic storage management networking subsystem umbilicus group find disks",
    kfnc="kernel automatic storage management networking subsystem client networking",
    kfncPhysical="kernel automatic storage management networking subsystem client networking request physical sector size",
    kfncSlaveSubmit="kernel automatic storage management networking subsystem client networking submit request",
    kfnm="kernel automatic storage management networking subsystem umbilicus",
    kfnor="kernel automatic storage management networking subsystem KFN orion",
    kfns="kernel automatic storage management networking subsystem server networking",
    kfpkgDG="kernel automatic storage management DBMS_DISKGROUP",
    kfpkgDGChangeClientCluster="kernel automatic storage management DBMS_DISKGROUP CHANGECLIENTCLUSTER",
    kfpkgDGCheckFile="kernel automatic storage management DBMS_DISKGROUP CHECKFILE",
    kfpkgDGCloseFile="kernel automatic storage management DBMS_DISKGROUP CLOSE",
    kfpkgDGCommitFile="kernel automatic storage management DBMS_DISKGROUP COMMIT",
    kfpkgDGCreateClientCluster2="kernel automatic storage management DBMS_DISKGROUP CREATECLIENTCLUSTER2",
    kfpkgDGCreateDir="kernel automatic storage management DBMS_DISKGROUP CREATEDIR",
    kfpkgDGCreateFile="kernel automatic storage management DBMS_DISKGROUP CREATEFILE",
    kfpkgDGDelBadfEntry="kernel automatic storage management DBMS_DISKGROUP DELETEBADFENTRY",
    kfpkgDGDropDir="kernel automatic storage management DBMS_DISKGROUP DROPDIR",
    kfpkgDGGetFileAttr="kernel automatic storage management DBMS_DISKGROUP GETFILEATTR",
    kfpkgDGGetFilePhyBlkSize="kernel automatic storage management DBMS_DISKGROUP GETFILEPHYBLKSIZE",
    kfpkgDGMapAu="kernel automatic storage management DBMS_DISKGROUP MAPAU",
    kfpkgDGMapBlock="kernel automatic storage management DBMS_DISKGROUP MAPBLOCK",
    kfpkgDGMapExtent="kernel automatic storage management DBMS_DISKGROUP MAPEXTENT",
    kfpkgDGMapExtent2="kernel automatic storage management DBMS_DISKGROUP MAPEXTENT 12.2 version",
    kfpkgDGOpenFile="kernel automatic storage management DBMS_DISKGROUP OPEN",
    kfpkgDGPatchFile="kernel automatic storage management DBMS_DISKGROUP PATCHFILE",
    kfpkgDGReadFile="kernel automatic storage management DBMS_DISKGROUP READ",
    kfpkgDGRemap="kernel automatic storage management DBMS_DISKGROUP REMAP",
    kfpkgDGResizeFile="kernel automatic storage management DBMS_DISKGROUP RESIZEFILE",
    kfpkgDGSetSparseParent="kernel automatic storage management DBMS_DISKGROUP SETSPARSEPARENT",
    kfr="kernel automatic storage management recovery",
    kfrb="kernel automatic storage management recovery buffer",
    kfrc="kernel automatic storage management recovery COD",
    kftha="kernel automatic storage management transparent high availability",
    kftr2ah="kernel automatic storage management relative to absolute file number translation with hint",
    kfv="kernel automatic storage management volume subsystem",
    kfvioc="kernel automatic storage management volume subsystem cell storage",
    kfvsd="kernel automatic storage management volume subsystem background",
    kfvsu="kernel automatic storage management volume subsystem umbilicus",
    kfz="kernel automatic storage management zecurity subsystem",
    kfzp="kernel automatic storage management zecurity subsystem password file layer",
    kg="kernel generic",
    kgas="kernel generic tcp/ip networking",
    kgasc_close="kernel generic tcp/ip networking close tcp connection",
    kgasct_connect_tcp="kernel generic tcp/ip networking connect tcp connection",
    kgasr="kernel generic tcp/ip networking receive",
    kgasra_recv_avail="kernel generic tcp/ip networking receive first routine",
    kgasra2_recv_avail_2="kernel generic tcp/ip networking receive second routine",
    kgass="kernel generic tcp/ip networking send",
    kgass_send="kernel generic tcp/ip networking send routine",
    kgbt="kernel generic btree operations",
    kgcc="kernel generic compress",
    kgccbuf="kernel generic compress buffer",
    kgccbz2do="kernel generic compress bzip2 do apply bzip2 compression",
    kgccbz2pseudodo="kernel generic compress bzip2 pseudo do",
    kgccdo="kernel generic compress do, main compression function",
    kgccgmtf="kernel generic compress generate move to front",
    kgccm="kernel generic compress memory (?)",
    kgcd="kernel generic decompress",
    kgcddo="kernel generic decompress do, main decompression function",
    kgce="kernel generic encryption engine",
    kgcs="kernel generic cloud services",
    kgcs_bmiaas="kernel generic cloud services (detect) bare metal IaaS",
    kgcs_bmiaasgen2="kernel generic cloud services (detect) bare metal IaaS (detect) bare metal IaaS second generation",
    kgcs_exacloud="kernel generic cloud services (detect) exacloud",
    kgcs_http_url_read="kernel generic cloud services read url for determination of cloud and type of cloud",
    kgcs_is_non_oracle_cloud="kernel generic cloud services is the instance running in an non-oracle cloud?",
    kgcs_is_on_premise="kernel generic cloud services is the instance running on-premises?",
    kgcs_is_oracle_cloud="kernel generic cloud services is the instance running in oracle cloud?",
    kgcs_nimbula="kernel generic cloud services is the instance running in a nimbula infrastructure?",
    kgds="kernel generic vos generic stack trace",
    kge="kernel generic error",
    kgeade="kernel generic error add error onto the error stack",
    kgeadse="kernel generic error KGE ADd String Internal Error onto the error stack",
    kgeasi="kernel generic error raise an error on an assertion failure",
    kgeasnmierr="kernel generic error assert named internal error",
    kgecrs="kernel generic error check and record O/S error code",
    kgecxd="kernel generic error context of error driver",
    kgefec="kernel generic error fatal error code",
    kgefem="kernel generic error format error message (null-terminated)",
    kgefic="kernel generic error ??",
    kgemef="kernel generic error mae error message (with Va_list)",
    kgepop="kernel generic error pop to the current top error frame",
    kger="kernel generic error record",
    kgerelv="kernel generic error ??",
    kgerem="kernel generic error record error code (with already-formatted message)",
    kgerev="kernel generic error record error code (with Va_list)",
    kgerinv="kernel generic error record internal named error with va_list",
    kgerinv_internal="kernel generic error record internal named error with va_list or soft internal named error",
    kgeriv="kernel generic error record internal error code with va_list",
    kgersel="kernel generic error ??",
    kgese="kernel generic error signal error",
    kgesec="kernel generic error signal error code",
    kgesev="kernel generic error signal error code (with Va_list)",
    kgesin="kernel generic error signal a named internal error",
    kgesinv="kernel generic error signal a named internal error signal internal named error with va_list",
    kgesiv="kernel generic error ??",
    kgespf="kernel generic error string printf (format a message straing)",
    kgf="kernel generic ASM",
    kgfd="kernel generic ASM io subsystem driver",
    kgfdvf="kernel generic ASM io subsystem driver Voting file Interface",
    kgff="kernel generic ASM direct file io adapter",
    kgffdcn="kernel generic ASM direct file io adapter disconnect from kgff instance",
    kgfpm="kernel generic ASM PATCH repository",
    kgg="kernel generic generic routines",
    kggchk="kernel generic generic lists ??",
    kggec="kernel generic generic routines element cache(?)",
    kggecAlloc="kernel generic generic routines element cache(?) allocate",
    kggecInitH="kernel generic generic routines element cache(?) initialise heap",
    kggfa="kernel generic generic routines freeable (memory) allocation",
    kggfaAlloc="kernel generic generic routines freeable (memory) allocation allocate",
    kggfaDoKghAlloc="kernel generic generic routines freeable (memory) allocation do KGH allocation. allocate memory in KGH managed heap",
    kggfaInitH="kernel generic generic routines freeable (memory) allocation initialise heap",
    kgghash="kernel generic generic routines produce hash value",
    kgghstfel="kernel generic generic lists ??",
    kgghte="kernel generic generic routines hash table",
    kgghteAdd="kernel generic generic routines hash table add",
    kgghteAddCB="kernel generic generic lists ??",
    kgghteGetEle="kernel generic generic routines hash table get element",
    kggmd5="kernel generic generic routines functions to calculate md5 values",
    kggms="kernel generic generic routines map service",
    kggmsAdd="kernel generic generic routines map service add",
    kggmsAddCB="kernel generic generic lists ??",
    kggmsAddPtrCB="kernel generic generic lists ??",
    kggmsAddUb4="kernel generic generic routines map service add unsigned 4 bytes",
    kggmsCreateMap="kernel generic generic routines map service create map",
    kggmsCreateStaticMaps="kernel generic generic routines map service create static maps",
    kggmsHash="kernel generic generic routines map service hashing function",
    kggmsHash12="kernel generic generic routines map service hashing function 12 bit",
    kggmsHash16="kernel generic generic routines map service hashing function 16 bit",
    kggmsHash8="kernel generic generic routines map service hashing function 8 bit",
    kggmsInitMapServiceH="kernel generic generic routines map service initialise map service heap",
    kggsm="kernel generic generic routines string mapping",
    kggsmCommonInit="kernel generic generic routines string mapping common initialisation.",
    kggsmInit="kernel generic generic routines string mapping initialise",
    kggsmInitStringMapService="kernel generic generic routines string mapping initialise string map service",
    kgh="kernel generic heap manager",
    kgh_update_comment="kernel generic heap manager add comment to memory chunk allocation",
    kghaddex="kernel generic heap manager add extent",
    kghalf="kernel generic heap manager non-recoverably allocate a freeable chunk of memory",
    kghalo="kernel generic heap manager main allocation entry point",
    kghalp="kernel generic heap manager allocate permanent memory",
    kghbshrt="kernel generic heap manager ??",
    kgherror="kernel generic heap manager internal error routine for signalling an error",
    kghfen="kernel generic heap manager free a portion of a chunk of space at the end of the chunk",
    kghfnd="kernel generic heap manager find a chunk of memory of at least the minimum size",
    kghfnd_in_free_lists="kernel generic heap manager find a chunk of memory of at least the minimum size in free lists",
    kghfre="kernel generic heap manager free a chunk of memory",
    kghfrempty="kernel generic heap manager free a chunk of memory ??",
    kghfrf="kernel generic heap manager non-recoverably free a freeable chunk of space",
    kghfrh="kernel generic heap manager free heap. free all the extents allocated in the heap using kghalfrx",
    kghfrmrg="kernel generic heap manager free a chunk, merge with neighbors if free returns merged chunk",
    kghfru="kernel generic heap manager free unused space in a heap",
    kghfru_internal="kernel generic heap manager free unused space in a heap internal",
    kghfrunp="kernel generic heap manager free unused space in a heap free unpinned space",
    kghfrx="kernel generic heap manager free extent",
    kghgex="kernel generic heap manager get a new extent",
    kghini="kernel generic heap manager heap initialize",
    kghissga="kernel generic heap manager is heap in SGA?",
    kghmrk="kernel generic heap manager mark heap",
    kghnerror="kernel generic heap manager ??",
    kghnospc="kernel generic heap manager no space available in the heap, signal an error",
    kghphini="kernel generic heap manager parent heap initialize",
    kghpin="kernel generic heap manager pin a heap",
    kghpir="kernel generic heap manager pin a chunk of space that was specified to be recreatable",
    kghpmalo="kernel generic heap manager find and return permanent chunk of space",
    kghprmalo="kernel generic heap manager permanent memory allocate",
    kghrcappl="kernel generic heap manager apply this heap function depth first",
    kghrsp="kernel generic heap manager remove permanent chunk",
    kghrst="kernel generic heap manager ??",
    kghsc="kernel generic heap manager stream compact",
    kghsrch="kernel generic heap manager search freelists for a memory chunk",
    kghssgai="kernel generic heap manager segmented allocation internal",
    kghssgal="kernel generic heap manager segmented allocate",
    kghssgfr="kernel generic heap manager segmented free",
    kghssgmm="kernel generic heap manager ??",
    kghstack="kernel generic heap manager stack",
    kghstack_alloc="kernel generic heap manager allocate pga memory",
    kghstack_free="kernel generic heap manager free pga memory",
    kghsup="kernel generic heap manager unpaged page table",
    kghsupmm="kernel generic heap manager unpaged page table more memory",
    kghufreetop="kernel generic heap manager ??",
    kghugetuds="kernel generic heap manager ??",
    kghup="kernel generic heap manager unpin",
    kghupr="kernel generic heap manager unpin recreatable chunk",
    kghx="kernel generic heap manager fixed sized memory",
    kghxal="kernel generic heap manager fixed sized memory allocate shared memory",
    kghxcb="kernel generic heap manager fixed sized memory callback to free memory on the free lists back to kgh",
    kghxcb_internal="kernel generic heap manager fixed sized memory callback to free memory on the free lists back to kgh internal",
    kghxcu="kernel generic heap manager fixed sized memory latch cleanup for the fixed allocator",
    kgi="kernel generic instantiation manager",
    kgicli="kernel generic instantiation manager close all cursors for an instantiation",
    kgidel="kernel generic instantiation manager delete an instantiation object",
    kgidlt="kernel generic instantiation manager delete an instantiation object",
    kgidmp="kernel generic instantiation manager ??",
    kgimal="kernel generic instantiation manager memory allocate",
    kgiscl="kernel generic instantiation manager state close cursors",
    kgisdl="kernel generic instantiation manager state delete",
    kgitrc="kernel generic instantiation manager trace call stack",
    kgk="kernel generic token",
    kgkp="kernel generic token generic services scheduling policies",
    kgl="kernel generic library cache management",
    kgl_can_unpin_heap_0="kernel generic library cache management can heap 0 be unpinned",
    kglati="kernel generic library cache management authorization table insert(?)",
    kglchk1="kernel generic library cache management check for 1 access on object",
    kglchk2="kernel generic library cache management check for access on an object",
    kglchk3="kernel generic library cache management check for access on an object",
    kglComputeHash="kernel generic library cache management compute hash value",
    kglConcurrencyId="kernel generic library cache management return library cache hash bucket number",
    kgldmp="kernel generic library cache management dump an object",
    kgldon="kernel generic library cache management depend on an object",
    kgldpo="kernel generic library cache management depend on an object",
    kgldti="kernel generic library cache management dependency table insert (under latch or KGLMX pin/load)",
    kgldtin="kernel generic library cache management dependency table insert (under latch or KGLMX pin/load) ?",
    kgldtld="kernel generic library cache management ??",
    kglfnd="kernel generic library cache management find a chunk of at least the minimum size",
    kglfrunp="kernel generic library cache management ask a client to free unpinned space",
    kglfrx="kernel generic library cache management free extent (heap unpin)",
    kglget="kernel generic library cache management get a lock on an object",
    kglGetMutex="kernel generic library cache management get mutex",
    kglGetSessionUOL="kernel generic library cache management obtain location for AOL in KKSSP",
    kglGetSO="kernel generic library cache management get state object",
    kglgob="kernel generic library cache management get an objected locked and pinned",
    kglhd="kernel generic library cache management object handle",
    kglhdal="kernel generic library cache management object handle allocate",
    kglhdd="kernel generic library cache management object handle deallocate",
    kglhdda="kernel generic library cache management object handle deallocate a",
    kglhdgc="kernel generic library cache management object handle get child(?)",
    kglhdgh="kernel generic library cache management object handle get handle",
    kglhdgn="kernel generic library cache management object handle get new(?)",
    kglhdi="kernel generic library cache management object handle increase version count",
    kglHeapInitializeInternalFL="kernel generic library cache management initialize heap allocation",
    kglhpd="kernel generic library cache management heap deallocate",
    kglhpn="kernel generic library cache management heap pin",
    kglhup="kernel generic library cache management heap update",
    kglic="kernel generic library cache management ??",
    kgligi="kernel generic library cache management ??",
    kgllcu="kernel generic library cache management latch cleanup for the library cache and pin latches",
    kgllk="kernel generic library cache management library cache lock",
    kgllkal="kernel generic library cache management library cache lock allocate",
    kgllkdl="kernel generic library cache management library cache lock delete",
    kgllkds="kernel generic library cache management library cache lock delete state object",
    kglll="kernel generic library cache management load lock",
    kglllal="kernel generic library cache management load lock allocate",
    kgllldl="kernel generic library cache management load lock delete",
    kglLock="kernel generic library cache management library cache lock",
    kglLockWait="kernel generic library cache management ??",
    kglob="kernel generic library cache management object",
    kglobal="kernel generic library cache management object allocate",
    kglobcl="kernel generic library cache management object clear all tables",
    kglobf0="kernel generic library cache management object free heap/data block 0 of an object",
    kglobfr="kernel generic library cache management object free all heaps (except data block 0's) of an object",
    kglobld="kernel generic library cache management object load",
    kglobpn="kernel generic library cache management object pin heaps and load data pieces",
    kglpim="kernel generic library cache management pin and load more heaps",
    kglpin="kernel generic library cache management pin heaps and load data pieces of an object",
    kglPinSO="kernel generic library cache management pin SO",
    kglpn="kernel generic library cache management pin",
    kglpnal="kernel generic library cache management pin allocate",
    kglpnc="kernel generic library cache management pin pin heaps and load data pieces of a cursor object",
    kglpnck="kernel generic library cache management pin pin heaps and load data pieces of a cursor object check if latch is held",
    kglpndl="kernel generic library cache management pin delete data heaps",
    kglpnds="kernel generic library cache management pin delete state object",
    kglpnmi="kernel generic library cache management pin migration",
    kglpnp="kernel generic library cache management pin pin heaps and load data for stored procedures",
    kglpur="kernel generic library cache management ??",
    kglrddsc="kernel generic library cache management describe callback function",
    kglrds="kernel generic library cache management describe a remote object",
    kglrfcl="kernel generic library cache management reference clear",
    kglsec="kernel generic library cache management signal error code",
    kglshu="kernel generic library cache management ??",
    kglsim="kernel generic library cache management simulator (library cache advise)",
    kglsscn="kernel generic library cache management scan a loaded set invoking a supplied callback for each element",
    kglssr="kernel generic library cache management session state remove",
    kgltba="kernel generic library cache management child cursor table?",
    kglUnLock="kernel generic library cache management library cache unlock",
    kglunp="kernel generic library cache management unpin heaps of an object",
    kglUnPin="kernel generic library cache management release pin",
    kgm="kernel generic inter-language method services",
    kgmexcb="kernel generic inter-language method services execution callback",
    kgmexch="kernel generic inter-language method services execute by compilation handle",
    kgmexec="kernel generic inter-language method services execute",
    kgmexsc="kernel generic inter-language method services execute call with SCD (used only by PLSQL)",
    kgmgaicn="kernel generic inter-language method services generic arguments input conversions",
    kgmgaocn="kernel generic inter-language method services generic arguments output conversions",
    kgmgchd="kernel generic inter-language method services get compilation handle",
    kgmimio="kernel generic inter-language method services implementation fro mmethod instantion object",
    kgmtconv="kernel generic inter-language method services performconversion",
    kgmtomib="kernel generic inter-language method services image to object (named types)",
    kgnfs="kernel generic network file system",
    kgnfs_wat="kernel generic network file system wait",
    kgnfswat="kernel generic network file system wait",
    kgodm="kernel generic oracle disk manager",
    kgodm_io="kernel generic oracle disk manager IO",
    kgodm_wait_ios="kernel generic oracle disk manager wait on IOs",
    kgs="kernel generic service",
    kgsc="kernel generic service cache, session cache for cursors",
    kgscCacheCursor="kernel generic service cache, session cache for cursors add cursor to cache",
    kgscComputeHash="kernel generic service cache, session cache for cursors compute hash value for cursor",
    kgscFindCursor="kernel generic service cache, session cache for cursors search cursor in the cache",
    kgscFindFreeSlot="kernel generic service cache, session cache for cursors find a free slot in the cache",
    kgsd="kernel generic service debugging",
    kgsf="kernel generic service ??",
    kgsk="kernel generic service resource manager",
    kgskbwt="kernel generic service resource manager begin wait",
    kgskchk="kernel generic service resource manager check resource state for RM",
    kgskckcpuswch="kernel generic service resource manager check cpu switches",
    kgskdecr="kernel generic service resource manager decrease",
    kgskdecrstat1="kernel generic service resource manager decrease statistics",
    kgskentsch="kernel generic service resource manager enter scheduler",
    kgskewt="kernel generic service resource manager end wait",
    kgskewtint="kernel generic service resource manager end wait internal",
    kgskexitsch="kernel generic service resource manager exit scheduler",
    kgsklheld="kernel generic service resource manager lock held",
    kgskmodruncnt="kernel generic service resource manager modify run count",
    kgskrunnextint="kernel generic service resource manager run next int(?)",
    kgskthbwt="kernel generic service resource manager thread begin wait",
    kgskthewt="kernel generic service resource manager thread end wait",
    kgskthrexit="kernel generic service resource manager thread exit",
    kgskupdbalance="kernel generic service resource manager update balance",
    kgskupdcputm="kernel generic service resource manager update cpu time",
    kgskusedynshares="kernel generic service resource manager use dynamic shares",
    kgskuselowthreshold="kernel generic service resource manager use low threshold",
    kgss="kernel generic service state object manager",
    kgstm="kernel generic service time",
    kgur="kernel generic recovery",
    kgx="kernel generic mutex/communication",
    kgxAllocWhereStats="kernel generic mutex/communication mutex set statistics for wait",
    kgxAolDump="kernel generic mutex/communication mutex dump AOL",
    kgxAOLInit="kernel generic mutex/communication mutex initialize AOL",
    kgxCleanup="kernel generic mutex/communication mutex cleanup",
    kgxDecrement="kernel generic mutex/communication mutex decrement RefCnt",
    kgxDecrementExamine="kernel generic mutex/communication mutex decrement RefCnt and set E mode",
    kgxEndExamine="kernel generic mutex/communication mutex clear E mode",
    kgxExamine="kernel generic mutex/communication mutex set E mode",
    kgxExclusive="kernel generic mutex/communication mutex get in X mode",
    kgxExclusive2Shared="kernel generic mutex/communication mutex get in X mode downgrade X to S mode",
    kgxExclusiveNowait="kernel generic mutex/communication mutex get in X mode nowait",
    kgxg="kernel generic mutex/communication node monitor/cluster group services layer",
    kgxgncin="kernel generic mutex/communication node monitor/cluster group services layer group membership cssd initiate",
    kgxIncrement="kernel generic mutex/communication mutex increment RefCnt",
    kgxIncrementExamine="kernel generic mutex/communication mutex increment RefCnt and set E mode",
    kgxLatchCleanup="kernel generic mutex/communication mutex cleanup latch(?)",
    kgxLongExclusive="kernel generic mutex/communication mutex get in long exclusive mode",
    kgxModifyRefCount="kernel generic mutex/communication mutex modify RefCnt",
    kgxMutexHng="kernel generic mutex/communication mutex hang(?)",
    kgxPgaInitialize="kernel generic mutex/communication mutex initialize PGA",
    kgxRegisterClient="kernel generic mutex/communication mutex register client(?)",
    kgxRelease="kernel generic mutex/communication mutex release",
    kgxSgaInitialize="kernel generic mutex/communication mutex initialize SGA",
    kgxShared="kernel generic mutex/communication mutex get in S mode",
    kgxSharedExamine="kernel generic mutex/communication mutex get in S mode sharedexamine mode",
    kgxSharedNowait="kernel generic mutex/communication mutex get in S mode nowait",
    kgxSharedNowaitExamine="kernel generic mutex/communication mutex get in S mode nowait sharedexamine mode",
    kgxWait="kernel generic mutex/communication mutex register wait and sleep",
    khpro="kernel hierarchical profiler",
    khproanalyze="kernel hierarchical profiler DBMS_HPROF.KHPROANALYZE",
    khprostart="kernel hierarchical profiler DBMS_HPROF.KHPROSTART",
    khprostop="kernel hierarchical profiler DBMS_HPROF.KHPROSTOP",
    kill="kernel ??",
    kj="kernel lock management",
    kjac="kernel lock management application continuity",
    kjac_11203_monitor_txn_pls="kernel lock management application continuity DBMS_APP_CONT_PRVT.MONITOR_TXN",
    kjac_clr_failpoint_pls="kernel lock management application continuity DBMS_TG_DBG.I_CLEAR_FAILPOINT",
    kjac_force_outcome_pls="kernel lock management application continuity DBMS_APP_CONT.INT_FORCE_OUTCOME",
    kjac_set_failpoint_pls="kernel lock management application continuity DBMS_TG_DBG.I_SET_FAILPOINT",
    kjac_set_session_drainable_pls="kernel lock management application continuity DBMS_TG_DBG.I_SET_SESSION_DRAINABLE",
    kjb="kernel lock management global cache service",
    kjbcr="kernel lock management global cache service consistent read",
    kjbcrconvert="kernel lock management global cache service consistent read convert LE lock",
    kjbcropen="kernel lock management global cache service consistent read open LE lock",
    kjbfp="kernel lock management global cache service persistent cluster flash cache",
    kjbl="kernel lock management global cache service lock table",
    kjblcrcbk="kernel lock management global cache service lock table ??",
    kjblpcr="kernel lock management global cache service lock table ??",
    kjbmpbast="kernel lock management global cache service ??",
    kjbmpocr="kernel lock management global cache service master<-client (receive) process open convert request",
    kjbr="kernel lock management global cache service resource table",
    kjbrpread="kernel lock management global cache service resource table pred read request at master",
    kjbrref="(kjbr)ref - kernel lock management global cache service resource table ??",
    kjc="kernel lock management communication",
    kjci="kernel lock management communication cross instance call",
    kjcsrmg="kernel lock management communication ??",
    kjctr_pbmsg="kernel lock management communication process batch message",
    kjctr_rksxp="kernel lock management communication read message from KSXP service",
    kjctr_watq="kernel lock management communication read messages from wait queue",
    kjctrcv="kernel lock management communication receive messages",
    kjcts_dmpbmsg="kernel lock management communication dump batch message content",
    kjctsrmg="kernel lock management communication receive a vector of messages",
    kjcvcvd="kernel lock management communication deadlock detection routines",
    kjdd="kernel lock management deadlock detection",
    kjdr="kernel lock management dynamic remastering",
    kjdrbnftpoll="kernel lock management ??",
    kjfcln="kernel lock management ??",
    kjfcrfg="kernel lock management ??",
    kjfcshut="kernel lock management ??",
    kjfm="kernel lock management heartbeat monitoring",
    kjfz="kernel lock management DLM-client freeze/unfreeze",
    kjhn_get_alert_severity_plsql="kernel lock management DBMS_HA_ALERTS.GET_SEVERITY",
    kjhn_get_cardinality_plsql="kernel lock management DBMS_HA_ALERTS.GET_CARDINALITY",
    kjhn_get_db_domain_plsql="kernel lock management DBMS_HA_ALERTS.GET_DB_DOMAIN",
    kjhn_get_db_unique_name_plsql="kernel lock management DBMS_HA_ALERTS.GET_DB_UNIQUE_NAME",
    kjhn_get_event_time_plsql="kernel lock management DBMS_HA_ALERTS.GET_EVENT_TIME0",
    kjhn_get_host_plsql="kernel lock management DBMS_HA_ALERTS.GET_HOST",
    kjhn_get_incarnation_plsql="kernel lock management DBMS_HA_ALERTS.GET_INCARNATION",
    kjhn_get_instance_plsql="kernel lock management DBMS_HA_ALERTS.GET_INSTANCE",
    kjhn_get_reason_plsql="kernel lock management DBMS_HA_ALERTS.GET_REASON",
    kjhn_get_service_plsql="kernel lock management DBMS_HA_ALERTS.GET_SERVICE",
    kjhn_get_version_plsql="kernel lock management DBMS_HA_ALERTS.GET_VERSION",
    kjk="kernel lock management RAC kernel accelerator",
    kjl="kernel lock management lock",
    kjlrem="kernel lock management lock remove lock from all queues and free it",
    kjlrlr="kernel lock management lock remove lock from resource queue",
    kjlsod="kernel lock management lock state object delete",
    kjlt="kernel lock management lock table",
    kjm="kernel lock management RAC multiple LMS",
    kjmpmsg="kernel lock management RAC multiple LMS process the message",
    kjmpmsgi="kernel lock management RAC multiple LMS ??",
    kjmsm="kernel lock management RAC multiple LMS main action callback (LMS main loop)",
    kjmxmpm="kernel lock management RAC multiple LMS ??",
    kjoe="kernel lock management DLM omni enqueue service",
    kjpfr="kernel lock management process free",
    kjpsod="kernel lock management state object delete, disconnect from DLM",
    kjpt="kernel lock management processes",
    kjr="kernel lock management resource table",
    kjsc="kernel lock management RAC global stats",
    kjskcvl="kernel lock management main cache convert routine",
    kju="kernel lock management global enqueue service",
    kjual="kernel lock management global enqueue service allocate, connection to dlm",
    kjucv="kernel lock management global enqueue service asynchronous convert a lock",
    kjucvl="kernel lock management global enqueue service asynchronous convert a lock convert a lock",
    kjuscl="kernel lock management global enqueue service synchronous close a lock",
    kjuscv="kernel lock management global enqueue service synchronous convert a lock",
    kjusuc="kernel lock management global enqueue service synchronous open and convert a lock",
    kjuuc="kernel lock management global enqueue service asynchronous open and convert a lock",
    kjx="kernel lock management cross instance",
    kjxg="kernel lock management cross instance cluster group services",
    kjxgr="kernel lock management cross instance cluster group services instance membership recovery",
    kjz="kernel lock management DIAG",
    kjzc="kernel lock management DIAG communication layer",
    kjzd="kernel lock management DIAG main layer",
    kjzdattdlm="kernel lock management DIAG main layer attach to distributed lock manager",
    kjzdicrshnfy="kernel lock management DIAG main layer ??",
    kjzdpcrshnfy="kernel lock management DIAG main layer ??",
    kjzdssdmp="kernel lock management DIAG main layer ??",
    kjzduptcctx="kernel lock management DIAG main layer ??",
    kjzf="kernel lock management DIAG flow control layer",
    kjzg="kernel lock management DIAG group services layer",
    kjzh="kernel lock management DIAG API layer",
    kjzhgigblk="kernel lock management DIAG API layer ??",
    kjzhgigfreep="kernel lock management DIAG API layer ??",
    kjzm="kernel lock management DIAG membership layer",
    kjzn="kernel lock management DIAG node layer",
    kjznpsp="kernel lock management DIAG node layer DBMS_HANG_MANAGER.SET_PARAM_INTERNAL",
    kk="kernel compile",
    kkae="kernel compile editions",
    kkae_reset_edition_always_icd="kernel compile editions DBMS_SESSION.KKAE_RESET_EDITION_ALWAYS_ICD USE_DEFAULT_EDITION_ALWAYS",
    kkae_reset_edition_icd="kernel compile editions DBMS_SESSION.KKAE_RESET_EDITION_ICD USE_DEFAULT_EDITION_DEFERRED",
    kkae_set_edition_icd="kernel compile editions DBMS_SESSION.KKAE_SET_EDITION_ICD SET_EDITION_DEFERRED",
    kkb="kernel compile table",
    kkbdgdl_dll_get_dml_lock="kernel compile table lock the user and Get the User Cache entry",
    kkbl="kernel compile table lob",
    kkbltrfr="kernel compile table lob ??",
    kkbltrseg="kernel compile table lob ??",
    kkbn="kernel compile table nested table",
    kkbndrp="kernel compile table nested table drop storage tables for nested table columns",
    kkbnftn="kernel compile table nested table format table for nested table",
    kkbo="kernel compile table object",
    kkbtrn="kernel compile table ??",
    kkcn="kernel compile streams/advanced queuing connection",
    kkcnRegApply="kernel compile streams/advanced queuing connection DBMS_AQ.REGOP_APPLY",
    kkcnrini="kernel compile streams advanaced queuing ??",
    kkcnRstatFind="kernel compile streams advanaced queuing ??",
    kkcnRstatIni="kernel compile streams advanaced queuing ??",
    kkcnsubl="kernel compile streams advanaced queuing ??",
    kkcnsubread="kernel compile streams advanaced queuing ??",
    kkcnsuctx="kernel compile streams/advanced queuing connection set user context",
    kkdc="kernel compile data check (constraints)",
    kkdcac="kernel compile data check (constraints) takes a table name as input and uses the obj# to get the constraint name for each constraint associated.",
    kkdcacr="kernel compile data check (constraints) takes a table name as input and uses the obj# to get the constraint name for each constraint associated. check and referential constrains",
    kkdcico="kernel compile data check (constraints) insert constraint definition",
    kkdl="kernel compile dictionary lookup",
    kkdlacd="kernel compile dictionary lookup get all column definitions",
    kkdlGetBaseUser="kernel compile dictionary lookup translate ownerid to a name",
    kkdlGetUserId="kernel compile dictionary lookup get user id",
    kkdlgun="kernel compile dictionary lookup get user name (translate ownerid to a name)",
    kkdliac="kernel compile dictionary lookup ??",
    kkdllk="kernel compile dictionary lookup lock an object",
    kkdo="kernel compile OBJECTS dictionary",
    kkdoloi="kernel compile OBJECTS dictionary load objects related information",
    kkdxUpdateColInfo="kernel compile ??",
    kke="kernel compile cost engine",
    kkeAdd="kernel compile cost engine add",
    kkeAdj="kernel compile cost engine adjust",
    kkeapr="kernel compile cost engine analyze predicates for optimization returns stat ptr",
    kkeasl="kernel compile cost engine process an AND chain of predicates",
    kkecdn="kernel compile cost engine determine cardinality of a table given single table predicates",
    kkecpst="kernel compile cost engine create copy of column statistics in compile time memory",
    kkeds="kernel compile cost engine dynamic sampling (ADS)",
    kkegvl="kernel compile cost engine get a value from an opndef and normalize it for cost",
    kkehrd="kernel compile cost engine get column statistics for a table",
    kkeIdx="kernel compile cost engine index",
    kkejcd="kernel compile cost engine returns cardinality of a join between to tables",
    kkeosl="kernel compile cost engine process an OR chain of predicates",
    kkepsl="kernel compile cost engine selectivity of a single predicate",
    kkercs="kernel compile cost engine read column statistics for an object",
    kkesCreateCache="kernel compile cost engine create cache for statistics",
    kkesIOScaleFactor="kernel compile cost engine calculate the factor for converting the number of blocks to IO cost",
    kkeSort="kernel compile cost engine sorting",
    kkeSortCosts="kernel compile cost engine sorting calculate sort (IO) cost",
    kkeSortCPUCost="kernel compile cost engine sorting calculate sort CPU cost",
    kkesScaleIO="kernel compile cost engine calculate IO cost based on the number of blocks",
    kkest="kernel compile cost engine statistics",
    kketac="kernel compile cost engine table access cost(?)",
    kkeTbScan="kernel compile cost engine table scan",
    kkeTbScanCPUCost="kernel compile cost engine table scan calculate cost of CPU",
    kkeTbScanImc="kernel compile cost engine table scan in-memory column store",
    kkeTbScanImcCPUCost="kernel compile cost engine table scan in-memory column store calculate cost of CPU",
    kkeTbScanImcIOCost="kernel compile cost engine table scan in-memory column store calculate cost of IO",
    kkeTbScanIOCost="kernel compile cost engine table scan calculate cost of IO",
    kkevcs="kernel compile cost engine set view column stats for underlying column",
    kkevp="kernel compile cost engine vector processing",
    kkfd="kernel compile fast dataflow (PQ DFO)",
    kkfi="kernel compile optimizer virtual column/indexes",
    kkfr="kernel compile fast rowid (PQ)",
    kkhf="kernel compile hash join file and memory management",
    kkhr="kernel compile hash join row management",
    kkj="kernel compile job queue",
    kkjbgd="kernel compile job queue DBMS_JOB.KKJBGD BACKGROUND_PROCESS",
    kkjdva="kernel compile job queue DBMS_IJOB.KKJDVA",
    kkjexi="kernel compile job queue DBMS_IJOB.KKJEXI",
    kkjges="kernel compile job queue DBMS_IJOB.KKJGES",
    kkjp="kernel compile job queue package",
    kkjpru="kernel compile job queue package DBMS_IJOB.KKJPRU",
    kkjses="kernel compile job queue DBMS_IJOB.KKJSES",
    kkjspc="kernel compile job queue DBMS_IJOB.KKJSPC",
    kkkibgnsqlblk="kernel compile DBMS_RMIN.RM$_BGN_SQLBLK",
    kkkicalibrateio="kernel compile DBMS_RMIN_SYS.RM$_CALIBRATE_IO",
    kkkicancelsql="kernel compile DBMS_SESSION.KKKICANCELSQL",
    kkkiclrparea="kernel compile DBMS_RMIN_SYS.RM$_CLRPAREA",
    kkkicrtparea="kernel compile DBMS_RMIN_SYS.RM$_CRTPAREA",
    kkkiendsqlblk="kernel compile DBMS_RMIN.RM$_END_SQLBLK",
    kkkiget_pdb_enabled="kernel compile DBMS_RMIN_SYS.RM$_GET_PDB_ENABLED",
    kkkiprpriv="kernel compile DBMS_RMIN.RM$_PROCESS_PRIV",
    kkkirunqdpstmt="kernel compile DBMS_RMIN.RM$_RUN_QUEUED_PARALLEL_STMT",
    kkkisetinigrp="kernel compile DBMS_RMIN.RM$_SET_INITIAL_GROUP_INT",
    kkkisubparea="kernel compile DBMS_RMIN_SYS.RM$_SUBPAREA_EXT",
    kkkiswtchgrpssn="kernel compile DBMS_RMIN_SYS.RM$_SWTCH_SESSION_GROUP_INT",
    kkkiswtchgrpusr="kernel compile DBMS_RMIN_SYS.RM$_SWTCH_USR_GROUP_INT",
    kkkiswtchinvgrp="kernel compile DBMS_SESSION.KKKISWTCHINVGRP SWITCH_CURRENT_CONSUMER_GROUP",
    kkkiupgrpmap="kernel compile DBMS_RMIN.RM$_UP_CONSUMER_GROUP_MAPPINGS",
    kkkiverify_parea_act="kernel compile DBMS_RMIN_SYS.RM$_VERIFY_PENDING_AREA_ACT",
    kkkiverify_parse_id="kernel compile DBMS_RMIN_SYS.RM$_VERIFY_ID_PARSES",
    kkkiverify_privileges="kernel compile DBMS_RMIN.RM$_VERIFY_PRIVILEGES",
    kkkiverify_rm_feature="kernel compile DBMS_RMIN_SYS.RM$_VERIFY_RM_FEATURE",
    kkkiverify_root_pdb="kernel compile DBMS_RMIN_SYS.RM$_IS_ROOT_PDB",
    kkkiverify_str_in="kernel compile DBMS_RMIN_SYS.RM$_VERIFY_STR_IND_INT",
    kkkivldparea="kernel compile DBMS_RMIN_SYS.RM$_VLDPAREA_EXT",
    kkm="kernel compile SQL semantic analysis",
    kkmdel="kernel compile SQL semantic analysis extra semantic processes for deletes",
    kkmdrv="kernel compile SQL semantic analysis driver",
    kkmdrvend="kernel compile SQL semantic analysis ??",
    kkmevw="kernel compile SQL semantic analysis expand view",
    kkmpfcbk="kernel compile SQL semantic analysis process frodef callback",
    kkmpost="kernel compile SQL semantic analysis post processing",
    kkmqccr="kernel compile SQL semantic analysis query compile (memory) creation?",
    kkmupd="kernel compile SQL semantic analysis extra semantic processing for update",
    kkn="kernel compile analyze",
    kkndgd="kernel compile analyze command Analyze Data Gathering Driver",
    kkndrv="kernel compile analyze command Analyze Driver",
    kknls="kernel compile analyze command Analyze Locks/Security",
    kknpat="kernel compile analyze command partition analyze table",
    kknpob="kernel compile analyze command partition object",
    kko="kernel compile optimizer",
    kkoaccsqf="kernel compile optimizer adjust cardinality and cost for subquery filters",
    kkoads="kernel compile optimizer active dynamic sampling (ADS)",
    kkoadsComputeSqlid="kernel compile optimizer active dynamic sampling (ADS) compute sqlid",
    kkoar="kernel compile optimizer automatic (sql) reoptimisation",
    kkoasj="kernel compile optimizer add semi-join function",
    kkoat="kernel compile optimizer auto tuning optimizer",
    kkobmp="kernel compile optimizer bitmap processing",
    kkocfb="kernel compile optimizer cardinality feedback",
    kkocnp="kernel compile optimizer cost next permutation",
    kkocpjoinqb="kernel compile optimizer copy and join query block",
    kkocpqb="kernel compile optimizer copy query block: copy a query block by reparsing its SQL text",
    kkocri="kernel compile optimizer create index",
    kkocs="kernel compile optimizer cursor sharing",
    kkoctx="kernel compile optimizer setup context for optimizer",
    kkodp="kernel compile optimizer AQP",
    kkoecp="kernel compile optimizer evaluate constant predicate",
    kkogfp="kernel compile optimizer get first permutation",
    kkoiqb="kernel compile optimizer initialise query block",
    kkojnp="kernel compile optimizer join order path",
    kkooqb="kernel compile optimizer optimize query block",
    kkoOrExpand="kernel compile optimizer or expansion",
    kkopm="kernel compile optimizer plan management",
    kkopmCheckSmbUpdate="kernel compile optimizer plan management Check if updates to the Sql Management Base are pending",
    kkopq="kernel compile optimizer parallel optimization",
    kkopqAllocPQCtx="kernel compile optimizer parallel optimization allocate PQ context",
    kkopqInitDopComputation="kernel compile optimizer parallel optimization initialise DOP computation",
    kkopqIsDegreePolicyManual="kernel compile optimizer parallel optimization is degree policy manual",
    kkopqIsDopComputedOrParallelHinted="kernel compile optimizer parallel optimization is DOP computed or parallel hinted",
    kkoqbc="kernel compile optimizer query block optimization start point",
    kkosbn="kernel compile optimizer sort bitmap nodes",
    kkoshd="kernel compile optimizer shard sql",
    kkostran="kernel compile optimizer star transformation",
    kkotap="kernel compile optimizer table access path",
    kkotsc="kernel compile optimizer tablescan cost",
    kkp="kernel compile compilation",
    kkpa="kernel compile compilation partitioning",
    kkpamFRange="kernel compile compilation partitioning ??",
    kkpamRefGet="kernel compile compilation partitioning ??",
    kkpapbGetRange="kernel compile compilation partitioning ??",
    kkpapGRangeSLvl="kernel compile compilation partitioning ??",
    kkpapiItOpen="kernel compile compilation partitioning ??",
    kkpapItOpen="kernel compile compilation partitioning ??",
    kkpcrt="kernel compile compilation create",
    kkpo="kernel compile compilation partitioned objects",
    kkpod="kernel compile compilation partitioned objects partitioning dictionary",
    kkq="kernel compile query",
    kkqanj="kernel compile query ansi join",
    kkqbj="kernel compile query bushy join",
    kkqbjdrv="kernel compile query bushy join driver",
    kkqcby="kernel compile query connect by",
    kkqcls="kernel compile query subquery coalescing",
    kkqcs="kernel compile query cost based query transformation",
    kkqct="kernel compile query cost based query transformation",
    kkqctCostTransfQB="kernel compile query cost based query transformation transfer query block cost (?)",
    kkqctdrv="kernel compile query cost based query transformation driver",
    kkqctdrvBJ="kernel compile query cost based query transformation driver bushy join",
    kkqctdrvCVM="kernel compile query cost based query transformation driver complex view merging",
    kkqctdrvDP="kernel compile query cost based query transformation driver distinct placement",
    kkqctdrvGBP="kernel compile query cost based query transformation driver group by placement",
    kkqctdrvIT="kernel compile query cost based query transformation driver initiate cost-based transformation",
    kkqctdrvJF="kernel compile query cost based query transformation driver join filter",
    kkqctdrvJPPD="kernel compile query cost based query transformation driver Join Predicate Push Down",
    kkqctdrvORE="kernel compile query cost based query transformation driver or-expansion",
    kkqctdrvPU="kernel compile query cost based query transformation driver PU",
    kkqctdrvST="kernel compile query cost based query transformation driver star transformation",
    kkqctdrvSU="kernel compile query cost based query transformation driver subquery unnesting",
    kkqctdrvTD="kernel compile query cost based query transformation driver transformation directives",
    kkqctdrvTE="kernel compile query cost based query transformation driver table expansion",
    kkqctdrvVM="kernel compile query cost based query transformation driver view merging",
    kkqctdrvVT="kernel compile query cost based query transformation driver vector transformation",
    kkqctInterleave="kernel compile query cost based query transformation interleave",
    kkqctInterleaveCVM="kernel compile query cost based query transformation interleave complex view merging",
    kkqctInterleaveDP="kernel compile query cost based query transformation interleave distinct placement",
    kkqctInterleaveJF="kernel compile query cost based query transformation interleave join filter",
    kkqctInterleaveJPPD="kernel compile query cost based query transformation interleave join predicate pushdown",
    kkqctInterleaveLargeQry="kernel compile query cost based query transformation interleave large query",
    kkqctInterleaveORE="kernel compile query cost based query transformation interleave or-expansion",
    kkqctInterleaveSTJF="kernel compile query cost based query transformation interleave STJF",
    kkqctnojppd="kernel compile query cost based query transformation no join predicate pushdown (?)",
    kkqctNxtLinearStt="kernel compile query cost based query transformation next linear state",
    kkqcttcalo="kernel compile query cost based query transformation type check allocate",
    kkqctUpdBestCostStt="kernel compile query cost based query transformation pick the most efficient query transformation state",
    kkqdrv="kernel compile query transformation driver",
    kkqgb="kernel compile query group by",
    kkqgbp="kernel compile query group by placement",
    kkqgbpCheckPred="kernel compile query group by placement check validity of predicate",
    kkqgbpCheckValidity="kernel compile query group by placement check basic validity",
    kkqgbpColHasHighNDV="kernel compile query group by placement Column has high NDV",
    kkqgbpdrv="kernel compile query group by placement driver",
    kkqgbpTravChkTran="kernel compile query group by placement traverse, check and transform",
    kkqj="kernel compile query join analysis",
    kkqjf="kernel compile query join analysis join factorization",
    kkqjfChkBasicValidity="kernel compile query join analysis join factorization check basic validity",
    kkqjfdrv="kernel compile query join analysis join factorization driver",
    kkqjpd="kernel compile query join analysis predicate push down",
    kkqjpdctr="kernel compile query join analysis predicate push down traverse and transform",
    kkqjpddrv="kernel compile query join analysis predicate push down driver",
    kkqoj="kernel compile query outer join",
    kkqojeanl="kernel compile query outer join expression analyze",
    kkqolap="kernel compile query olap",
    kkqolapdrv="kernel compile query olap driver",
    kkqore="kernel compile query or-expansion",
    kkqoredrv="kernel compile query or-expansion driver",
    kkqstar="kernel compile query star transformation",
    kkqstarChkValidity="kernel compile query star transformation check validity",
    kkqstardrv="kernel compile query star transformation driver",
    kkqt="kernel compile query table",
    kkqtcplog="kernel compile query table copy log chain (query tools)",
    kkqte="kernel compile query table expansion",
    kkqteCheckValidity="kernel compile query table expansion check validity",
    kkqtedrv="kernel compile query table expansion driver",
    kkqtedtr="kernel compile query ??",
    kkqteGeneratePreds="kernel compile query ??",
    kkqteParseSqlForPG="kernel compile query ??",
    kkqteTransform="kernel compile query ??",
    kkqu="kernel compile query subquery unnesting",
    kkqvm="kernel compile query view merging",
    kkqvmdrv="kernel compile query view merging driver",
    kkqvt="kernel compile query vector transformation",
    kkqvtCheckGeneralValidity="kernel compile query vector transformation check general validity",
    kkqvtdrv="kernel compile query vector transformation driver",
    kkr="kernel compile rowsource",
    kkrba="kernel compile rowsource bitmap index and",
    kkrbc="kernel compile rowsource bitmap index compaction",
    kkrbi="kernel compile rowsource bitmap index creation",
    kkrbo="kernel compile rowsource bitmap index or",
    kkrbt="kernel compile rowsource bob dylan convertor",
    kkrbu="kernel compile rowsource unlimited or",
    kkrbx="kernel compile rowsource index access",
    kkrh="kernel compile rowsource hash",
    kkri="kernel compile rowsource parallel index create",
    kkrp="kernel compile rowsource parallelizer (DFO)",
    kkrpfch="kernel compile rowsource parallelizer (DFO) fetch from rowsource",
    kkrt="kernel compile rowsource rowsource table create as select",
    kks="kernel compile shared objects (cursor)",
    kksalc="kernel compile shared objects (cursor) allocate compile time memory",
    kksald="kernel compile shared objects (cursor) auxiliary load function",
    kksalx="kernel compile shared objects (cursor) allocate bytes from the execution time heap",
    kksarm="kernel compile shared objects (cursor) authorize for remote",
    kksauc="kernel compile shared objects (cursor) authorized to use this child?",
    kksaxs="kernel compile shared objects (cursor) semantic analysis, authorize and audit",
    kksCheckForTrace="kernel compile shared objects (cursor) check for trace (not sure which; 10046?)",
    kkscls="kernel compile shared objects (cursor) close cursor, user is done with it",
    kkscs="kernel compile shared objects (cursor) child cursor",
    kkscsCheckCriteria="kernel compile shared objects (cursor) child cursor check cursor criteria",
    kkscsCheckCursor="kernel compile shared objects (cursor) child cursor check if child cursor can be used",
    kkscscid="kernel compile shared objects (cursor) child cursor criteria identification",
    kkscscid_AdgRedirect="kernel compile shared objects (cursor) child cursor criteria identification active dataguard redirect",
    kkscscid_auc="kernel compile shared objects (cursor) child cursor criteria identification authorized to use this child",
    kkscscid_containers="kernel compile shared objects (cursor) child cursor criteria identification PDB(?)",
    kkscscid_pddl="kernel compile shared objects (cursor) child cursor criteria identification parallel ddl(?)",
    kkscscid_pdm="kernel compile shared objects (cursor) child cursor criteria identification parallel dml(?)",
    kkscsSearchChildList="kernel compile shared objects (cursor) child cursor ??",
    kksdopt="kernel compile shared objects (cursor) smart disk no option",
    kksfbc="kernel compile shared objects (cursor) find bound cursor",
    kksffr="kernel compile shared objects (cursor) free a frame",
    kksfft="kernel compile shared objects (cursor) find first token",
    kksFreeHeap="kernel compile shared objects (cursor) ??",
    kksFullTypeCheck="kernel compile shared objects (cursor) full type check (performs semantic and authorization checks, cost based optimization)",
    kksh="kernel compile shared objects (cursor) cursor hash table",
    kksheqd="kernel compile shared objects (cursor) cursor hash table clean/delete and enqueue",
    kkshh="kernel compile shared objects (cursor) cursor hash table ?",
    kkshhcdel="kernel compile shared objects (cursor) cursor hash table ? child delete",
    kkshhcins="kernel compile shared objects (cursor) cursor hash table ? child insert",
    kkshin="kernel compile shared objects (cursor) cursor hash table incomplete list",
    kkshindel="kernel compile shared objects (cursor) cursor hash table incomplete list remove child",
    kkshinins="kernel compile shared objects (cursor) cursor hash table incomplete list insert child",
    kkshmih="kernel compile shared objects (cursor) cursor hash table ??",
    kkslcr="kernel compile shared objects (cursor) ??",
    kkslhsh="kernel compile shared objects (cursor) ??",
    kksLoadChild="kernel compile shared objects (cursor) load child",
    kksLockDelete="kernel compile shared objects (cursor) ??",
    kksLockOperation="kernel compile shared objects (cursor) ??",
    kkslod="kernel compile shared objects (cursor) cursor load callback",
    kkslof="kernel compile shared objects (cursor) log off (?)",
    kkslrev="kernel compile shared objects (cursor) reverse system generated bind variable to litaral",
    kkslrpl="kernel compile shared objects (cursor) replace literals in SQL statement (cursor_sharing=force)",
    kkslsp="kernel compile shared objects (cursor) ??",
    kksMapCursor="kernel compile shared objects (cursor) map cursor",
    kksmcAlFree="kernel compile shared objects (cursor) conditially segmented array allocate.",
    kksParseChildCursor="kernel compile shared objects (cursor) parse child cursor",
    kksParseCursor="kernel compile shared objects (cursor) parse cursor",
    kkspfda="kernel compile shared objects (cursor) multiple context area management",
    kksPopCompileCall="kernel compile shared objects (cursor) end compilation call",
    kkspsc0="kernel compile shared objects (cursor) parse shared cursor",
    kksReplaceLiterals="kernel compile shared objects (cursor) replace literals in SQL statement (cursor_sharing=force)",
    kkssbt="kernel compile shared objects (cursor) set bind types",
    kksscl="kernel compile shared objects (cursor) scan child list",
    kksSetBindType="kernel compile shared objects (cursor) ??",
    kkstpld="kernel compile shared objects (cursor) this functions returns a text pointer to a contiguous string (sqltext?)",
    kksumc="kernel compile shared objects (cursor) unmap shared cursor",
    kksvld="kernel compile shared objects (cursor) validate cursor",
    kksx="kernel compile shared objects (cursor) execute(?)",
    kksxCreate="kernel compile shared objects (cursor) execute(?) DBMS_SQL_TRANSLATOR.CREATE_PROFILE",
    kksxDeregErrorTrans="kernel compile shared objects (cursor) execute(?) DBMS_SQL_TRANSLATOR.DEREGISTER_ERROR_TRANSLATION",
    kksxDeregSQLTrans="kernel compile shared objects (cursor) execute(?) DBMS_SQL_TRANSLATOR.DEREGISTER_SQL_TRANSLATION",
    kksxDrop="kernel compile shared objects (cursor) execute(?) DBMS_SQL_TRANSLATOR.DROP_PROFILE",
    kksxEnableErrorTrans="kernel compile shared objects (cursor) execute(?) DBMS_SQL_TRANSLATOR.ENABLE_ERROR_TRANSLATION",
    kksxEnableSQLTrans="kernel compile shared objects (cursor) execute(?) DBMS_SQL_TRANSLATOR.ENABLE_SQL_TRANSLATION",
    kksxRegErrorTrans="kernel compile shared objects (cursor) execute(?) DBMS_SQL_TRANSLATOR.REGISTER_ERROR_TRANSLATION",
    kksxRegSQLTrans="kernel compile shared objects (cursor) execute(?) DBMS_SQL_TRANSLATOR.REGISTER_SQL_TRANSLATION",
    kksxResolve="kernel compile shared objects (cursor) execute(?) DBMS_SQL_TRANSLATOR.RESOLVE_PROFILE",
    kksxsccmp="kernel compile shared objects (cursor) execute(?) shared cursor criteria compare(?)",
    kksxSetAttribute="kernel compile shared objects (cursor) execute(?) DBMS_SQL_TRANSLATOR.SET_ATTRIBUTE",
    kksxSetDictSQLID="kernel compile shared objects (cursor) execute(?) DBMS_SQL_TRANSLATOR.SET_DICTIONARY_SQL_ID",
    kksxSetErrorTransCmt="kernel compile shared objects (cursor) execute(?) DBMS_SQL_TRANSLATOR.SET_ERROR_TRANSLATION_COMMENT",
    kksxSetSQLTransCmt="kernel compile shared objects (cursor) execute(?) DBMS_SQL_TRANSLATOR.SET_SQL_TRANSLATION_COMMENT",
    kksxSetSQLTransError="kernel compile shared objects (cursor) execute(?) DBMS_SQL_TRANSLATOR.SET_SQL_TRANSLATION_ERROR",
    kksxSetSQLTransMod="kernel compile shared objects (cursor) execute(?) DBMS_SQL_TRANSLATOR.SET_SQL_TRANSLATION_MODULE",
    kksxSQLHash="kernel compile shared objects (cursor) execute(?) DBMS_SQL_TRANSLATOR.SQL_HASH",
    kksxSQLID="kernel compile shared objects (cursor) execute(?) DBMS_SQL_TRANSLATOR.SQL_ID",
    kksxTranslateError="kernel compile shared objects (cursor) execute(?) DBMS_SQL_TRANSLATOR.TRANSLATE_ERROR",
    kksxTranslateSQL="kernel compile shared objects (cursor) execute(?) DBMS_SQL_TRANSLATOR.TRANSLATE_SQL",
    kkt="kernel compile triggers",
    kktalt="kernel compile triggers alter trigger",
    kktf="kernel compile triggers polymorphic table functions",
    kktficdcstoreallbol="kernel compile triggers polymorphic table functions DBMS_TF.KKTFICDSTOREALLBOL CSTORE_GET",
    kktficdcstoreallchr="kernel compile triggers polymorphic table functions DBMS_TF.KKTFICDSTOREALLCHR CSTORE_GET",
    kktficdcstorealldat="kernel compile triggers polymorphic table functions DBMS_TF.KKTFICDSTOREALLDAT CSTORE_GET",
    kktficdcstoreallnum="kernel compile triggers polymorphic table functions DBMS_TF.KKTFICDSTOREALLNUM CSTORE_GET",
    kktfICDCStoreExists="kernel compile triggers polymorphic table functions DBMS_TF.KKTFCSTORE_EXISTS CSTORE_EXISTS",
    kktfICDCStoreGetBol="kernel compile triggers polymorphic table functions DBMS_TF.KKTFICDCSTOREGETBOL CSTORE_GET",
    kktfICDCStoreGetChar="kernel compile triggers polymorphic table functions DBMS_TF.KKTFICDCSTOREGETVC2 CSTORE_GET",
    kktfICDCStoreGetDat="kernel compile triggers polymorphic table functions DBMS_TF.KKTFICDCSTOREGETDAT CSTORE_GET",
    kktfICDCStoreGetNum="kernel compile triggers polymorphic table functions DBMS_TF.KKTFICDCSTOREGETNUM CSTORE_GET",
    kktfICDEnvGet="kernel compile triggers polymorphic table functions DBMS_TF.KKTF_ICD_ENV_GET GET_ENV",
    kktfICDEnvProj="kernel compile triggers polymorphic table functions DBMS_TF.KKTF_ICD_ENV_PROJ GET_ENV",
    kktfICDEnvPut="kernel compile triggers polymorphic table functions DBMS_TF.KKTF_ICD_ENV_PUT GET_ENV",
    kktfICDEnvPX="kernel compile triggers polymorphic table functions DBMS_TF.KKTF_ICD_ENV_PX GET_ENV",
    kktfICDEnvRCnt="kernel compile triggers polymorphic table functions DBMS_TF.KKTF_ICD_ENV_RCNT",
    kktfICDEnvSamp="kernel compile triggers polymorphic table functions DBMS_TF.KKTF_ICD_ENV_SAMP",
    kktfICDGetPTFId="kernel compile triggers polymorphic table functions DBMS_TF.KKTF_ICD_GETPTF_ID GET_XID",
    kktfICDRRFix="kernel compile triggers polymorphic table functions DBMS_TF.KKTF_ICD_RR_FIX PUT_ROW_SET ROW_REPLICATION",
    kktfICDRRVar="kernel compile triggers polymorphic table functions DBMS_TF.KKTF_ICD_RR_VAR PUT_ROW_SET ROW_REPLICATION",
    kktfICDXStoreClear="kernel compile triggers polymorphic table functions DBMS_TF.KKTFXSTORE_CLEAR XSTORE_CLEAR",
    kktfICDXStoreExists="kernel compile triggers polymorphic table functions DBMS_TF.KKTFXSTORE_EXISTS XSTORE_EXISTS",
    kktfICDXStoreGetBol="kernel compile triggers polymorphic table functions DBMS_TF.KKTFICDXSTOREGETBOL XSTORE_GET",
    kktfICDXStoreGetChar="kernel compile triggers polymorphic table functions DBMS_TF.KKTFICDXSTOREGETVC2 XSTORE_GET",
    kktfICDXStoreGetDat="kernel compile triggers polymorphic table functions DBMS_TF.KKTFICDXSTOREGETDAT XSTORE_GET",
    kktfICDXStoreGetNum="kernel compile triggers polymorphic table functions DBMS_TF.KKTFICDXSTOREGETNUM XSTORE_GET",
    kktfICDXStoreRemove="kernel compile triggers polymorphic table functions DBMS_TF.KKTFXSTORE_REMOVE XSTORE_REMOVE",
    kktfICDXStoreSetBol="kernel compile triggers polymorphic table functions DBMS_TF.KKTFICDXSTORESETBOL XSTORE_SET",
    kktfICDXStoreSetChar="kernel compile triggers polymorphic table functions DBMS_TF.KKTFICDXSTORESETVC2 XSTORE_SET",
    kktfICDXStoreSetDat="kernel compile triggers polymorphic table functions DBMS_TF.KKTFICDXSTORESETDAT XSTORE_SET",
    kktfICDXStoreSetNum="kernel compile triggers polymorphic table functions DBMS_TF.KKTFICDXSTORESETNUM XSTORE_SET",
    kktget="kernel compile triggers ??",
    kktiddlt="kernel compile triggers DBMS_DDL_INTERNAL.IS_DDL_TRIGGER",
    kkx="kernel compile execute",
    kkxa="kernel compile execute external/asynch RPC",
    kkxb="kernel compile execute external tables",
    kkxcg1="kernel compile execute DBMS_PREPROCESSOR.KKXCG1 GET_PP_SOURCE_LINES",
    kkxcg2="kernel compile execute DBMS_PREPROCESSOR.KKXCG2 GET_PP_SOURCE_LINES",
    kkxcg3="kernel compile execute DBMS_PREPROCESSOR.KKXCG3 GET_PP_SOURCE_LINES",
    kkxcls="kernel compile execute close cursor",
    kkxcmp="kernel compile execute compile (all compilation phases)",
    kkxerae="kernel compile execute DBMS_OUTPUT.KKXERAE RAISE_APPLICATION_ERROR",
    kkxexe="kernel compile execute execute plsql",
    kkxj="kernel compile execute java",
    kkxjexe="kernel compile execute java execute",
    kkxl="kernel compile execute lob",
    kkxlcisopen="kernel compile execute lob UTL_SYS_COMPRESS.ISOPEN",
    kkxlcomplzadd="kernel compile execute lob UTL_SYS_COMPRESS.LZ_COMPRESS_ADD",
    kkxlcomplzclose="kernel compile execute lob UTL_SYS_COMPRESS.LZ_COMPRESS_CLOSE",
    kkxlcomplzlob="kernel compile execute lob UTL_SYS_COMPRESS.LZ_COMPRESS_BLOB LZ_COMPRESS_BFILE",
    kkxlcomplzopen="kernel compile execute lob UTL_SYS_COMPRESS.LZ_COMPRESS_OPEN",
    kkxlcompulzclose="kernel compile execute lob UTL_SYS_COMPRESS.LZ_UNCOMPRESS_CLOSE",
    kkxlcompulzextract="kernel compile execute lob UTL_SYS_COMPRESS.LZ_EXTRACT",
    kkxlcompulzlob="kernel compile execute lob UTL_SYS_COMPRESS.LZ_UNCOMPRESS_BLOB LZ_UNCOMPRESS_BFILE",
    kkxlcompulzopen="kernel compile execute lob UTL_SYS_COMPRESS.LZ_UNCOMPRESS_OPEN",
    kkxlcpinit="kernel compile execute lob UTL_SYS_COMPRESS.INITIALIZE_I",
    kkxlnu="kernel compile execute lob DBMS_LOBUTIL",
    kkxlnucpprm="kernel compile execute lob DBMS_LOBUTIL KKXLNU_CPPRMDEDUP",
    kkxlnugd="kernel compile execute lob DBMS_LOBUTIL KKXLNU_GETDEDUPSET",
    kkxlnugi="kernel compile execute lob DBMS_LOBUTIL KKXLNU_GETINODE",
    kkxlnugl="kernel compile execute lob DBMS_LOBUTIL KKXLNU_GETLOBMAP",
    kkxlr="kernel compile execute lob DBMS_LOB",
    kkxlr_append="kernel compile execute lob DBMS_LOB KKXL_APPEND",
    kkxlr_close="kernel compile execute lob DBMS_LOB KKXL_CLOSE",
    kkxlr_compare="kernel compile execute lob DBMS_LOB KKXL_COMPORE",
    kkxlr_convertToBlob="kernel compile execute lob DBMS_LOB KKXL_CONVERTTOBLOB",
    kkxlr_convertToClob="kernel compile execute lob DBMS_LOB KKXL_CONVERTTOCLOB",
    kkxlr_copy="kernel compile execute lob DBMS_LOB KKXL_COPY",
    kkxlr_erase="kernel compile execute lob DBMS_LOB KKXL_ERASE",
    kkxlr_get_storage_limit="kernel compile execute lob DBMS_LOB KKXL_GET_STORAGE_LIMIT",
    kkxlr_instr="kernel compile execute lob DBMS_LOB KKXL_INSTR",
    kkxlr_open="kernel compile execute lob DBMS_LOB KKXL_OPEN",
    kkxlr_read="kernel compile execute lob DBMS_LOB KKXL_READ",
    kkxlr_substr="kernel compile execute lob DBMS_LOB KKXL_SUBSTR",
    kkxlr_trim="kernel compile execute lob DBMS_LOB KKXL_TRIM",
    kkxlr_write="kernel compile execute lob DBMS_LOB KKXL_WRITE",
    kkxlr_writeappend="kernel compile execute lob DBMS_LOB KKXL_WRITE KKXL_WRITEAPPEND",
    kkxpfr="kernel compile execute PGA free",
    kkxppp="kernel compile execute private pipe",
    kkxrd="kernel compile execute DBMS_ROWID",
    kkxrpc="kernel compile execute rpc",
    kkxsem="kernel compile execute semantic phase",
    kkxsexe="kernel compile execute execute a cursor",
    kkxsexr="kernel compile execute execute with returning binds",
    kkxsfcn="kernel compile execute scalar fetch n rows",
    kkxsscfch="kernel compile execute scalar fetch",
    kkxt="kernel compile execute trigger",
    kkxtcs="kernel compile execute trigger trace pl/sql call stack",
    kkxtexe="kernel compile execute trigger trigger execute",
    kkxtgsv="kernel compile execute trigger DBMS_INTERNAL_TRIGGER.KKXTGSV GET_UGAKNT",
    kkxtilc="kernel compile execute trigger DBMS_INTERNAL_TRIGGER.KKXTILC INVALIDATE_LIBRARY_CACHE",
    kkxtmit="kernel compile execute trigger DBMS_INTERNAL_TRIGGER.KKXTMIT MAINTAIN_INTERNAL_TRIGGER",
    kkxtusv="kernel compile execute trigger DBMS_INTERNAL_TRIGGER.KKXTUSV SET_UGAKNT",
    kkxuexe="kernel compile execute stub execute",
    kkxwtp="kernel compile execute plsql compiler",
    kky="kernel compile system/session",
    kkyasy="kernel compile system/session alter system driver",
    kkz="kernel compile security",
    kkzgdcol="kernel compile security get distinct column. This function checks the column chain for a frodef and mark the columns needed for materialized view.",
    kkzgna="kernel compile security generate name",
    kkzi_is_XMLtab_Objrel="kernel compile security DBMS_REDEFINITION.IS_XMLTAB_OBJREL",
    kkzi_reg_idx_param="kernel compile security DBMS_REDEFINITION.REG_XMLIDX_PARAMSTR DBMS_REDEFINITION.IS_PARAM_NM_TAKEN",
    kkzi_test_dml_refresh_trigger="kernel compile security DBMS_REDEFINITION.TEST_DML_REFRESH_TRIGGER",
    kkzi_xmlidx_parmstr="kernel compile security DBMS_REDEFINITION.GET_XMLIDX_PARAMSTR",
    kkzi_xmlidx_sxtab="kernel compile security DBMS_REDEFINITION.GET_XMLIDX_SX_TAB",
    kkziacset="kernel compile security DBMS_IREFRESH.SET_AUTOCOMMIT",
    kkziaord="kernel compile security DBMS_REDEFINITION.ABORT_REDEF_INT",
    kkzibcrd="kernel compile security DBMS_SNAP_INTERNAL.KKZIBCRD CLEAR_DIRECTION",
    kkzibfqn="kernel compile security DBMS_SNAPSHOT_UTL.GET_FULLY_QUALIFIED_NAME",
    kkzibpkce="kernel compile security DBMS_SNAPSHOT_UTL.GET_PK_BY_EOID",
    kkzibponm="kernel compile security DBMS_SNAPSHOT_UTL.GET_OBJECT_NAME_INT",
    kkzibsrd="kernel compile security DBMS_SNAP_INTERNAL.KKZIBSRD SET_REDIRECTION",
    kkzibsu="kernel compile security DBMS_SNAPSHOT_UTL.SET_UP_INT",
    kkzibtbto="kernel compile security DBMS_SNAPSHOT_UTL.GET_TYPEINFO_BY_TOID",
    kkzibvl="kernel compile security DBMS_SNAPSHOT_UTL.VERIFY_LOG_INT",
    kkzibwu="kernel compile security DBMS_SNAPSHOT_UTL.WRAP_UP",
    kkzichkprivs="kernel compile security DBMS_REDEFINITION.CHECK_PRIVS",
    kkziciti="kernel compile security DBMS_SNAP_INTERNAL.KKZCITI VEC_COLS_IN_TABLE",
    kkzickusrpriv="kernel compile security DBMS_ISNAPSHOT.CHECK_USERPRIV",
    kkzicls="kernel compile security DBMS_SNAPSHOT_UTL.CLEANUP_SUBSCRIPTION",
    kkzicort="kernel compile security DBMS_REDEFINITION.CAN_REFEF_INT",
    kkzicp3g="kernel compile security DBMS_SNAPSHOT_KKXRCA.CHECK_PERMISSION_INTERNAL",
    kkzicptable_vdollar_basic="kernel compile security DBMS_REDEFINITION.COPY_TABLE_DEPENDENTS_VBASIC",
    kkzicptable_vdollar_prog="kernel compile security DBMS_REDEFINITION.COPY_TABLE_DEPENDENTS_VPROG",
    kkzicptable_vdollar_setb="kernel compile security DBMS_REDEFINITION.COPY_TABLE_DEPENDENTS_SETB",
    kkzicptable_vdollar_waitb="kernel compile security DBMS_REDEFINITION.COPY_TABLE_DEPENDENTS_WAITB",
    kkzidlused="kernel compile security DBMS_SNAPSHOT_UTL.DIRECT_LOAD_USED",
    kkzidro="kernel compile security DBMS_SNAP_INTERNAL.KKZIDRO DELETE_REFRESH_OPERATIONS",
    kkzienms="kernel compile security DBMS_SNAP_INTERNAL.KKZIENM ENSURE_NWAY_MASTER_SITE",
    kkzieoms="kernel compile security DBMS_SNAP_INTERNAL.KKZIEOM ENSURE_ONE_WAY_MASTER_SITE",
    kkziess="kernel compile security DBMS_SNAP_INTERNAL.KKZIESS ENSURE_SNAPSHOT_SITE",
    kkziexecddl="kernel compile security DBMS_REDEFINITION.PARSE_DDL",
    kkzifenq="kernel compile security DBMS_SNAPSHOT_KKXRCA.RELEASE_ENQ_SNAPSHOTS",
    kkziford="kernel compile security DBMS_REDEFINITION.FINISH_REDEF_INT",
    kkzifr3g="kernel compile security DBMS_SNAPSHOT_KKXRCA.REFRESH_INQ_SNAPSHOTS",
    kkzigbdb="kernel compile security DBMS_SNAP_INTERNAL.KKZIGBDB GET_BACK_END_DB",
    kkzigenq="kernel compile security DBMS_SNAPSHOT_KKXRCA.GET_ENQ_SNAPSHOTS",
    kkziglnm="kernel compile security DBMS_SNAPSHOT_UTL.GET_LOG_NAME",
    kkzigltyp="kernel compile security DBMS_SNAPSHOT_UTL.GET_LOG_TYPE",
    kkzigmbc="kernel compile security DBMS_SNAPSHOT_UTL.GET_MAX_BYTES_PER_CHAR",
    kkzigmv3g="kernel compile security DBMS_SNAPSHOT_UTL.GET_COLM_MASKVEC",
    kkzigpe="kernel compile security DBMS_SNAPSHOT_KKXRCA.GET_PARALLEL",
    kkzigpki="kernel compile security DBMS_SNAPSHOT_UTL.GET_PK_CONSTRAINT_INFO",
    kkzigrcol="kernel compile security DBMS_SNAPSHOT_UTL.GET_RELATIONAL_COLUMNS",
    kkzigsp="kernel compile security DBMS_SNAPSHOT_KKXRCA.GET_SESSION_ENV",
    kkzigtn="kernel compile security DBMS_REDEFINITION.GET_TABLE_NAME",
    kkzigunqnm="kernel compile security DBMS_REDEFINITION.GET_UNQ_NAME",
    kkzii_o2n="kernel compile security DBMS_SNAPSHOT_UTL.TRANS_IN_OLD2NEW",
    kkziibtrd="kernel compile security DBMS_SNAP_INTERNAL.KKZIIBTRD TEST_DIRECTION",
    kkziicsu="kernel compile security DBMS_SNAP_INTERNAL.IAS_CREATE_MV",
    kkziIsUserCreatedIdx="kernel compile security DBMS_REDEFINITION.IS_USER_CREATED",
    kkzilnr3g="kernel compile security DBMS_SNAP_INTERNAL.LOC_NAME_RES3G LOCAL_NAME_RESOLVE",
    kkzimlt="kernel compile security DBMS_SNAPSHOT_UTL.MASTER_LOG_TYPE",
    kkzimroa="kernel compile security DBMS_SNAP_INTERNAL.MODIFY_RO_ATTRIBUTE",
    kkzio_n2o="kernel compile security DBMS_SNAPSHOT_UTL.TRANS_OUT_NEW2OLD",
    kkziofln="kernel compile security DBMS_SNAP_INTERNAL.INSTANTIATE_OFFLINE",
    kkziofvs="kernel compile security DBMS_SNAP_INTERNAL.VALIDATE_SQL",
    kkziorset="kernel compile security DBMS_REDEFINITION.SET_REDEF_SESSION",
    kkzipllg="kernel compile security DBMS_ISNAPSHOT.KKZIPLLG PURGE_LDR_LOG",
    kkzipsl_xid="kernel compile security DBMS_ISNAPSHOT.KKZIPSL_XID PURGE_LOG_XID",
    kkzirdobj="kernel compile security DBMS_REDEFINITION.REGISTER_DEP_OBJ_INT",
    kkzisbdb="kernel compile security DBMS_SNAPSHOT_INTERNAL.KKZISBDB SET_BACK_END_DB SYNC_BACK_END",
    kkziset="kernel compile security DBMS_SNAPSHOT_UTL.SETUP",
    kkziSetAclmv="kernel compile security DBMS_SNAP_INTERNAL.SET_I_AM_AN_ACLMV",
    kkzisf3g="kernel compile security DBMS_SNAPSHOT_KKXRCA.SCHEDULE_KERNEL_INTERFACE",
    kkzisint="kernel compile security DBMS_REDEFINITION.SYNC_INTERIM_INT",
    kkzisord="kernel compile security DBMS_REDEFINITION.START_REDEF_INT",
    kkzispe="kernel compile security DBMS_SNAPSHOT_KKXRCA.SET_PARALLEL_ENV",
    kkzisr_chk_tbl_priv="kernel compile security DBMS_SNAPSHOT_COMMON.CHECK_PRIVS_ON_TABLE_PRIVATE",
    kkzisr_do_refr_op="kernel compile security DBMS_SYNC_REFRESH_INTERNAL.DO_REFRESH_OPN_INTERNAL",
    kkzisr_prepstlog="kernel compile security DBMS_SYNC_REFRESH_INTERNAL.PREPARE_STAGING_LOG_INTERNAL",
    kkzisr_regmviews="kernel compile security DBMS_SYNC_REFRESH_INTERNAL.REGISTER_MVIEWS_INTERNAL",
    kkzisr_throwerr="kernel compile security DBMS_SYNC_REFRESH_INTERNAL.THROW_ERROR",
    kkzisro="kernel compile security DBMS_SNAP_INTERNAL.KKZISRO GENERATE_REFRESH_OPERATIONS",
    kkzissp="kernel compile security DBMS_SNAPSHOT_KKXRCA.SET_SESSION_ENV",
    kkzisu="kernel compile security DBMS_SNAPSHOT_UTL.SUBSCRIBE",
    kkzitti="kernel compile security DBMS_SNAP_INTERNAL.KKZITTI",
    kkziudobj="kernel compile security DBMS_REDEFINITION.UNREGISTER_DEP_OBJ_INT",
    kkziulph="kernel compile security DBMS_SNAPSHOT_UTL.UPDATE_LOG_PLACEHOLDER",
    kkzivcmp="kernel compile security DBMS_SNAPSHOT_UTL.KKZIVCMP VECTOR_COMPARE",
    kkzivfc="kernel compile security DBMS_SNAPSHOT_UTL.VERIFY_FC_AGE",
    kkzivld="kernel compile security DBMS_SNAPSHOT_UTL.VALIDATE",
    kkzivordclr="kernel compile security DBMS_REDEFINITION.VDOLLAR_ORD_CLR",
    kkzivordini="kernel compile security DBMS_REDEFINITION.VDOLLAR_ORD_INIT",
    kkziwrp="kernel compile security DBMS_SNAPSHOT_UTL.WRAPUP",
    kkzrgrc="kernel compile security DBMS_SNAP_REPAPI.GENERATE_REFRESH_CONTEXT",
    kl="kernel loader",
    klc="kernel loader column array builder",
    klclil1r="kernel loader column array builder c level interface load 1 row",
    klcs="kernel loader column array builder character set",
    klcslod="kernel loader column array builder character set load NLS data object",
    kll="kernel loader library",
    kllcqgf="kernel loader library circular queue get free slot",
    klllr="kernel loader library logical record",
    klm="kernel loader memory",
    klmalf="kernel loader memory allocate freeable memory",
    km="kernel multi threaded/mman",
    kmc="kernel multi threaded/mman virtual circuit",
    kmcadq="kernel multi threaded/mman virtual circuit add circuit to a queue",
    kmcdflu="kernel multi threaded/mman virtual circuit flush. perform the flush operation, forces the data in the current send buffer to get flushed out to the user.",
    kmcdlc="kernel multi threaded/mman virtual circuit state object delete routine",
    kmcdrv="kernel multi threaded/mman virtual circuit driver",
    kmcmbf="kernel multi threaded/mman virtual circuit mark buffer",
    kmcrowrt="kernel multi threaded/mman virtual circuit private functions",
    kmd="kernel multi threaded/mman dispatcher",
    kmdmai="kernel multi threaded/mman dispatcher main loop",
    kmdrdp="kernel multi threaded/mman dispatcher run a dispatcher process",
    kmdu2s="kernel multi threaded/mman dispatcher route messages from user to server",
    kmgs="kernel multi threaded/mman manage (sga) space (?)",
    kmgs_create_request="kernel multi threaded/mman manage (sga) space (?) creates and waits for a memory resize request involving a requestor",
    kmgs_immediate_req="kernel multi threaded/mman manage (sga) space (?) immediate mode request interface function",
    kmgs_sleep_wait="kernel multi threaded/mman manage (sga) space (?) this function should be used in kmgs whenever immediate mode memory is requested from auto-sga",
    kmgsdrv="kernel multi threaded/mman manage (sga) space (?) driver",
    kml="kernel multi threaded/mman listener registration (lreg)",
    kmlini="kernel multi threaded/mman listener registration (lreg) initialization",
    kmm="kernel multi threaded/mman monitor",
    kmmd="kernel multi threaded/mman monitor dispatcher",
    kmml="kernel multi threaded/mman monitor listener",
    kmmlrl="kernel multi threaded/mman monitor listener remote listener",
    kmmrdp="kernel multi threaded/mman monitor run dispatcher process",
    kmms="kernel multi threaded/mman monitor server",
    kmn="kernel multi threaded/mman network",
    kmnsbf="kernel multi threaded/mman network ??",
    kmnsbm="kernel multi threaded/mman network buffer memory allocation callback",
    kmp="kernel multi threaded/mman pool",
    kn="kernel replication",
    kna="kernel replication apply",
    knac="kernel replication apply coordinator",
    knah="kernel replication apply HA DB",
    knahsma="kernel replication apply HA DB slave main",
    knahspx="kernel replication apply HA DB process transaction",
    knaladmAddAutoCDR="kernel replication apply DBMS_GOLDENGATE_ADM_INT_INVOK.ADD_AUTO_CDR_INT",
    knaladmAddAutoCDRColGroup="kernel replication apply DBMS_GOLDENGATE_ADM_INT_INVOK.ADD_AUTO_CDR_INT DBMS_GOLDENGATE_ADM_INT_INVOK.ADD_AUTO_CDR_COLGROUP_INT",
    knaladmAddAutoCDRDeltaRes="kernel replication apply DBMS_GOLDENGATE_ADM_INT_INVOK.ADD_AUTO_CDR_INT DBMS_GOLDENGATE_ADM_INT_INVOK.ADD_AUTO_CDR_DELTA_RES_INT",
    knaladmAlterAutoCDR="kernel replication apply DBMS_GOLDENGATE_ADM_INT_INVOK.ALTER_AUTO_CRD_INT",
    knaladmAlterAutoCDRColGroup="kernel replication apply DBMS_GOLDENGATE_ADM_INT_INVOK.ALTER_AUTO_CRD_INT DBMS_GOLDENGATE_ADM_INT_INVOK.ALTER_AUTO_CDR_COLGROUP_INT",
    knaladmImportACDRMetadata="kernel replication apply DBMS_GOLDENGATE_IMP.ACDR_UPDATE_METADATA",
    knaladmRemoveAutoCDR="kernel replication apply DBMS_GOLDENGATE_ADM_INT_INVOK.REMOVE_AUTO_CRD_INT",
    knaladmRemoveAutoCDRColGroup="kernel replication apply DBMS_GOLDENGATE_ADM_INT_INVOK.REMOVE_AUTO_CRD_INT DBMS_GOLDENGATE_ADM_INT_INVOK.REMOVE_AUTO_CDR_COLGROUP_INT",
    knaladmRemoveAutoCDRDeltaRes="kernel replication apply DBMS_GOLDENGATE_ADM_INT_INVOK.REMOVE_AUTO_CRD_INT DBMS_GOLDENGATE_ADM_INT_INVOK.REMOVE_AUTO_CDR_DELTA_RES_INT",
    knalExtractFromUserProps="kernel replication apply DBMS_APPLY_ERROR.PROCESS_USER_PROPERTIES",
    knalf="kernel replication apply reader",
    knaliAlter="kernel replication apply DBMS_APPLY_ADM_INTERNAL.ALTER_APPLY_INTERNAL",
    knaliCreate="kernel replication apply DBMS_APPLY_ADM_INTERNAL.CREATE_APPLY_INTERNAL",
    knaliGetApplyNum="kernel replication apply DBMS_APPLY_PROCESS.GET_APPLY#",
    knaliSetInstScn="kernel replication apply DBMS_APPLY_ADM.SET_INSTANTIATION_SCN",
    knalperr="kernel replication apply DBMS_APPLY_ERROR.PROCESS_ERRORS",
    knalsDropAPR="kernel replication apply DBMS_APPLY_ADM_INTERNAL.DROP_APPLY_PROGRESS_REDO",
    knalsGetSender="kernel replication apply DBMS_STREAMS.GET_SENDER_INTERNAL",
    knalspCleanApplySpill="kernel replication apply DBMS_XSTREAM_ADM_UTL.CLEAN_APPLY_SPILL",
    knanr="kernel replication apply propogation receiver",
    knas="kernel replication apply slave",
    knasm2="kernel replication apply slave main 2",
    knasplcr="kernel replication apply slave process logical change record",
    knaspx="kernel replication apply slave process transaction",
    knasxStopClient="kernel replication apply slave DBMS_XSTREAM_ADM_UTL.STOP_XOUT_CLIENT",
    kncd="kernel replication dequeue generic functions",
    kngocachep_ext="kernel replication DBMS_LOGREP_UTIL.LCR_CACHE_PURGE",
    knl="kernel replication streams replication",
    knl_DropTableSuppLog="kernel replication streams replication DBMS_CAPTURE_ADM_INTERNAL.DROP_TABLE_SUPP_LOGGING",
    knlabortschemainst_cdb="kernel replication streams replication DBMS_CAPTURE_ADM_INTERNAL.ABORT_SCHEMA_INST_CDB",
    knlaborttableinst_cdb="kernel replication streams replication DBMS_CAPTURE_ADM_INTERNAL.ABORT_TABLE_INST_CDB",
    knlAnnotateDDL="kernel replication streams replication DBMS_LOGREP_UTIL.DDL_ANNOTATE",
    knlBumpSCN="kernel replication streams replication DBMS_LOGREP_UTIL.BUMP_SCN",
    knlc="kernel replication streams replication capture",
    knlcabortglobalinst="kernel replication streams replication capture DBMS_CAPTURE_ADM_INTERNAL.ABORT_GLOBAL_INST",
    knlcabortglobalinst_pdb="kernel replication streams replication capture DBMS_CAPTURE_ADM_INTERNAL.ABORT_GLOBAL_INST DBMS_CAPTURE_ADM_INTERNAL.ABORT_GLOBAL_INST_ONE_PDB",
    knlCanonicalize="kernel replication streams replication DBMS_LOGREP_UTIL.CANONICALIZE",
    knlChkPDBAccessCl="kernel replication streams replication DBMS_LOGREP_UTIL_INVOK.CHECK_PDB_ACCESS",
    knlciAddLogfile="kernel replication streams replication capture DBMS_CAPTURE_ADM_INTERNAL.ADD_LOGFILE",
    knlciAlterCapture="kernel replication streams replication capture DBMS_CAPTURE_ADM_INTERNAL.ALTER_CAPTURE_INTERNAL",
    knlciCreateCapture="kernel replication streams replication capture DBMS_CAPTURE_ADM_INTERNAL.CREATE_CAPTURE_INTERNAL",
    knlciDropCapture="kernel replication streams replication capture DBMS_CAPTURE_ADM_INTERNAL.DROP_CAPTURE",
    knlciIncludeExtraAttribute="kernel replication streams replication capture DBMS_CAPTURE_ADM_INTERNAL.INCLUDE_EXTRA_ATTRIBUTE",
    knlciwfit="kernel replication streams replication capture DBMS_CAPTURE_ADM_INTERNAL.WAIT_FOR_INFLIGHT_TXN",
    knlComparePosition="kernel replication streams replication DBMS_XSTREAM_ADM.COMPARE_POSITION",
    knlCompatVarToInt="kernel replication streams replication DBMS_LOGREP_UTIL.COMPATIBLE_VARCHAR_TO_INT",
    knlConvertPosition="kernel replication streams replication DBMS_XSTREAM_ADM_INTERNAL.CONVERT_POSITION_INTERNAL",
    knlcprepglobalinst="kernel replication streams replication capture DBMS_CAPTURE_ADM_INTERNAL.PREPARE_GLOBAL_INST",
    knlcprepglobalinst_pdb="kernel replication streams replication capture DBMS_CAPTURE_ADM_INTERNAL.PREPARE_GLOBAL_INST BMS_CAPTURE_ADM_INTERNAL.PREPARE_GLOBAL_INST_ONE_PDB",
    knlcpreptabinst="kernel replication streams replication capture DBMS_CAPTURE_ADM_INTERNAL.PREPARE_TABLE_INST",
    knlcpreptabinstuid="kernel replication streams replication capture DBMS_CAPTURE_ADM_INTERNAL.PREPARE_TABLE_INST DBMS_CAPTURE_ADM_INTERNAL.PREPARE_TABLE_INST_UID",
    knlcsv="kernel replication streams replication capture propogation sender",
    knldi_ProcSrcDropTable="kernel replication streams replication DBMS_LOGREP_DEF_PROC_UTL.PROCESS_SRC_DROP_TABLE_INT",
    knldi_ProcSrcDropUser="kernel replication streams replication DBMS_LOGREP_DEF_PROC_UTL.PROCESS_SRC_DROP_USER_INT",
    knldi_ProcSrcNewTable="kernel replication streams replication DBMS_LOGREP_DEF_PROC_UTL.PROCESS_SRC_NEW_TABLE_INT",
    knldi_ProcSrcNewUser="kernel replication streams replication DBMS_LOGREP_DEF_PROC_UTL.PROCESS_SRC_NEW_USER_INT",
    knlDisableTDupWorkspace="kernel replication streams replication DBMS_XSTREAM_GG_INTERNAL.DISABLE_TDUP_WRKSPC_INT",
    knlEnableTDupWorkspace="kernel replication streams replication DBMS_XSTREAM_GG_INTERNAL.ENABLE_TDUP_WORKSPACE_INT",
    knlgcompat="kernel replication streams replication DBMS_LOGREP_UTIL.GET_STR_COMPAT",
    knlgcscn="kernel replication streams replication DBMS_LOGREP_UTIL.GET_CONSISTENT_SCN",
    knlGetAPRType="kernel replication streams replication DBMS_APPLY_ADM_INTERNAL.UNPICKLE_PROGRESS_REDO_META",
    knlGetGGFlags="kernel replication streams replication DBMS_XSTREAM_GG_INTERNAL.GET_GG_SESS_FLAGS_INT",
    knlgetobjname="kernel replication streams replication DBMS_LOGREP_UTIL_INVOK.GET_OBJECT_NAME",
    knlGetProcUseContext="kernel replication streams replication DBMS_LOGREP_UTIL.GET_PROCUSE_CONTEXT_INTERNAL",
    knlGetSubsetRules="kernel replication streams replication DBMS_STREAMS_ADM_IVK.GET_SUBSET_RULES",
    knlGetUGAProcUseContext="kernel replication streams replication DBMS_LOGREP_UTIL.GET_PROC_USE_CONTEXT_INT",
    knlgmt="kernel replication streams replication DBMS_STREAMS_ADM_IVK..GET_MESSAGE_TRACKING_INTERNAL",
    knlgrantadmin="kernel replication streams replication DBMS_XSTREAM_AUTH_IVK.GRANT_ADMIN_PRIVILEGE_PDBS",
    knlgrt="kernel replication streams replication DBMS_STREAMS_ADM_IVK.GET_TAG_INTERNAL",
    knlgsn="kernel replication streams replication DBMS_STREAMS.GET_STREAMS_NAME",
    knlgst="kernel replication streams replication DBMS_STREAMS.GET_STREAMS_TYPE",
    knlIsPreObj="kernel replication streams replication DBMS_CAPTURE_ADM_INTERNAL.VALIDATE_PREPARE_TABLE",
    knlIsTDupWrkspEnabled="kernel replication streams replication DBMS_XSTREAM_GG_INTERNAL.IS_TDUP_WRKSPC_ENABLED_INT",
    knlLcrIntToExt="kernel replication streams replication DBMS_LOGREP_UTIL.CONVERT_INT_TO_EXT_LCR",
    knllcrtoxml="kernel replication streams replication DBMS_STREAMS_LCR_INT.CONVERT_LCR_TO_XML_INT",
    knlog="kernel replication streams replication goldengate",
    knlprepschemainst_cdb="kernel replication streams replication DBMS_CAPTURE_ADM_INTERNAL.PREPARE_SCHEMA_INST_CDB",
    knlprepsynctabs="kernel replication streams replication DBMS_CAPTURE_ADM_INTERNAL.PREPARE_SYNC_TABLE_LIST",
    knlpreptableinst_cdb="kernel replication streams replication DBMS_CAPTURE_ADM_INTERNAL.PREPARE_TABLE_INST_CDB",
    knlrevokeadmin="kernel replication streams replication DBMS_XSTREAM_AUTH_IVK.REVOKE_ADMIN_PRIVILEGE_PDBS",
    knlsaoerr="kernel replication streams replication DBMS_APPLY_ADM_INTERNAL.ALTER_OBJECT_ERROR_NOTIFIER",
    knlsaooper="kernel replication streams replication DBMS_APPLY_ADM.SET_DML_HANDLER_INTERNAL",
    knlSetAllocatedMemory="kernel replication streams replication DBMS_LOGREP_UTIL.SET_ALLOCATED_MEMORY",
    knlSetCcaMaxPercentage="kernel replication streams replication DBMS_LOGREP_UTIL.SET_CCA_MAX_PERCENTAGE",
    knlSetGGFlags="kernel replication streams replication DBMS_XSTREAM_GG_INTERNAL.SET_GG_SESS_FLAGS_INT",
    knlSetXStreamBit="kernel replication streams replication DBMS_XSTREAM_ADM_UTL.SET_GG_XSTREAM_BIT",
    knlsiCmpOldVal="kernel replication streams replication DBMS_APPLY_ADM_INTERNAL.COMPARE_OLD_VALUES_INTERNAL",
    knlsiInst="kernel replication streams replication DBMS_LOGREP_IMP_INTERNAL.INSTANTIATE",
    knlsiitb="kernel replication streams replication DBMS_APPLY_ADM_INTERNAL.INVALIDATE_TABLE_OBJECT",
    knlsiRegRemObj="kernel replication streams replication DBMS_APPLY_ADM_INTERNAL.REGISTER_REMOTE_OBJECT",
    knlsiscc="kernel replication streams replication DBMS_APPLY_ADM_INTERNAL.SET_CONSTRAINT_COLUMNS",
    knlsisoc="kernel replication streams replication DBMS_APPLY_ADM_INTERNAL.SET_OBJECT_CONSTRAINT",
    knlsiValRemCol="kernel replication streams replication DBMS_APPLY_ADM_INTERNAL.VALIDATE_REMOTE_COLUMN",
    knlsmt="kernel replication streams replication DBMS_STREAMS_ADM_IVK.SET_MESSAGE_TRACKING_INTERNAL",
    knlspval="kernel replication streams replication DBMS_LOGREP_UTIL.SET_PARAMETER",
    knlsrt="kernel replication streams replication DBMS_STREAMS_ADM_IVK.SET_TAG",
    knlssaf="kernel replication streams replication DBMS_LOGREP_UTIL.GET_STREAMS_AUTO_FILTER",
    knlsskeycol="kernel replication streams replication DBMS_APPLY_ADM.SET_KEY_COLUMNS_INTERNAL",
    knlStartProc="kernel replication streams replication DBMS_LOGREP_UTIL.START_PROCESS",
    knlStopProc="kernel replication streams replication DBMS_LOGREP_UTIL.STOP_PROCESS",
    knlStorePrepareInfo="kernel replication streams replication DBMS_CAPTURE_ADM_INTERNAL.STORE_PREPARE_INFO",
    knltcfe="kernel replication streams replication DBMS_STREAMS_TBS_INT.CHECK_FILE_EXISTS_CALLOUT",
    knltcpn="kernel replication streams replication DBMS_STREAMS_TBS_INT.COMPARE_PATH_NAMES_CALLOUT",
    knltdel="kernel replication streams replication DBMS_STREAMS_TBS_INT.REMOVE_FILE_CALLOUT",
    knltgfn="kernel replication streams replication DBMS_STREAMS_TBS_INT.GENERATE_FILE_NAME_CALLOUT",
    knltpfn="kernel replication streams replication DBMS_STREAMS_TBS_INT.PARSE_FILE_NAME_CALLOUT",
    knlu_mt_purge_btree="kernel replication streams replication DBMS_LOGREP_UTIL.MESSAGE_TRACKING_PURGE",
    knlu_mt_resize_btree="kernel replication streams replication DBMS_LOGREP_UTIL.MESSAGE_TRACKING_RESIZE_INT",
    knlu_txn_purge_btree="kernel replication streams replication DBMS_LOGREP_UTIL.STREAMS_TRANSACTION_PURGE_INT",
    knluenst="kernel replication streams replication DBMS_LOGREP_UTIL.ENSURE_STREAMS",
    knluGetConstraint="kernel replication streams replication DBMS_LOGREP_UTIL_INVOK.GET_CONSTRAINT_NAME",
    knluIsCtasSupDml="kernel replication streams replication DBMS_XSTREAM_GG_INTERNAL.IS_CTAS_NO_DML_SESS_INT",
    knluIsFooTriggSet="kernel replication streams replication DBMS_XSTREAM_GG_INTERNAL.IS_FOO_TRIG_FIRE_AT_SESS_INT",
    knluIsMiningCharsetCompatible="kernel replication streams replication DBMS_XSTREAM_GG_INTERNAL.IS_CHARSET_COMP_FOR_MINING",
    knluLock_3gl="kernel replication streams replication DBMS_LOGREP_UTIL.GET_LOCK",
    knlUnPickleAPR="kernel replication streams replication DBMS_APPLY_ADM_INTERNAL.UNPICKLE_APPLY_PROGRESS_REDO",
    knlUnPickleLsbyPR="kernel replication streams replication DBMS_APPLY_ADM_INTERNAL.UNPICKLE_LSBY_PROGRESS_REDO",
    knluNumSubs="kernel replication streams replication DBMS_XSTREAM_ADM_UTL.NUM_SUBSCRIBERS",
    knlurse="kernel replication streams replication DBMS_LOGREP_UTIL.RAISE_SYSTEM_ERROR_3GL",
    knlursw="kernel replication streams replication DBMS_LOGREP_UTIL.RAISE_SYSTEM_WARNING_3GL",
    knluScnToPos="kernel replication streams replication DBMS_XSTREAM_ADM_UTL.COVERT_SCN_TO_POS",
    knluSet3xIdenFlag="kernel replication streams replication DBMS_LOGREP_UTIL.SET_3X_IDEN",
    knluSetCtasSupDml="kernel replication streams replication DBMS_XSTREAM_GG_INTERNAL.SET_CTAS_SESS_CTX_INT",
    knluSetFooTrigg="kernel replication streams replication DBMS_XSTREAM_GG_INTERNAL.SET_FOO_TRIGGER_CONTXT_INT",
    knluSetSuppLog="kernel replication streams replication DBMS_LOGREP_UTIL.SET_SUPP_LOGGING",
    knlustrcmpcs="kernel replication streams replication DBMS_LOGREP_UTIL.STRCMP_CS",
    knluStreamsAdminCheck="kernel replication streams replication DBMS_LOGREP_UTIL.CHECK_DV_STREAMS_ADMIN",
    knluUnLock_3gl="kernel replication streams replication DBMS_LOGREP_UTIL.RELEASE_LOCK",
    knlxmltolcr="kernel replication streams replication DBMS_STREAMS_LCR_INT.CONVERT_XML_TO_LCR_INT",
    knlzseshasrol="kernel replication streams replication DBMS_LOGREP_UTIL.SESS_HAS_ROLE",
    knlzusrhasrol="kernel replication streams replication DBMS_LOGREP_UTIL.USER_HAS_ROLE",
    knsq="kernel replication streams/goldengate message queueing",
    knst="kernel replication streams/goldengate",
    knt="kernel replication (internal) triggers",
    kntxit="kernel replication (internal) triggers execute internal triggers",
    kntxlp="kernel replication (internal) triggers exeucte internal triggers for LOB piecewise",
    kntxrl="kernel replication (internal) triggers execute replication trigger for LOB",
    ko="kernel objects",
    koc="kernel objects cache manager",
    kocbeg="kernel objects cache manager begin transaction",
    koccngt="kernel objects cache manager ??",
    kocdsgt="kernel objects cache manager ??",
    kocedd="kernel objects cache manager end duration",
    kocgor="kernel objects cache manager ??",
    kociih="kernel objects cache manager instantiate an instance in the object heap",
    kocpnm="kernel objects cache manager pin an object by name",
    kod="kernel objects data manager (pickler)",
    kod2ppic="kernel objects data manager (pickler) pickle an object into an image",
    kodin2p="kernel objects data manager (pickler) map a name to an pref",
    kodpunp="kernel objects data manager (pickler) unpickle an image into an object",
    kodrdel="kernel objects data manager (pickler) UTL_REF.DELETE_OBJECT",
    kodrlk="kernel objects data manager (pickler) UTL_REF.LOCK_OBJECT",
    kodrsel="kernel objects data manager (pickler) UTL_REF.SELECT_OBJECT",
    kodrslk="kernel objects data manager (pickler) UTL_REF.LOCK_OBJECT",
    kodrslsn="kernel objects data manager (pickler) UTL_REF.SELECT_OBJECT_WITH_CR",
    kodrupd="kernel objects data manager (pickler) UTL_REF.UPDATE_OBJECT",
    koh="kernel objects heap manager",
    kohaii="kernel objects heap manager allocate and initialize an instance",
    kohalc="kernel objects heap manager allocate memory chunk",
    kohatd="kernel objects heap manager allocate using TDs",
    kohdee="kernel objects heap manager duration entry end",
    kohdmpins="kernel objects heap manager ??",
    kohdtg="kernel objects heap manager duration table get a duration entry",
    kohedu="kernel objects heap manager end an user duration",
    kohrsc="kernel objects heap manager resize memory chunk",
    koi="kernel objects interface",
    koicadt="kernel objects interface construct ADT",
    koicupt="kernel objects interface construct UPT",
    koio="kernel objects interface ?",
    koiocon="kernel objects interface ? constructor",
    koionew="kernel objects interface ? create (and pin) a new named instance",
    koiopnm="kernel objects interface ? pin an object by name",
    kok="kernel objects kernel side",
    koka="kernel objects kernel side access",
    kokbtns="kernel objects kernel side type check the nested select operator",
    kokd="kernel objects kernel side driver",
    kokdn2p="kernel objects kernel side driver map a name to an pref",
    koke="kernel objects kernel side OBJECTS images",
    koki="kernel objects kernel side id generator",
    kokl="kernel objects kernel side lob access",
    kokl3="kernel objects kernel side lob access temporary lob access",
    kokla="kernel objects kernel side lob access OBJECTS anydata",
    koklcopy="kernel objects kernel side lob access lob copy",
    koklcpb2c="kernel objects kernel side lob access copy binary data into lob",
    koklcre="kernel objects kernel side lob access lob create",
    koklcwrite="kernel objects kernel side lob access lob write",
    kokleva="kernel objects kernel side lob access lob evaluate",
    kokli="kernel objects kernel side lob access internal",
    kokliclo="kernel objects kernel side lob access internal create with another locator",
    kokligrd="kernel objects kernel side lob access internal initialize kdllfn with row data",
    koklivrl="kernel objects kernel side lob access internal verify the row containing the lob is locked",
    koklm="kernel objects kernel side lob access lob Default",
    koklread="kernel objects kernel side lob access read",
    kokltrim="kernel objects kernel side lob access trim",
    koklv="kernel objects kernel side lob access lob default",
    kokm="kernel objects kernel side methods",
    kokmrwo="kernel objects kernel side methods get new RWO vector enhanced with ordering",
    kokn="kernel objects kernel side ?",
    koknmpn="kernel objects kernel side ? map name and oid",
    koko="kernel objects kernel side objects?",
    kokoupkl="kernel objects kernel side objects? unpickle into and instance",
    koks="kernel objects kernel side semantic analysis",
    kokscupd="kernel objects kernel side semantic analysis check for updatability of column and change adf flag",
    koksxlv="kernel objects kernel side semantic analysis xform operand tree into an L-Value",
    kokt="kernel objects kernel side OBJECTS DDL",
    kola="kernel objects lob",
    kolace="kernel objects lob XDB CSX print",
    kolaErrorHandler="kernel objects lob error handler",
    kolars="kernel objects lob XDB CSX print",
    kolc="kernel objects collection?",
    kolccst="kernel objects collection? construct element callback",
    kolcins="kernel objects collection? inset space for the element at the given index",
    kolcpupkl="kernel objects collection? unpickle collection",
    kole="kernel objects lob default",
    kolf="kernel objects file",
    kolfgdir="kernel objects file get directory object path and filenames",
    kolfopen="kernel objects file open a file",
    koll="kernel objects lob locator",
    kollrsz="kernel objects lob locator resize and initialize a lob locator",
    kolo="kernel objects OBJECTS anydata",
    kolr="kernel objects lob refcount",
    kols="kernel objects ?",
    kolsins="kernel objects ? insert space for the element at the given index",
    kolstins="kernel objects ? tree insert space for the element at the given index",
    koluislc="kernel objects UTL_COLL.IS_LOCATOR",
    kope2pic="kernel objects pickler mumbo jumbo",
    kopetrv="kernel objects kop engine and traverse",
    kopldsinit="kernel objects kop lds initialize a pre-allocated lds",
    kos="kernel objects stream interfaces for images/objects",
    kosibegin="kernel objects stream interfaces for images/objects image begin",
    kosiend="kernel objects stream interfaces for images/objects image end callback",
    kot="kernel objects type manager",
    kotg="kernel objects type manager accessor (get)",
    kotgtyp="kernel objects type manager accessor (get) type",
    koxs="kernel objects OBJECTS streams",
    koxsihread="kernel objects OBJECTS streams image handle write from buffer",
    kp="kernel programmatic interface",
    kpbf="kernel programmatic interface progint miscellaneous",
    kpbfcopy="kernel programmatic interface progint miscellaneous DBMS_FILE_TRANSFER.COPY_FILE_I",
    kpbfget="kernel programmatic interface progint miscellaneous DBMS_FILE_TRANSFER.GET_FILE_I",
    kpbfput="kernel programmatic interface progint miscellaneous DBMS_FILE_TRANSFER.PUT_FILE_I",
    kpce="kernel programmatic interface multi threaded network",
    kpcesend="kernel programmatic interface streams advanaced queuing ??",
    kpceterm="kernel programmatic interface multi threaded network terminate any connections from this layer",
    kpcm="kernel programmatic interface streams advanced queuing",
    kpdb="kernel programmatic interface pluggable database",
    kpdbCheckNFT="kernel programmatic interface pluggable database DBMS_PDB.KPDBCHECKNFT CHECK_NFT",
    kpdbCheckPlugCompatible="kernel programmatic interface pluggable database DBMS_PDB.KPDBCHECKPLUGCOMPATIBLE CHECK_PLUG_COMPATIBILITY",
    kpdbChkLockdown="kernel programmatic interface pluggable database DBMS_PDB.KPDBCHKLOCKDOWN CHECK_LOCKDOWN",
    kpdbCleanResolve="kernel programmatic interface pluggable database DBMS_PDB.KPDBCLEANRESOLVE CLEAR_PLUGIN_VIOLATIONS",
    kpdbCleanupTask="kernel programmatic interface pluggable database DBMS_PDB.KPDBCLEANUPTASK CLEANUP_TASK",
    kpdbConvertToLocal="kernel programmatic interface pluggable database DBMS_PDB.KPDBCONVERTTOLOCAL CONVERT_TO_LOCAL",
    kpdbCreateCFTables="kernel programmatic interface pluggable database DBMS_PDB.KPDBCREATECFTABLES CREATEX$PERMANENTTABLES",
    kpdbDescribe="kernel programmatic interface pluggable database DBMS_PDB.KPDBDESCRIBE DESCRIBE",
    kpdbDropCFTables="kernel programmatic interface pluggable database DBMS_PDB.KPDBDROPCFTABLES DROPX$PERMANENTTABLES",
    kpdbExecOracleScript="kernel programmatic interface pluggable database DBMS_PDB.EXEC_AS_ORACLE_SCRIPT",
    kpdbfCopyTaskCbk="kernel programmatic interface pluggable database parallel copy or move file task callback",
    kpdbfDeleteFile="kernel programmatic interface pluggable database delete a file based on copy or move",
    kpdbfdSetProfExplicit="kernel programmatic interface pluggable database DBMS_PDB_ALTER_SHARING.KPDBFDSETPROFEXPLICIT SET_PROFILE_EXPLICIT",
    kpdbfdSetRoleExplicit="kernel programmatic interface pluggable database DBMS_PDB_ALTER_SHARING.KPDBFDSETROLEEXPLICIT SET_ROLE_EXPLICIT",
    kpdbfdSetSharing="kernel programmatic interface pluggable database DBMS_PDB_ALTER_SHARING.KPDBFDSETSHARING SET_METADATA_LINKED SET_DATA_LINKED SET_EXT_DATA_LINKED SET_SHARING_NONE",
    kpdbfdSetUserExplicit="kernel programmatic interface pluggable database DBMS_PDB_ALTER_SHARING.KPDBFDSETUSEREXPLICIT SET_USER_EXPLICIT",
    kpdbIsValidPath="kernel programmatic interface pluggable database DBMS_PDB.KPDBISVALIDPATH IS_VALID_PATH",
    kpdbNonCdb2Pdb="kernel programmatic interface pluggable database DBMS_PDB.KPDBNONCDB2PDB NONCDB_TO_PDB",
    kpdbPopulateSyncTable="kernel programmatic interface pluggable database DBMS_PDB.KPDBPOPULATESYNCTABLE POPULATESYNCTABLE",
    kpdbRecover="kernel programmatic interface pluggable database DBMS_PDB.KPDBRECOVER RECOVER",
    kpdbSync="kernel programmatic interface pluggable database DBMS_PDB.KPDBSYNC SYNC_PDB",
    kpdbUpdateCrossConStats="kernel programmatic interface pluggable database DBMS_PDB.KPDBCVUPDATECROSSCONSTRATS UPDATE_CDBVW_STATS",
    kpdbUpdateVsn="kernel programmatic interface pluggable database DBMS_PDB.KPDBUPDATEVSN UPDATE_VERSION",
    kpeDbgCrash="kernel programmatic interface ??",
    kpeDbgSignalHandler="kernel programmatic interface ??",
    kpfs="kernel programmatic interface NPI",
    kpin="kernel programmatic interface progint miscellaneous",
    kpk="kernel programmatic interface OCI",
    kpkptResolveTNSName="kernel programmatic interface OCI DBMS_TNS.RESOLVE_TNSNAME",
    kpm="kernel programmatic interface transparent session migration",
    kpn="kernel programmatic interface OCI",
    kpndbcon="kernel programmatic interface OCI ??",
    kpo="kernel programmatic interface oracle",
    kpoal8="kernel programmatic interface oracle V8 bundled execution",
    kpoaq="kernel programmatic interface oracle streams advanaced queuing",
    kpoauth="kernel programmatic interface oracle authenticate",
    kpoclsa="kernel programmatic interface oracle close all cursors",
    kpodny="kernel programmatic interface oracle describe any arguments used",
    kpodp="kernel programmatic interface oracle direct path load",
    kpodpp="kernel programmatic interface oracle direct path load ??",
    kpofchswcbk="kernel programmatic interface oracle fetch switch callback",
    kpofrws="kernel programmatic interface oracle ??",
    kpogsk="kernel programmatic interface oracle initializes the session and returns the encrypted session key",
    kpohal="kernel programmatic interface oracle This is the memory allocator that uses kpcch (the common heap module)",
    kpolal="kernel programmatic interface oracle lob allocator",
    kpolnb="kernel programmatic interface oracle ??",
    kpolob="kernel programmatic interface oracle lob operations",
    kpon="kernel programmatic interface oracle notification",
    kponcoord="kernel programmatic interface oracle streams advanaced queuing ??",
    kpond="kernel programmatic interface oracle notification advanced queuing",
    kpone="kernel programmatic interface oracle notification event monitor",
    kponemn="kernel programmatic interface oracle notification event monitor main. emon main loop",
    kponepms="kernel programmatic interface oracle streams advanaced queuing ??",
    kponprmsg="kernel programmatic interface oracle streams advanaced queuing ??",
    kponPurgeUnreachLoc="kernel programmatic interface oracle notification remove registrations for unreachable locations",
    kponsnd="kernel programmatic interface oracle streams advanaced queuing ??",
    kpoodr="kernel programmatic interface oracle replaces ttcdrv to handle pisdef in fastpath mode",
    kpoodrc="kernel programmatic interface oracle replaces ttcdrv to handle pisdef in fastpath mode ??",
    kpoopq="kernel programmatic interface oracle set keyword value pair",
    kpooprx="kernel programmatic interface oracle open, parse, and optionally execute",
    kpoq="kernel programmatic interface oracle result cache",
    kpor="kernel programmatic interface oracle RPC callback for streaming",
    kporpc="kernel programmatic interface oracle RPC callback for streaming the oracle side function to start rpc",
    kposc="kernel programmatic interface oracle scrollable cursors",
    kpotc="kernel programmatic interface oracle setting up trusted external procedure callbacks",
    kpotx="kernel programmatic interface oracle local transaction coordination",
    kpotxcap="kernel programmatic interface oracle local transaction coordination commit, abort and prepare",
    kpotxen="kernel programmatic interface oracle local transaction coordination 2-phase end transaction driver",
    kpov="kernel programmatic interface oracle distributed transaction coordination",
    kpoxcAppContBeginReplay="kernel programmatic interface oracle DBMS_APP_CONT_PRVT.BEGIN_REPLAY",
    kpoxcAppContEndReplay="kernel programmatic interface oracle DBMS_APP_CONT_PRVT.END_REPLAY",
    kpoxcAppContPrepareReplay="kernel programmatic interface oracle DBMS_APP_CONT_PRVT.PREPARE_REPLAY_INT",
    kpp2="kernel programmatic interface parse routine for dimensions",
    kpp3="kernel programmatic interface parse routine for create/alter/drop summary statements",
    kppl="kernel programmatic interface database resistent connection pool",
    kppliatpcp="kernel programmatic interface database resistent connection pool DBMS_CONNECTION_POOL.ALTER_PARAM",
    kpplicfgcp="kernel programmatic interface database resistent connection pool DBMS_CONNECTION_POOL.CONFIGURE_POOL",
    kpplistpcp="kernel programmatic interface database resistent connection pool DBMS_CONNECTION_POOL.STOP_POOL",
    kpplistrcp="kernel programmatic interface database resistent connection pool DBMS_CONNECTION_POOL.START_POOL",
    kpr="kernel programmatic interface recursive program interface",
    kprb="kernel programmatic interface recursive program interface bundled operations",
    kprball="kernel programmatic interface recursive program interface bundled operations execute all bundled kpr/rpi operations",
    kprbalo="kernel programmatic interface recursive program interface bundled operations allocator callback",
    kprbbin="kernel programmatic interface recursive program interface bundled operations number of bind variables",
    kprc="kernel programmatic interface recursive program interface RPI copy routines",
    kprccu="kernel programmatic interface recursive program interface RPI copy routines copy data given Uac",
    kprcdt="kernel programmatic interface recursive program interface RPI copy routines copy data",
    kps="kernel programmatic interface transparent session migration",
    kpscrcap="kernel programmatic interface transparent session migration DBMS_SESSION_STATE.SS_CAPTURE",
    kpscrmrk="kernel programmatic interface transparent session migration DBMS_SESSION_STATE.SS_MARK_CAPTURE",
    kpscrres="kernel programmatic interface transparent session migration DBMS_SESSION_STATE.SS_RESTORE",
    kpscrumk="kernel programmatic interface transparent session migration DBMS_SESSION_STATE.SS_UNMARK_CAPTURE",
    kptsc="kernel programmatic interface callback functions for streaming operations for replication",
    kpu="kernel programmatic interface user",
    kpuaq="kernel programmatic interface user streams advanaced queuing",
    kpuc="kernel programmatic interface user cursor management functions",
    kpucp="kernel programmatic interface user cursor management functions client side connection pooling support",
    kpudcn2c="kernel programmatic interface user convert Number to Character string",
    kpudp="kernel programmatic interface user DPAPI Load",
    kpuexec="kernel programmatic interface user execute",
    kpuexecv8="kernel programmatic interface user execute execute V8",
    kpufch="kernel programmatic interface user fetch one or more rows",
    kpuhh="kernel programmatic interface user handle heap",
    kpuhhalo="kernel programmatic interface user handle heap allocate memory freeable",
    kpuhhmrk="kernel programmatic interface user handle heap mark",
    kpun="kernel programmatic interface user streams advanced queuing",
    kpur="kernel programmatic interface user remote",
    kpurcs="kernel programmatic interface user remote call with service context",
    kpurcsc="kernel programmatic interface user remote call with service context remote call with service context, callbacks",
    kpureq="kernel programmatic interface user remote request (a statement to be executed)",
    kpuvers="kernel programmatic interface user version",
    kpuzxs="kernel programmatic interface user XS midtier",
    kq="kernel query",
    kqaiconn="kernel query DBMS_DEBUG_JDWP.KQAICONN CONNECT_TCP",
    kqaidisc="kernel query DBMS_DEBUG_JDWP.KQAIDISC DISCONNECT",
    kqaigcsi="kernel query DBMS_DEBUG_JDWP.KQAIGCSI",
    kqaigcss="kernel query DBMS_DEBUG_JDWP.KQAIGCSS",
    kqaignp="kernel query DBMS_DEBUG_JDWP.KQAIGNP GET_NLS_PARAMETERS",
    kqaipcs="kernel query DBMS_DEBUG_JDWP.KQAIPCS PROCESS_CONNECT_STRING",
    kqaipde="kernel query PBDE.KQAIPDE INIT",
    kqairjd="kernel query DBMS_JAVA_DUMP.KQAIRJD DUMP",
    kqaisnp="kernel query DBMS_DEBUG_JDWP.KQAISNP SET_NLS_PARAMETERS",
    kqaivsn="kernel query DBMS_DEBUG_JDWP.KQAIVSN",
    kqan="kernel query server side debug operations",
    kqap="kernel query server side debug operations",
    kqas="kernel query server side debug operations",
    kqd="kernel query dictionary management",
    kqdgtc="kernel query dictionary management return an open and parsed cursor for a statement",
    kqdobr="kernel query dictionary management read obj$ row using (owner#,name,namespace,remoteowner,linkname) as key",
    kqdobu="kernel query dictionary management verify object uniqueness (?)",
    kqdunr="kernel query dictionary management get user id using name as key",
    kqf="kernel query fixed tables",
    kqfd="kernel query fixed tables direct access to fixed tables",
    kqfp="kernel query fixed tables packages",
    kqfrs="kernel query fixed tables row source",
    kql="kernel query library cache",
    kqlAddSchemaReference="kernel query library cache add a schema during semantic checking",
    kqlb="kernel query library cache bootstrapping support",
    kqlclo="kernel query library cache cleanup nonexistent objects in OBJ$",
    kqld="kernel query library cache dictionary callbacks",
    kqldprr="kernel query library cache dictionary callbacks parent referential constraint read",
    kqlfbct="kernel query library cache ??",
    kqlfbctc="kernel query library cache ??",
    kqlfgl="kernel query library cache get row for Lock, fixed table support",
    kqlfgx="kernel query library cache get row for access table entry, fixed table support",
    kqlftl="kernel query library cache cache fixed Table for Locks callback",
    kqlfxp="kernel query library cache ??",
    kqllod="kernel query library cache database object load",
    kqlm="kernel query library cache multi-instance manager",
    kqlmbpil="kernel query library cache multi-instance manager background process a pin instance lock",
    kqlmcdlod="kernel query library cache multi-instance manager mcode heap load",
    kqlnfy="kernel query library cache notify",
    kqlobjlod="kernel query library cache object load",
    kqlobld="kernel query library cache object load",
    kqlobpn="kernel query library cache object pin heaps and load data pieces",
    kqlp="kernel query library cache sharing of sql statements",
    kqlpim="kernel query library cache sharing of sql statements pin and load more heaps",
    kqlplslod="kernel query library cache sharing of sql statements pl/sql object load",
    kqlr="kernel query library cache remote",
    kqlrddsc="kernel query library cache remote describe callback function",
    kqlrds="kernel query library cache remote describe a cursor at the default host",
    kqlrld="kernel query library cache remote load a remote library object",
    kqls="kernel query library cache subordinate set manager",
    kqlsadd="kernel query library cache subordinate set manager add a new element to a subordinate set",
    kqlsget="kernel query library cache subordinate set manager get full constraint definition",
    kqlslod="kernel query library cache subordinate set manager load all subordinate set elements for a given heap",
    kqludp="kernel query library cache update with dependencies",
    kqlunac="kernel query library cache unauthenticate dependents of an object",
    kqlvld="kernel query library cache validate an object",
    kqr="kernel query dictionary/row cache",
    kqreqd="kernel query dictionary/row cache enqueue delete",
    kqrfr="kernel query dictionary/row cache free",
    kqrfrc="kernel query dictionary/row cache free cache",
    kqrfrpo="kernel query dictionary/row cache free pinned object(?)",
    kqrhsh="kernel query dictionary/row cache hash",
    kqrpre="kernel query dictionary/row cache read a parent cache object",
    kqrpre1="kernel query dictionary/row cache read a parent cache object additional 1",
    kqrprl="kernel query dictionary/row cache parent release enqueue",
    kqrrls="kernel query dictionary/row cache release lock",
    kr="kernel redo",
    kra="kernel redo recovery area function",
    krb="kernel redo backup/restore",
    krb1g="kernel redo backup/restore read (and optionally validate) first block of file",
    krbabr="kernel redo backup/restore auto block media recovery",
    krbb="kernel redo backup/restore creation of a backuppiece",
    krbb2ec="kernel redo backup/restore creation of a backuppiece write backuplog records to controlfile at end of backup set",
    krbb3fwb="kernel redo backup/restore creation of a backuppiece finish write buffer for creation of compressed backup pieces",
    krbbcdo="kernel redo backup/restore creation of a backuppiece compression do",
    krbbpc="kernel redo backup/restore creation of a backuppiece piece create",
    krbc="kernel redo backup/restore controlfile",
    krbd="kernel redo backup/restore device control",
    krbdgdal="kernel recovery backup restore device control ??",
    krbdrel="kernel recovery backup restore device control ??",
    krbfgh="kernel redo backup/restore read first block with kGfd. the block must have a kcbh header",
    krbfghv="kernel redo backup/restore read first block with kGfd. the block must have a kcbh header Datafile/control header block Validation. callback from krb1g.",
    krbi="kernel redo backup/restore dbms_backup_restore package",
    krbi_beg_register_auxdfc="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_BEG_REGISTER_AUXDFC REGISTERAUXDFCOPY",
    krbi_chkcompalg="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_CHKCOMPALG CHECKCOMPRESSIONALG",
    krbi_cleanup_backup_records="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_CLEANUP_BACKUP_RECORDS CLEANUPBACKUPRECORDS",
    krbi_cleanup_foreign_all="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_CLEANUP_FOREIGN_ALL CLEANUPFOREIGNARCHIVEDLOGS",
    krbi_cleanup_pgax="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_CLEANUP_PGAX CLEANUPPGACONTEXT",
    krbi_clear_controlfile="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_CLEARCONTROLFILE CLEARCONTROLFILE",
    krbi_create_fra_acc="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_CREATE_FRA_ACC CREATEFRAAUXCFCOPY",
    krbi_create_fra_adc="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_CREATE_FRA_ADC CREATEFRAAUXDFCOPY",
    krbi_create_restorepoint="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_CREATE_RESTPOINT CREATERESTOREPOINT",
    krbi_create_xml="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_CREATE_XML CREATETEMPXMLFILE",
    krbi_describeremotepdb="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_DESCRIBEREMOTEPDB DESCRIBEREMOTEPDB",
    krbi_dupfileexists="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_DUPFILEEXISTS DUPLICATEFILEEXISTS",
    krbi_flashback_cf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_FLASHBACK_CF FLASHBACKCONTROLFILE",
    krbi_free_storage_space="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_FREE_STORAGE_SPACE FREE_STORAGE_SPACE",
    krbi_gconnect_id="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_GCONNECT_ID GET_CONNECT_IDENTIFIER",
    krbi_get_primary_constr="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_GET_PRIMARY_CONSTR GETPRIMARYCONSTR",
    krbi_get_standby_constr="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_GET_STANDBY_CONSTR GETSTANDBYCONSTR",
    krbi_getdupcopy="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_GETDUPCOPY GETDUPLICATEDDATAFILECOPY",
    krbi_getguid="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_GETGUID GETGUID",
    krbi_getstandbyfname="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_GETSTANDBYFNAME GETSTANDBYFILENAME",
    krbi_getxttsname="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_GETXTTSNAME GETXTTSNAME",
    krbi_getxttsplugname="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_GETXTTSPLUGNAME GETXTTSPLUGNAME",
    krbi_init_fra_metadata="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_INIT_FRA_METADATA INITFRAMETADATA",
    krbi_network_backupdf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_NETWORK_BACKUPDF NETWORKBACKUPDATAFILE",
    krbi_network_backuprl="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_NETWORK_BACKUPRL NETWORKBACKUPARCHIVEDLOG",
    krbi_network_backupsf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_NETWORK_BACKUPSF NETWORKBACKUPSPFILE",
    krbi_network_rdfhdr="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_NETWORK_RDFHDR NETWORKREADFILEHEADER",
    krbi_network_setmsb="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_NETWORK_SETMSB NETWORKSETMSB",
    krbi_parse_plugxml="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_PARSE_PLUGXML PARSEPLUGXMLFILE",
    krbi_pdb_time_check="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_PDB_TIME_CHECK PDBTIMECHECK",
    krbi_preplugin_do_mediarcv="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_PREPLUGIN_DO_MEDIARCV PREPLUGINDOMEDIARECOVERY",
    krbi_preplugin_trans="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_PREPLUGIN_TRANS BEGINPREPLUGINTRANSLATION, ENDPREPLUGINTRANSLATION",
    krbi_prepluginrcv_addfile="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_PREPLUGINRCV_ADDFILE PREPLUGINRECOVERYADDFILE",
    krbi_prepluginrcv_cancel="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_PREPLUGINRCV_CANCEL PREPLUGINRECOVERYCANCEL",
    krbi_prepluginrcv_start="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_PREPLUGINRCV_START PREPLUGINRECOVERYSTART",
    krbi_read_action="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_READ_ACTION",
    krbi_recover_add_file="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_RECOVER_ADD_FILE RECOVERADDFILE",
    krbi_recover_add_pdb="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_RECOVER_ADD_PDB RECOVERADDPDB",
    krbi_recover_cancel="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_RECOVER_CANCEL RECOVERCANCEL",
    krbi_recover_do="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_RECOVER_DO RECOVERDO",
    krbi_recover_start="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_RECOVER_START RECOVERSTART",
    krbi_register_auxdfc="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_BEG_REGISTER_AUXDFC REGISTERAUXDFCOPY",
    krbi_remdupfile="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_REMDUPFILE REMOVEDUPLICATEFILE",
    krbi_remstandbysyncfile="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_REMSTANDBYSYNCFILE REMOVESTANDBYSYNCFILE",
    krbi_restoreexttfileto="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_RESTOREXTTFILETO RESTOREXTTFILETO",
    krbi_rman_usage="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_RMAN_USAGE RMAN_USAGE",
    krbi_save_action="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_SAVE_ACTION",
    krbi_sdbuname_tspitr="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_SDBUNAME_TSPITR SETDBUNIQNAMETSPITR",
    krbi_standbysyncfileexists="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_STANDBYSYNCFILEEXISTS STANDBYSYNCFILEEXISTS",
    krbi_switch_prim_bct="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_SWITCH_PRIM_BCT SWITCH_PRIMARY_BCT",
    krbi_unlockremotepdb="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_UNLOCKREMOTEPDB UNLOCKREMOTEPDB",
    krbi_wrtdupcopy="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_WRTDUPDCOPY WRITEDUPLICATEDDATAFILECOPY",
    krbi_wrtstandbyfname="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_WRTSTANDBYFNAME WRITESTANDBYFILENAME",
    krbi_xttrestore="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBI_XTTRESTORE XTTRESTORE",
    krbiabf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIABF AUTOBACKUPFLAG",
    krbiadft="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIADFT APPLYDATAFILETO",
    krbiaor="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIAOR APPLYOFFLINERANGE",
    krbiarcfn="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIARCFN GETARCFILENAME",
    krbiaux="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIAUX SETDATAFILEAUX",
    krbibab="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBAB BMRADDBLOCK",
    krbibackuppiecebackup="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBACKUPPIECEBACKUP BACKUPPIECEBACKUP",
    krbibackupsetpiece="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBACKUPSETPIECE BACKUPSETPIECE",
    krbibcf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBCF BACKUPCONTROLFILE",
    krbibckdmpfile="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBCKDMPFILE BACKUPDMPFILE",
    krbibcle="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBCLE BACKUPCANCEL",
    krbibdcp="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBDCP BACKUPDATAFILECOPY",
    krbibdf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBDF BACKUPDATAFILE",
    krbibdg="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBDG BACKUPPIECECRTDUPGET",
    krbibdmr="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBDMR BMRDOMEDIARECOVERY",
    krbibds="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBDS BACKUPPIECECRTDUPSET",
    krbibgf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBGF BMRGETFILE",
    krbibis="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBIS BMRINITIALSCAN",
    krbiblkstat="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBLKSTAT GETBLOCKSTAT",
    krbibmrc="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBMRC BMRCANCEL",
    krbibmrs="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBMRS BMRSTART",
    krbibpc="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBPC BACKUPPIECECREATE",
    krbibrf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBRF BMRRESTOREFROMFLASHBACK",
    krbibrl="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBRL BACKUPARCHIVEDLOG",
    krbibrpsby="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBRPSBY BMRRESTOREFROMSTANDBY",
    krbibsdf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBSDF BACKUPSETDATAFILE",
    krbibsf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBSF BACKUPSPFILE",
    krbibsrl="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBSRL BACKUPSETARCHIVEDLOG",
    krbibsta="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBSTA BACKUPSTATUS",
    krbibufc="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBUFC BMRSCANDATAFILECOPY",
    krbibv="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBV BACKUPVALIDATE",
    krbicbbp="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBICBBP BACKUPBACKUPPIECE",
    krbicbs="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBICBS CHANGEBACKUPSET",
    krbiccf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBICCF COPYCONTROLFILE",
    krbicdcp="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBICDCP COPYDATAFILECOPY",
    krbicdf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBICDF COPYDATAFILE",
    krbicf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBICF CONVERTDATAFILECOPY",
    krbickeepf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBICKEEPF CANKEEPDATAFILES",
    krbickpt="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBICKPT GETCKPT, GETCKPTSCN",
    krbiclrl="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBICLRL CLEARONLINELOGNAMES",
    krbicmus="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBICMUS CFILEMAKEANDUSESNAPSHOT",
    krbicrl="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBICRL COPYARCHIVEDLOG",
    krbicror="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBICROR CREATERMANOUTPUTROW",
    krbicrs="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBICRS CFILERESIZESECTION",
    krbicrsr="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBICRS CFILERESIZESECTION DBMS_BACKUP_RESTORE.KRBICRSR CREATERMANSTATUSROW",
    krbicsl="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBICSL CFILECALCSIZELIST, CFILECALCSIZEARRAY",
    krbicssn="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBICSSN CFILESETSNAPSHOTNAME",
    krbictset="kernel redo backup/restore dbms_backup_restore package DBMS_BACUP_RESTORE.KRBICTSET BCTSET",
    krbicuc="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBICUC CFILEUSECURRENT",
    krbicup="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBICUP CFILEUSECOPY",
    krbicus="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBICUS CFILEUSESNAPSHOT",
    krbicvrt="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBICVRT CONVERTFILENAME",
    krbid2rf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBID2RF DBA2RFNO",
    krbidab="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIDAB DOAUTOBACKUP",
    krbidbp="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIBDP DELETEBACKUPPIECE, CHANGEBACKUPPIECE, CROSSCHECKBACKUPPIECE",
    krbiddf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIDDF CHANGEDATAFILECOPY, DELETEDATAFILECOPY",
    krbideft="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIDEFT GETDEFAULTTAG",
    krbidf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIDF DELETEFILE",
    krbidrl="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIDRL CHANGEARCHIVEDLOG, DELETEARCHIVEDLOG, CLEARUNARCHIVEDLOGS",
    krbidrm="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIDRM RESETCONFIG, DELETECONFIG",
    krbidsta="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIDSTA DEVICESTATUS",
    krbidvac="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIDVAC DEVICEALLOCATE",
    krbidvcm="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIDVCM DEVICECOMMAND",
    krbidvda="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIDVDA DEVICEDEALLOCATE",
    krbidvq="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIDVQ DEVICEQUERY",
    krbiesjnp="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIESJNP SETEXPORTJOBNAME",
    krbifbaf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIFBAF FLASHBACKADDFILE",
    krbifbc="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIFBC FLASHBACKCANCEL",
    krbifbf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIFBF FLASHBACKFILES",
    krbifbs="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIFBS FLASHBACKSTART",
    krbiffr="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIFFR FETCHFILERESTORED",
    krbifsft="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIFSFT FINDAUTSEARCHFILETABLE",
    krbigaln="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIGALN INSPECTARCHIVEDLOGSEQ",
    krbigcs="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIGCS GETCNCTSTR",
    krbigdgn="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIGDGN PIECECONTEXTGETNUMBER",
    krbigfno="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIGFNO GETFNO",
    krbigpn="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIGPN GENPIECENAME",
    krbigtsc="kernel redo backup/restore dbms_backup_restore package DBMS_BACKU_RESTORE.KRBIGTSC GENTRANSPORTSCRIPT",
    krbigtsn="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIGTSN GETTSNAMEFROMDATAFILECOPY",
    krbiialbac="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIIALBAC INCRARCHIVEDLOGBACKUPCOUNT",
    krbiif="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIIF inspect bp, arch log, cf, datafile copy",
    krbiimsb="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIIMSB INITMSB",
    krbiimsc="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIIMSC INITMSC",
    krbiimsr="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIIMSR INITMSR",
    krbiinins="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIININS INITNAMESPACE",
    krbiisomf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIISOMF ISFILENAMEOMF",
    krbimaux="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIMAUX MANAGEAUXINSTANCE",
    krbimrsr="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIMRSR COMMITRMANSTATUSROW",
    krbimxi="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIMXI GETMAXINFO",
    krbinbaf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBINBAF NBRADDFILE",
    krbinbdmr="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBINBDMR NBRDOMEDIARECOVERY",
    krbinbeg="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBINBEG NIDBEGIN",
    krbinblkstat="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBINBLKSTAT GETNBRBLOCKSTAT",
    krbinbrc="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBINBRC NBRCANCEL",
    krbinbrfs="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBINBRFS NBRFILESTATUS",
    krbinbrs="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBINBRS NBRSTART",
    krbinend="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBINEND NIDEND",
    krbinettransfer="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBINETTRANSFER NETWORKFILETRANSFER",
    krbinfn="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBINFN NORMALIZEFILENAME",
    krbingni="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBINGNI NIDGETNEWDBID",
    krbinpcf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBINPCF NIDPROCESSCF",
    krbinpdf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBINPDF NIDPROCESSDF",
    krbiomfn="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIOMFN GETOMFFILENAME",
    krbiovac="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIOVAC",
    krbipba="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIPBA PROXYBACKUPARCHIVEDLOG",
    krbipbb="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIPBB PROXYBEGINBACKUP",
    krbipbcf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIPBCF PROXYBACKUPCONTROLFILE",
    krbipbdc="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIPBDC PROXYBACKUPDATAFILECOPY",
    krbipbdf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIPBDF PROXYBACKUPDATAFILE",
    krbipbr="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIPBR PROXYBEGINRESTORE",
    krbipcn="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIPCN PROXYCANCEL",
    krbipdl="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIPDL PROXYDELETE, PROXYCHANGE",
    krbipgo="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIPGO PROXYGO",
    krbipqb="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIPQB PROXYQUERYBACKUP",
    krbipqr="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIPQR PROXYQUERYRESTORE",
    krbipra="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIPRA PROXYRESTOREARCHIVEDLOG",
    krbiprcf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIPRCF PROXYRESTORECONTROLFILE",
    krbiprdf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIPRDF PROXYRESTOREDATAFILE",
    krbiprm="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIPRM GETPARM",
    krbipsft="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIPSFT PROCESSSEARCHFILETABLE",
    krbipvl="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIPVL PROXYVALIDATE, PROXYVALONLY",
    krbiragf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRAGF REFRESHAGEDFILES",
    krbiran="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRAN RENORMALIZEALLFILENAMES",
    krbirbp="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRBP RESTOREBACKUPPIECE, APPLYBACKUPPIECE",
    krbircdf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRCDF CREATEDATAFILE",
    krbircft="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRCFT RESTORECONTROLFILETO",
    krbircle="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRCLE RESTORECANCEL",
    krbircp="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRCP RESDATAFILECOPY",
    krbirdalhd="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRDALHD READARCHIVEDLOGHEADER",
    krbirdb="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRDB RESETDATABASE",
    krbirdft="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRDFT RESTOREDATAFILETO",
    krbirdhd="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRDHD READFILEHEADER",
    krbirecfs="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRECFS RESETCFILESECTION",
    krbirerr="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRERR Raise error",
    krbiresdmpfile="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRESDMPFILE RESTOREDMPFILE",
    krbiri="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRI REINIT",
    krbirrl="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRRL RESTOREARCHIVEDLOG",
    krbirrm="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRRM RESETCONFIG",
    krbirrng="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRRNG RESTOREARCHIVEDLOGRANGE",
    krbirsdf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRSDF RESTORESETDATAFILE, APPLYSETDATAFILE, RESTORESETARCHIVEDLOG, RESTORESETXTTFILE, RESTORESETFOREIGNDF, RESTORESETFOREIGNAL",
    krbirsft="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRSFT RESTORESPFILETO",
    krbirsp="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRSP RESTORESETPIECE, RESTOREBACKUPPIECE",
    krbirsqlexec="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRSQLEXEC REMOTESQLEXECUTE",
    krbirsta="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRSTA RESTORESTATUS",
    krbirvd="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIRVD RESTOREVALIDATE",
    krbisal="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBISAL SCANARCHIVEDLOG",
    krbisbtv="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBISBTV ORACLESBTVERSION",
    krbisf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBISF SEARCHFILES",
    krbisl="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBISL SETLIMIT, GETLIMIT",
    krbislp="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBISL SETLIMIT, GETLIMIT DBMS_BACKUP_RESTORE.KRBISLP SLEEP",
    krbismsb="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBISMSB SETMSB",
    krbismsc="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBISMSC SETMSC",
    krbisprm="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBISPRM SETPARMS",
    krbisrid="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBISRID SETRMANSTATUSROWID",
    krbisrm="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBISRM SETCONFIG",
    krbistc="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBISTC SWITCHTOCOPY",
    krbistcs="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBISTC SWITCHTOCOPY DBMS_BACKUP_RESTORE.KRBISTCS SET_CHARSET",
    krbiswitch="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBISWITCH BCTSWITCH",
    krbiswtf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBISWTF SWITCHTEMPFILE",
    krbitdblk="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBITDBLK TRANSPORTDBLOCK",
    krbitdbunlk="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBITDBUNLK TRANSPORTDBUNLOCK",
    krbitrc="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBITRC",
    krbitsat="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBITSAT SETTABLESPACEEXCLUDE, SETTABLESPACEATTR",
    krbiufc="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIUFC SCANDATAFILECOPY",
    krbiufr="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIUFR SCANDATAFILE",
    krbiuphd="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIUPHD UPDATEHEADERS",
    krbiursr="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIURSR UPDATERMANSTATUSROW",
    krbiurt="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIURT CLEARRECOVERYDESTFLAG, INCREMENTRECORDSTAMP, VSSBACKEDRECORD, OAMPOLLEDRECORD",
    krbival="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIVAL VALIDATEARCHIVEDLOG",
    krbivala="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIVAL VALIDATEARCHIVEDLOG DMBS_BACKUP_RESTORE.KRBIVALA VALIDATIONADDPIECE",
    krbivalblk="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIVAL VALIDATEARCHIVEDLOG DMBS_BACKUP_RESTORE.KRBIVALBLK VALIDATEBLOCK",
    krbivale="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIVAL VALIDATEARCHIVEDLOG DMBS_BACKUP_RESTORE.KRBIVALE VALIDATIONEND",
    krbivaln="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIVAL VALIDATEARCHIVEDLOG DMBS_BACKUP_RESTORE.KRBIVALN VALIDATIONNEXTRESULT",
    krbivals="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIVAL VALIDATEARCHIVEDLOG DMBS_BACKUP_RESTORE.KRBIVALS VALIDATIONSTART",
    krbivalv="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIVAL VALIDATEARCHIVEDLOG DMBS_BACKUP_RESTORE.KRBIVALV VALIDATIONVALIDATE",
    krbivbp="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIVBP VALIDATEBACKUPPIECE",
    krbivdc="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIVDC VALIDATEDATAFILECOPY",
    krbivts="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIVTS VALIDATETABLESPACE",
    krbiwtrc="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIWTRC WRITETRACE",
    krbizerf="kernel redo backup/restore dbms_backup_restore package DBMS_BACKUP_RESTORE.KRBIZERF ZERODBID",
    krbm="kernel redo backup/restore miscellaneous functions",
    krbo="kernel redo backup/restore optimisation",
    krbr="kernel redo backup/restore restore and recovery",
    krbrcc="kernel redo backup/restore restore and recovery clean up conversation",
    krbrpr="kernel redo backup/restore restore and recovery piece read",
    krbrr="kernel redo backup/restore restore and recovery reread corrupt block",
    krbrrp="kernel redo backup/restore restore and recovery reread corrupt block from back piece",
    krbx="kernel redo backup/restore proxy copy controller",
    krby="kernel redo backup/restore image copy",
    krc="kernel redo block change tracking",
    krccacp="kernel redo block change tracking advance the checkpoint",
    krccckp="kernel redo block change tracking checkpoint",
    krcpabs="kernel redo block change tracking I am ctwr",
    krcptmo="kernel redo block change tracking ctwr timeout action, this is the main loop",
    krcrfi="kernel redo block change tracking read file. rman is traversing the bitmaps to find enough historical bitmap data.",
    krd="kernel redo datafiles (media and standby)",
    krd_do_mrp="kernel redo datafiles (media and standby) do managed recovery processing",
    krd_end_rcv="kernel redo datafiles (media and standby) end media recovery",
    krd_implicit_rcv="kernel redo datafiles (media and standby) IMPLICIT ReCoVery for standby open/activation",
    krdrsb="kernel redo datafiles (media and standby) read from standby (?)",
    krdsmr="kernel redo datafiles (media and standby) serial? slave? media recovery",
    krf="kernel redo flashback",
    krf_flashback_db="kernel redo flashback flashback a database from a client other than RMAN",
    krf_restore_driver="kernel redo flashback restore the files in the restore set/flashback restore of the database",
    krfbBuildRestoreSet="kernel redo flashback adds a list if files to flashback to the flashback context",
    krfgdelfb1="kernel redo flashback calculate deleted space (?)",
    krfgfbtofree="kernel redo flashback calculate free space",
    krfxfblog="kernel redo flashback fixed table callback routine for x$kcrfblog",
    krp="kernel redo recovery",
    krp_check_slave_exit="kernel redo recovery wait for ksv slaves to exit",
    krp_slave_apply="kernel redo recovery main redo apply loop",
    krp_slave_main="kernel redo recovery main pmr slave callback",
    krpi="kernel redo recovery dbms_pitr support",
    krpiacp="kernel redo recovery dbms_pitr support DBMS_PITR.KRPIACP ADJUSTCOMPATIBILITY",
    krpibexp="kernel redo recovery dbms_pitr support DBMS_PITR.KRPIBEXP BEGINEXPORT",
    krpibimp="kernel redo recovery dbms_pitr support DBMS_PITR.KRPIBIMP BEGINIMPORT",
    krpibts="kernel redo recovery dbms_pitr support DBMS_PITR.KRPIBTS BEGINTABLESPACE",
    krpicpt="kernel redo recovery dbms_pitr support DBMS_PITR.KRPICPT COMMITPITR",
    krpidfv="kernel redo recovery dbms_pitr support DBMS_PITR.KRPIDFV DOFILEVERIFY",
    krpists="kernel redo recovery dbms_pitr support DBMS_PITR.KRPISTS SELECTTABLESPACE",
    krs="kernel redo standby/dataguard (?)",
    krsa="kernel redo standby/dataguard (?) access and lock",
    krsc="kernel redo standby/dataguard (?) crash recovery",
    krsd="kernel redo standby/dataguard (?) destination",
    krsh="kernel redo standby/dataguard (?) helper",
    krsm="kernel redo standby/dataguard (?) managed recovery process",
    krsn="kernel redo standby/dataguard (?) network/transport",
    krso="kernel redo standby/dataguard (?) monitor",
    krsr="kernel redo standby/dataguard (?) remote file server",
    krss="kernel redo standby/dataguard (?) scheduler",
    krt="kernel redo tablespaces",
    krta2bz="kernel redo tablespaces obtain blocksize of tablespace",
    krta2rfn="kernel redo tablespaces obtain file number (mos says absolute file number)",
    krtchk="kernel redo tablespaces check consistency (with control file)",
    krtcktt="kernel redo tablespaces check temporary tablespace configuration",
    krv="kernel redo recovery",
    krvarf="kernel redo recovery DBMS_LOGMNR.KRVARF ADD_LOGFILE",
    krvcp="kernel redo recovery DBMS_LOGMNR.KRVCP COLUMN_PRESENT",
    krvend="kernel redo recovery DBMS_LOGMNR.KRVEND END_LOGMNR",
    krvg="kernel redo recovery generation of redo with DDL",
    krvgdrm="kernel redo recovery generation of redo with DDL DBMS_LOGMNR_INTERNAL.KRVGDRM",
    krviad11202to112="kernel redo recovery DBMS_LOGMNR_INTERNAL.AGESPILL_11202TO112",
    krviad112to11="kernel redo recovery DBMS_LOGMNR_INTERNAL.AGESPILL_112TO11",
    krviad121to11204="kernel redo recovery DBMS_LOGMNR_INTERNAL.AGESPILL_121TO11204",
    krviad12202to122="kernel redo recovery DBMS_LOGMNR_INTERNAL.AGESPILL_12202TO122",
    krviad122to12="kernel redo recovery DBMS_LOGMNR_INTERNAL.AGESPILL_122TO12",
    krviad122to12202="kernel redo recovery DBMS_LOGMNR_INTERNAL.AGESPILL_122TO12 DBMS_LOGMNR_INTERNAL.AGESPILL_122TO12202",
    krvialf="kernel redo recovery DBMS_LOGMNR_SESSION_INT.ADD_LOG_FILE",
    krviarscn="kernel redo recovery DBMS_LOGMNR_INTERNAL.ADVANCE_READ_SCN",
    krviats="kernel redo recovery DBMS_LOGMNR_SESSION_INT.ATTACH_SESSION",
    krviau11204to121="kernel redo recovery DBMS_LOGMNR_INTERNAL.AGESPILL_11204TO121",
    krviau11to112="kernel redo recovery DBMS_LOGMNR_INTERNAL.AGESPILL_11TO112",
    krviau122to12202="kernel redo recovery DBMS_LOGMNR_INTERNAL.AGESPILL_122TO12202",
    krviau12to122="kernel redo recovery DBMS_LOGMNR_INTERNAL.AGESPILL_12TO122",
    krvicl="kernel redo recovery DBMS_LOGMNR_INTERNAL.LOGMNR_KRVICL",
    krvicp="kernel redo recovery DBMS_LOGMNR_SESSION_INT.COLUMN_PRESENT",
    krvics="kernel redo recovery DBMS_LOGMNR_SESSION_INT.CREATE_SESSION",
    krvidcd="kernel redo recovery DBMS_LOGMNR_INTERNAL.DUMP_CKPT_DATA",
    krvidib="kernel redo recovery DBMS_LOGMNR_INTERNAL.KRVIDIB",
    krvidpd="kernel redo recovery DBMS_LOGMNR_INTERNAL.DUMP_PAGEOUT_DATA",
    krvidscd="kernel redo recovery DBMS_LOGMNR_INTERNAL.DUMP_STREAMS_CKPT_DATA",
    krvidss="kernel redo recovery DBMS_LOGMNR_SESSION_INT.DESTROY_SESSION",
    krvidts="kernel redo recovery DBMS_LOGMNR_SESSION_INT.DETACH_SESSION",
    krviftsi="kernel redo recovery DBMS_LOGMNR_INTERNAL.LOGMNR_KRVIFTSI",
    krvigrg="kernel redo recovery DBMS_LOGMNR_INTERNAL.GET_ROOT_GLOBAL_NAME",
    krvild="kernel redo recovery DBMS_LOGMNR_INTERNAL.LOGMNR_KRVILD",
    krvilss="kernel redo recovery DBMS_LOGMNR_INTERNAL.LOGMNR_KRVILSS",
    krvilt="kernel redo recovery DBMS_LOGMNR_INTERNAL.LOGMNR_KRVILT",
    krvimv="kernel redo recovery DBMS_LOGMNR_SESSION_INT.MINE_VALUE",
    krvips="kernel redo recovery DBMS_LOGMNR_SESSION_INT.PREPARE_SCN_RANGE",
    krvirlf="kernel redo recovery DBMS_LOGMNR_SESSION_INT.REMOVE_LOG_FILE",
    krvirs="kernel redo recovery DBMS_LOGMNR_SESSION_INT.RELEASE_SCN_RANGE",
    krvisda="kernel redo recovery DBMS_LOGMNR_SESSION_INT.SET_DICT_ATTR",
    krvislegc="kernel redo recovery DBMS_LOGMNR_INTERNAL.KRVISLEQC",
    krvisobj="kernel redo recovery DBMS_LOGMNR_INTERNAL.SKIP_OBJ_C",
    krvisrba="kernel redo recovery DBMS_LOGMNR_INTERNAL.SKIP_RBA",
    krvissp="kernel redo recovery DBMS_LOGMNR_SESSION_INT.SET_SESSION_PARAMETERS",
    krvisxid="kernel redo recovery DBMS_LOGMNR_INTERNAL.SKIP_XID",
    krviuld="kernel redo recovery DBMS_LOGMNR_INTERNAL.LOGMNR_KRVIULD",
    krviulss="kernel redo recovery DBMS_LOGMNR_INTERNAL.LOGMNR_KRVIULSS",
    krviult="kernel redo recovery DBMS_LOGMNR_INTERNAL.LOGMNR_KRVIULT",
    krviusobj="kernel redo recovery DBMS_LOGMNR_INTERNAL.UNSKIP_OBJ_C",
    krviusrba="kernel redo recovery DBMS_LOGMNR_INTERNAL.UNSKIP_RBA",
    krviusxid="kernel redo recovery DBMS_LOGMNR_INTERNAL.UNSKIP_XID",
    krvm="kernel redo recovery mine",
    krvmv="kernel redo recovery mine DBMS_LOGMNR.KRVMV MINE_VALUE",
    krvrgse="kernel redo recovery DBMS_LOGMNR_INTERNAL.KRVRGSE",
    krvrgse2="kernel redo recovery DBMS_LOGMNR_INTERNAL.KRVRGSE DBMS_LOGMNR_INTERNAL.KRVRGSE2",
    krvrmgb="kernel redo recovery DBMS_LOGMNR_INTERNAL.KRVRMGB",
    krvrrrf="kernel redo recovery DBMS_LOGMNR.KRVRRRF REMOVE_LOGFILE",
    krvrrse="kernel redo recovery DBMS_LOGMNR_INTERNAL.KRVRRSE",
    krvs="kernel redo recovery apply service",
    krvspd="kernel redo recovery apply service DBMS_LOGMNR_INTERNAL.KRVSPD",
    krvssf="kernel redo recovery apply service survive failure",
    krvstart="kernel redo recovery apply service DBMS_LOGMNR.KRVSTART START_LOGMNR",
    krvt="kernel redo recovery log miner viewer support",
    krvugaclr="kernel redo recovery DBMS_LOGMNR_INTERNAL.KRVUGACLR",
    krvugaset="kernel redo recovery DBMS_LOGMNR_INTERNAL.KRVUGASET",
    krvx="kernel redo recovery extract",
    ks="kernel service (VOS)",
    ksa="kernel service (VOS) asynchronous messages",
    ksaamb="kernel service (VOS) asynchronous messages allocate message buffer",
    ksadmb="kernel service (VOS) asynchronous messages deallocate message buffer",
    ksarcv="kernel service (VOS) asynchronous messages receive message",
    ksasnd="kernel service (VOS) asynchronous messages send asynchronous message",
    ksasndint="kernel service (VOS) asynchronous messages send asynchronous message send asynchronous message",
    ksb="kernel service (VOS) background processes",
    ksbabs="kernel service (VOS) background processes action based server",
    ksbasend="kernel service (VOS) background processes asynchronous send message main loop",
    ksbckbast="kernel service (VOS) background processes check blocking asynchronous trap",
    ksbcti="kernel service (VOS) background processes call timeout/interrupts",
    ksbd="kernel service (VOS) background processes detached process",
    ksbmsg="kernel service (VOS) background processes call cpu count changed callbacks",
    ksbrdp="kernel service (VOS) background processes run a detached background process",
    ksbsrv="kernel service (VOS) background processes start a multi-stated server process",
    ksbt="kernel service (VOS) background processes background processes",
    ksbx="kernel service (VOS) background processes Xic cross instance calls",
    ksbxiaf="kernel service (VOS) background processes Xic cross instance calls ksbxic (cross instance calls) message and interrupt action",
    ksbxiafdomsg="kernel service (VOS) background processes Xic cross instance calls ksbxic (cross instance calls) message and interrupt action ksbxic and async xic static functions",
    kscn_to_ub8_impl="kernel service (VOS) convert SCN to ub8",
    kscnfy="kernel service (VOS) system notifications to be passed to components",
    kscs="kernel service (VOS) cloud service",
    kscs_cloud_hcc_enabled="kernel service (VOS) cloud service should HCC be enabled?",
    kscs_clouddb_provider_detect="kernel service (VOS) cloud service in what cloud is this instance running",
    kscs_cloudprov_ut="kernel service (VOS) cloud service cloud provider utility. outputs where oracle detects it is running",
    kscs_cloudsim_paramcb="kernel service (VOS) cloud service cloud simulation parameter callback",
    kscs_enabled="kernel service (VOS) cloud service are we in a cloud?",
    kscs_is_exadata_or_oracle_cloud="kernel service (VOS) cloud service is this exadata or oracle cloud?",
    kscs_is_non_oracle_cloud="kernel service (VOS) cloud service is this a non oracle cloud?",
    kscs_is_on_premise="kernel service (VOS) cloud service is this on-premises?",
    kscs_process_param="kernel service (VOS) cloud service process cloud related parameters for determination of services",
    kscsinitcapprovider="kernel service (VOS) cloud service initialize capabilities per provider",
    ksd="kernel service (VOS) debug internal errors",
    ksdacn="kernel service (VOS) debug internal errors action routines for parser",
    ksddoa="kernel service (VOS) debug internal errors debug support do an action",
    ksdhng="kernel service (VOS) debug internal errors hang analyze",
    ksdind="kernel service (VOS) debug internal errors DBMS_SYSTEM.KSDIND_ICD KSDIND",
    ksdnfsp_restore_df_perm="kernel service (VOS) debug internal errors DBMS_DNFS.RESTORE_DATAFILE_PERMISSION",
    ksdocrl="kernel service (VOS) debug internal errors check if row is locked",
    ksdp="kernel service (VOS) debug internal errors parser",
    ksdpcg="kernel service (VOS) debug internal errors parser post and check event in the specified event group",
    ksdpec="kernel service (VOS) debug internal errors parser post event and check trigger condition",
    ksdprs="kernel service (VOS) debug internal errors parser parse string",
    ksdwra="kernel service (VOS) debug internal errors write to alert",
    ksdwrf="kernel service (VOS) debug internal errors write to (trace) file",
    ksdwrt="kernel service (VOS) debug internal errors DBMS_SYSTEM.KSDWRT_ICD KSDWRT",
    ksdxcb="kernel service (VOS) debug internal errors ksdx callback for sosd layer signal handler",
    ksdxen="kernel service (VOS) debug internal errors 2-task entry point",
    ksdxfdmp="kernel service (VOS) debug internal errors ksdx function: invoke named dump",
    ksdxfstk="kernel service (VOS) debug internal errors dump abridged os stack",
    ksdxftev="kernel service (VOS) debug internal errors set trace event",
    ksdxwcwpt="kernel service (VOS) debug internal errors create watchpoint",
    ksdxwdwpt="kernel service (VOS) debug internal errors delete watchpoint",
    kse="kernel service (VOS) error",
    ksed="kernel service (VOS) error debug",
    ksedmp="kernel service (VOS) error debug dump process state",
    ksedst="kernel service (VOS) error debug dump the call stack",
    ksedst1="kernel service (VOS) error debug dump the call stack stack trace 1 helper",
    ksedsts="kernel service (VOS) error debug dump the call stack short stack",
    ksefic="kernel service error ??",
    kseinpre="kernel service error ??",
    ksepop="kernel service (VOS) error perform cleanup when an error frame is being popped",
    kserec1="kernel service (VOS) error record an error code",
    kserec4="kernel service (VOS) error record an error code",
    kserin="kernel service error ??",
    ksesec0="kernel service (VOS) error signal an error code",
    ksesec1="kernel service (VOS) error signal an error code",
    ksesin="kernel service (VOS) error signal an internal error (named)",
    ksf="kernel service (VOS) functions",
    ksfd="kernel service (VOS) functions disk IO",
    ksfd_addtoissueq="kernel service (VOS) functions disk IO add requests to issue queue",
    ksfd_chkio="kernel service (VOS) functions disk IO IO checker/io stats",
    ksfd_clear_pgaobjsc="kernel service (VOS) functions disk IO clear pga objects",
    ksfd_do_io_verification="kernel service (VOS) functions disk IO do IO verification",
    ksfd_get_physical_sectsz="kernel service (VOS) functions disk IO read physical sectorsize from device",
    ksfd_gosdrq="kernel service (VOS) functions disk IO get os dependent requests",
    ksfd_io="kernel service (VOS) functions disk IO perform IO",
    ksfd_odm="kernel service (VOS) functions disk IO oracle disks manager",
    ksfd_odmio="kernel service (VOS) functions disk IO oracle disks manager IO",
    ksfd_osdrqfil="kernel service (VOS) functions disk IO operating system dependent request",
    ksfd_sage_poosible="kernel service (VOS) functions disk IO exadata offloading possible check",
    ksfd_sbio="kernel service (VOS) functions disk IO submit block IO",
    ksfd_skgfqio="kernel service (VOS) functions disk IO to system kernel generic file queue IO",
    ksfd_update_iostatstime="kernel service (VOS) functions disk IO update statistics for X$KSFDSTFILE (V$IOSTAT_FILE)",
    ksfdaf="kernel service (VOS) functions disk IO asm files",
    ksfdaio="kernel service (VOS) functions disk IO asynchronous IO",
    ksfdbio="kernel service (VOS) functions disk IO block IO",
    ksfdbio_updatestats="kernel service (VOS) functions disk IO block IO update statistics for X$KSFDSTCMP (V$IOSTAT_FUNCTION)",
    ksfdckerr="kernel service (VOS) functions disk IO check for errrors",
    ksfdDumpPGA="kernel service (VOS) functions disk IO dump ksfd PGA",
    ksfdfchkaio="kernel service (VOS) functions disk IO check if aio can be done",
    ksfdgaiolmt="kernel service (VOS) functions disk IO get aio limit",
    ksfdgfno="kernel service (VOS) functions disk IO get file number",
    ksfdgo="kernel service (VOS) functions disk IO execute IO",
    ksfdgpsz="kernel service (VOS) functions disk IO get physical (sector) size",
    ksfdgrsz="kernel service (VOS) functions disk IO get request size",
    ksfdmp="kernel service (VOS) functions disk IO call the relevant dump routine",
    ksfdnfy="kernel service (VOS) functions disk IO PDB open notifier",
    ksfdopn="kernel service (VOS) functions disk IO open random access file fname",
    ksfdpcl="kernel service (VOS) functions disk IO process IO completion",
    ksfdpgadump="kernel service (VOS) functions disk IO ksfd dump PGA routine",
    ksfdpoll="kernel service (VOS) functions disk IO poll for IO completion",
    ksfdread="kernel service (VOS) functions disk IO read random access file in sync mode",
    ksfdss="kernel service (VOS) functions disk IO snapshot (clonedb)",
    ksfdss_fob_is_snap="kernel service (VOS) functions disk IO snapshot (clonedb) are files in file open block (fob) snapshot files?",
    ksfdwat="kernel service (VOS) functions disk IO wait for IOs to finish",
    ksfdwtio="kernel service (VOS) functions disk IO wait for IO",
    ksfflt="kernel service (VOS) functions free latch",
    ksfglt="kernel service (VOS) functions get latch",
    ksfh="kernel service (VOS) functions io helper",
    ksfm="kernel service (VOS) functions file mapping",
    ksfmplsdropall="kernel service (VOS) functions file mapping DBMS_STORAGE_MAP.DROP_ALL_CALLOUT",
    ksfmplsdropelement="kernel service (VOS) functions file mapping DBMS_STORAGE_MAP.DROP_ELEMENT_CALLOUT",
    ksfmplsdropfile="kernel service (VOS) functions file mapping DBMS_STORAGE_MAP.DROP_FILE_CALLOUT",
    ksfmplslockmap="kernel service (VOS) functions file mapping DBMS_STORAGE_MAP.LOCK_MAP_CALLOUT",
    ksfmplsmapelement="kernel service (VOS) functions file mapping DBMS_STORAGE_MAP.MAP_ELEMENT_CALLOUT",
    ksfmplsmapfile="kernel service (VOS) functions file mapping DBMS_STORAGE_MAP.MAP_FILE_CALLOUT",
    ksfmplsrestore="kernel service (VOS) functions file mapping DBMS_STORAGE_MAP.RESTORE_CALLOUT",
    ksfmplsunlockmap="kernel service (VOS) functions file mapping DBMS_STORAGE_MAP.UNLOCK_MAP_CALLOUT",
    ksfpec="kernel service (VOS) functions io post an event",
    ksfq="kernel service (VOS) functions sequential file io interface",
    ksfq_alo="kernel service (VOS) functions sequential file io interface allocate device",
    ksfqfcls="kernel service (VOS) functions sequential file io interface close a sequential file",
    ksfqxdes="kernel service functions io sequential io interface ??",
    ksfsc1="kernel service (VOS) functions OFS file system callback",
    ksfsd="kernel service (VOS) functions OFS file system dispatcher",
    ksfsm="kernel service (VOS) functions OFS file system metadata",
    ksfsp="kernel service (VOS) functions DBMS_FS",
    ksfsp_destroy_fs="kernel service (VOS) functions DBMS_FS KSFSP_DESTROY_FS",
    ksfsp_make_fs="kernel service (VOS) functions DBMS_FS KSFSP_MAKE_FS",
    ksfsp_mount_fs="kernel service (VOS) functions DBMS_FS KSFSP_MOUNT_FS",
    ksfv="kernel service (VOS) functions file io server",
    ksi="kernel service (VOS) instance locking",
    ksim="kernel service (VOS) instance locking manager",
    ksimgchg="kernel service (VOS) instance locking manager group state change",
    ksimPrintGroupMemCache="kernel service (VOS) instance locking manager print out group memory cache (oradebug)",
    ksimPrintGroupMemPGA="kernel service (VOS) instance locking manager print out pga group memory (oradebug)",
    ksipc="kernel service (VOS) instance locking VOS IPC",
    ksipcon="kernel service (VOS) instance locking VOS IPC convert a group lock",
    ksipget="kernel service (VOS) instance locking get a group lock (synchronous interface to DLM for lock get)",
    ksiprls="kernel service (VOS) instance locking release a group lock",
    ksires="kernel service instance locking release",
    ksk="kernel service (VOS) resource manager",
    kskadjcpuutil="kernel service (VOS) resource manager adjust cpu utilization (adjusted for instance caging)",
    kskchk="kernel service (VOS) resource manager check resource state for RM",
    kskgetpgalimit="kernel service (VOS) resource manager get pga limit",
    kskinitrm="kernel service (VOS) resource manager initialise resource manager",
    kskiorm="kernel service (VOS) resource manager I/O resource manager",
    ksklheld="kernel service (VOS) resource manager lock held",
    kskosstatact="kernel service (VOS) resource manager operating system statistics act (get os statistics)",
    kskpthr="kernel service (VOS) resource manager post thread",
    kskthbcall="kernel service (VOS) resource manager thread begin call",
    kskthbwt="kernel service (VOS) resource manager thread begin wait",
    kskthecall="kernel service (VOS) resource manager thread end call",
    kskthewt="kernel service (VOS) resource manager thread end wait",
    kskthexit="kernel service (VOS) resource manager thread exit",
    kskthrsod="kernel service (VOS) resource manager thread state object delete",
    kskvmstatact="kernel service (VOS) resource manager measure swap-in and swap-out (and generate error if amount is more than 2% of real memory)",
    kskwait_timed_cpu="kernel service (VOS) resource manager resource manager wait routine",
    ksl="kernel service (VOS) latching and post-wait",
    ksl_get_child_latch_range="kernel service (VOS) latching and post-wait get all child latches for a range",
    ksl_get_child_latches="kernel service (VOS) latching and post-wait get all child latches",
    ksl_get_shared_latch="kernel service (VOS) latching and post-wait get latch in shared mode",
    ksl_get_shared_latch_int="kernel service (VOS) latching and post-wait get latch in shared mode (12.2)",
    ksl_post_proc="kernel service (VOS) latching and post-wait post a single process",
    ksl_postm="kernel service (VOS) latching and post-wait post multiple processes",
    ksl_postm_add="kernel service (VOS) latching and post-wait post multiple processes add a process",
    ksl_postm_do_posts="kernel service (VOS) latching and post-wait post multiple processes post processes",
    ksl_postm_init="kernel service (VOS) latching and post-wait post multiple processes initialise",
    ksl_skgslgts="kernel service (VOS) latching and post-wait spin get of exclusive latch (11g)",
    ksl_update_post_stats="kernel service (VOS) latching and post-wait update processing of posting stats ao. in x$kslpr",
    kslawe="kernel service (VOS) latching and post-wait add post-wait entry",
    kslccll="kernel service (VOS) latching and post-wait clean up after a given latch",
    kslcll="kernel service (VOS) latching and post-wait clean up after a given latch",
    kslcllt="kernel service (VOS) latching and post-wait clean up after a given latch clean up after a given latch",
    kslclt="kernel service (VOS) latching and post-wait create child latch",
    kslconx="kernel service (VOS) latching and post-wait convert latch from shared to exclusive",
    ksle="kernel service (VOS) latching and post-wait event wait",
    kslf2c="kernel service (VOS) latching and post-wait free two child latches",
    kslfre="kernel service (VOS) latching and post-wait free latch",
    kslfred="kernel service (VOS) latching and post-wait free latch free latch, debugging version",
    kslg2c="kernel service (VOS) latching and post-wait get two child latches of the same parent",
    kslg2csl="kernel service (VOS) latching and post-wait get two child latches of the same parent shared latches",
    kslges="kernel service (VOS) latching and post-wait get exclusive latch slow spinning in a loop",
    kslgess="kernel service (VOS) latching and post-wait get exclusive latch slow spinning in a loop shared latch",
    kslgetl="kernel service (VOS) latching and post-wait get latch",
    kslgetsl="kernel service (VOS) latching and post-wait get a shared latch",
    kslgpl="kernel service (VOS) latching and post-wait get parent and child latches",
    kslilcr="kernel service (VOS) latching and post-wait invoke latch cleanup routine",
    ksliwat="kernel service (VOS) latching and post-wait inner wait function; setup a wait that times out",
    ksliwat_cleanup="kernel service (VOS) latching and post-wait inner wait function; setup a wait that times out cleanup post/wait entry",
    kslpsemf="kernel service (VOS) latching and post-wait post semaphores",
    kslpslf="kernel service (VOS) latching and post-wait post list of foregrounds",
    kslpspr="kernel service (VOS) latching and post-wait post the process with that latch",
    kslpwrp_int="kernel service (VOS) latching and post-wait post/wait read post type (to choose single or multi process posting; guess)",
    kslskgs="kernel service (VOS) latching and post-wait spin get of shared latch",
    kslwait="kernel service (VOS) latching and post-wait wait for n centi-seconds or until posted",
    kslwaitctx="kernel service (VOS) latching and post-wait wait for n centi-seconds or until posted wait context; wait until timeout",
    kslwaitns="kernel service (VOS) latching and post-wait wait for n centi-seconds or until posted wait to be awakened w/o calling into the db scheduler",
    kslwat="kernel service (VOS) latching and post-wait wat for event",
    kslwlmod="kernel service (VOS) latching and post-wait wait list modification",
    kslwlscan="kernel service (VOS) latching and post-wait scan write list",
    kslwt="kernel service (VOS) latching and post-wait wait interface",
    kslwt_end_snapshot="kernel service (VOS) latching and post-wait wait interface end snapshot",
    kslwt_update_stats_int="kernel service (VOS) latching and post-wait wait interface update statistics",
    kslwtbctx="kernel service (VOS) latching and post-wait wait interface begin context/wait",
    kslwtectx="kernel service (VOS) latching and post-wait wait interface end context/wait",
    ksm="kernel service (VOS) memory",
    ksm_prepage_sga_seg="kernel service (VOS) memory sga segment selection for prepaging",
    ksmals="kernel service (VOS) memory allocate stack",
    ksmapg="kernel service (VOS) memory callback for allocating a pga extent",
    ksmapply_v2="kernel service (VOS) memory used for prepaging; apply prepage?",
    ksmarfg="kernel service (VOS) memory allocate real free pga(?)",
    ksmasg="kernel service (VOS) memory callback for allocating an sga extent. the sga is fixed size",
    ksmcpg="kernel service (VOS) memory create (variable) pga",
    ksmcsg="kernel service (VOS) memory create sga",
    ksmd="kernel service (VOS) memory state object memory (?)",
    ksmdfr="kernel service (VOS) memory state object memory (?) free memory",
    ksmdpg="kernel service (VOS) memory state object memory (?) deallocate the variable pga. just free top pga heap, the callback will free the extents to osd.",
    ksmem_="kernel service (VOS) memory manipulation",
    ksmerr="kernel service (VOS) memory cleanup any stack memory allocated within the given error frame",
    ksmf="kernel service (VOS) memory fixed sga",
    ksmfpg="kernel service (VOS) memory fixed sga free memory pages",
    ksmh="kernel service (VOS) memory any heap",
    ksmlsg="kernel service (VOS) memory check for errors which occured during sga allocation and mapping",
    ksmp="kernel service (VOS) memory pga heap",
    ksmpgd_cancel_detail="kernel service (VOS) memory pga heap PGA_DETAIL_CANCEL (oradebug/alter session)",
    ksmpgd_dump_detail="kernel service (VOS) memory pga heap dumps pga detail to tracefile. 1 dumps all, otherwise ora pid",
    ksmpgd_get_detail="kernel service (VOS) memory pga heap PGA_DETAIL_GET (oradebug/alter session)",
    ksmprepage="kernel service (VOS) memory pga heap prepage function (only used by sa00?)",
    ksmprepage_memory="kernel service (VOS) memory pga heap prepage function (only used by sa00?) actual prepage function",
    ksmrf="kernel service (VOS) memory real free heap",
    ksmrf_init_alloc="kernel service (VOS) memory real free heap initiate allocation of memory",
    ksms="kernel service (VOS) memory sga heap",
    ksmshu="kernel service (VOS) memory sga heap instance shutdown final check on sga",
    ksmsq="kernel service (VOS) memory sga heap message queue services",
    ksmu="kernel service (VOS) memory uga heap",
    ksmudr="kernel service (VOS) memory uga heap stack segment underflow, free the current stack segment and restore ?",
    ksmuga="kernel service (VOS) memory uga heap allocate user session global data",
    ksmugf="kernel service (VOS) memory uga heap release session global memory",
    ksmuhe="kernel service (VOS) memory uga heap allocate the uga heap using the parent heap specified if state = KSMUGCRE",
    ksmupg="kernel service (VOS) memory uga heap check for references in the session global area to process",
    ksmuse="kernel service (VOS) memory uga heap set pointers to newly allocated memory?",
    ksmxm="kernel service (VOS) memory extended memory (persistent memory)",
    ksmxm_alloc_handle="kernel service (VOS) memory extended memory (persistent memory) allocate handle",
    ksmxm_allocate_areas="kernel service (VOS) memory extended memory (persistent memory) allocate areas",
    ksmxm_apply="kernel service (VOS) memory extended memory (persistent memory) apply",
    ksmxm_attach_xga="kernel service (VOS) memory extended memory (persistent memory) attach xga",
    ksmxm_calculate_memory_info_per_node="kernel service (VOS) memory extended memory (persistent memory) calculate memory info per node",
    ksmxm_check_area_exists="kernel service (VOS) memory extended memory (persistent memory) check area exists",
    ksmxm_create_get_memory_stats="kernel service (VOS) memory extended memory (persistent memory) create get memory statistics",
    ksmxm_create_region="kernel service (VOS) memory extended memory (persistent memory) create region",
    ksmxm_create_xga="kernel service (VOS) memory extended memory (persistent memory) create xga",
    ksmxm_create_xga_metadata="kernel service (VOS) memory extended memory (persistent memory) create xga create xga metadata",
    ksmxm_destroy_xga="kernel service (VOS) memory extended memory (persistent memory) destroy xga",
    ksmxm_detach_xga="kernel service (VOS) memory extended memory (persistent memory) detach xga",
    ksmxm_display_xga_segments_info="kernel service (VOS) memory extended memory (persistent memory) display xga segments info",
    ksmxm_distribute_bc_xmem_regions="kernel service (VOS) memory extended memory (persistent memory) distribute buffer cache regions",
    ksmxm_distribute_imc_xmem_regions="kernel service (VOS) memory extended memory (persistent memory) distribute in-memory column store regions",
    ksmxm_distribute_region_cb="kernel service (VOS) memory extended memory (persistent memory) distribute region callback",
    ksmxm_dump_xga_info="kernel service (VOS) memory extended memory (persistent memory) dump sga info",
    ksmxm_get_area_name="kernel service (VOS) memory extended memory (persistent memory) get area name",
    ksmxm_init="kernel service (VOS) memory extended memory (persistent memory) initialize",
    ksmxm_prepage="kernel service (VOS) memory extended memory (persistent memory) prepage xga",
    ksmxmnfy="kernel service (VOS) memory extended memory (persistent memory) notify",
    ksn="kernel service (VOS) two task",
    kso="kernel service (VOS) operations",
    kso_prespawn_queue_disable="kernel service (VOS) operations DBMS_PROCESS.STOP_POOL",
    kso_prespawn_queue_enable="kernel service (VOS) operations DBMS_PROCESS.START_POOL",
    kso_prespawn_queue_update="kernel service (VOS) operations DBMS_PROCESS.CONFIGURE_POOL",
    ksols="kernel service (VOS) operations object level statistics(?)",
    ksolt="kernel service (VOS) operations lightweight threads",
    ksopid_alive="kernel service (VOS) operations pid alive check",
    ksp="kernel service (VOS) parameter",
    ksp_param_handle_param="kernel service (VOS) parameter allocate a set of chunks for parameter data",
    ksp_spfile="kernel service (VOS) parameter spfile file management",
    ksp_spfile_open="kernel service (VOS) parameter spfile file management open",
    ksp_spfile_write="kernel service (VOS) parameter spfile file management write",
    kspallmod="(ksp)allmod - kernel service parameter",
    kspGetInstType="kernel service (VOS) parameter validate instance_type",
    kspgir="kernel service (VOS) parameter get range",
    kspgpnicd="kernel service (VOS) parameter DBMS_UTILITY.KSPGPNICD GET_PARAMETER_VALUE",
    kspgsp="kernel service (VOS) parameter get string parameter",
    ksppt="kernel service (VOS) parameter parameter table",
    kspptval="kernel service (VOS) parameter parameter table value",
    ksprcvsp="kernel service (VOS) parameter receive spfile information for write to spfile",
    ksq="kernel service (VOS) enqueue",
    ksqcmi="kernel service (VOS) enqueue change lock mode internal",
    ksqcnl="kernel service (VOS) enqueue convert an enqueue's mode",
    ksqcnv="kernel service (VOS) enqueue convert an enqueue's mode",
    ksqcov="kernel service (VOS) enqueue convert an enqueue's mode",
    ksqded="kernel service (VOS) enqueue deadlock check",
    ksqdel="kernel service (VOS) enqueue release an enqueue",
    ksqdldnl="kernel service (VOS) enqueue deadlock dump ktagetg0",
    ksqdmc="kernel service (VOS) enqueue dump lock",
    ksqdmp="kernel service (VOS) enqueue dump details",
    ksqenqalloc="kernel service (VOS) enqueue allocate an enqueue",
    ksqgel="kernel service (VOS) enqueue get and allocate enqueue",
    ksqgelctx="kernel service (VOS) enqueue get and allocate enqueue context",
    ksqget="kernel service (VOS) enqueue get an enqueue",
    ksqgtl="kernel service (VOS) enqueue get an enqueue",
    ksqrcl="kernel service (VOS) enqueue release an enqueue",
    ksqsgn="kernel service (VOS) enqueue procedure to register database name for ?",
    ksqsod="kernel service (VOS) enqueue state object delete",
    ksr="kernel service (VOS) reliable messages",
    ksrma="kernel service (VOS) reliable messages ksrma",
    ksrmf="kernel service (VOS) reliable messages ksrmf",
    kss="kernel service (VOS) state object",
    kss_del_cb="kernel service (VOS) state object delete callback",
    kss_delete_children="kernel service (VOS) state object delete children of SO",
    kssadd="kernel service (VOS) state object add new SO",
    kssadf="kernel service (VOS) state object add SO from free list",
    kssdch="kernel service (VOS) state object delete children of SO",
    kssdch_int="kernel service (VOS) state object delete children of SO internal",
    kssdct="kernel service (VOS) state object delete children of specified type",
    kssdel="kernel service (VOS) state object delete SO",
    kssdmh="kernel service (VOS) state object dump children of a SO",
    kssdmp="kernel service (VOS) state object dump children of a SO",
    kssmc="kernel service (VOS) state object registration caches",
    kssrmf="kernel service (VOS) state object delete SO",
    kssxdl="kernel service (VOS) state object delete SO ignoring errors, cleans latches",
    kst="kernel service (VOS) trace (x$trace)",
    kstdmp="kernel service trace (x$trace) ??",
    kstm="kernel service (VOS) trace (x$trace) time manager",
    kstmchkdrift="kernel service (VOS) trace (x$trace) time manager check drift",
    kstmgethighresustick="kernel service (VOS) trace (x$trace) time manager get high resolution time",
    ksu="kernel service (VOS) user",
    ksu_detactive_tac="kernel service (VOS) user deactivete time accounting",
    ksu_dispatch_tac="kernel service (VOS) user dispatch timed-out actions (updates wait interface)",
    ksu_update_eoc_stats="kernel service (VOS) user update end of call state(?)",
    ksucin="kernel service (VOS) user check interrupt",
    ksuclc="kernel service (VOS) user cleanup current call",
    ksucln="kernel service (VOS) user cleanup detached process",
    ksuclnwt="kernel service (VOS) user cleanup detached process wait for specified time in seconds",
    ksucre="kernel service (VOS) user create user session in process",
    ksucresg="kernel service (VOS) user create user session in process create session with a process group specified",
    ksucri="kernel service (VOS) user create and initialise process",
    ksucrp="kernel service (VOS) user create and initialise process",
    ksuded="kernel service (VOS) user user disconnect",
    ksudel="kernel service (VOS) user delete specified user session",
    ksudlc="kernel service (VOS) user delete call",
    ksudlp="kernel service (VOS) user delete process. called when user detaches or cleanup by pmon",
    ksudmp="kernel service (VOS) user dump process state object",
    ksudps="kernel service (VOS) user dump process state",
    ksudss="kernel service (VOS) user dump system state",
    ksugetblocker="kernel service user ??",
    ksugtcpums="kernel service (VOS) user get cpu measurement",
    ksuitm="kernel service user ??",
    ksul="kernel service (VOS) user license/language",
    ksumcl="kernel service (VOS) user multi(?) check for process to be alive (checks pmon)",
    ksup="kernel service (VOS) user processes",
    ksupalv="kernel service (VOS) user processes process alive check",
    ksupd="kernel service (VOS) user processes planned draining",
    ksupop="kernel service (VOS) user processes pop (restore) user or recursive call",
    ksupr="kernel service (VOS) user processes process object",
    ksuprc="kernel service (VOS) user processes process object process recursive call",
    ksupucg="kernel service (VOS) user processes push user call general",
    ksur="kernel service (VOS) user resource usage",
    ksus="kernel service (VOS) user statistics",
    ksuse="kernel service (VOS) user statistics sessions",
    ksusgn="kernel service (VOS) user statistics session signature",
    ksut="kernel service (VOS) user timer",
    ksuwaitsysevent="kernel service (VOS) user seems to deal with channels (x$ksrchdl, x$ksrcctx)",
    ksux="kernel service (VOS) user instance",
    ksuxda="kernel service (VOS) user instance attempt to delete all processes that are marked dead",
    ksuxdl="kernel service (VOS) user instance delete state object for PMON",
    ksuxds="kernel service (VOS) user instance acquires the ksupol, the SO latch protects access to the sniper bit",
    ksuxfl="kernel service (VOS) user instance find dead processes and cleanup their latches. called by PMON",
    ksv="kernel service (VOS) slave management",
    ksvcheckwait="kernel service (VOS) slave management validate waiting situation",
    ksvcreate="kernel service (VOS) slave management create slave process",
    ksvrdp="kernel service (VOS) slave management run generic detached slave process",
    ksvsend="kernel service (VOS) slave management send message to slave process",
    ksvsubmit="kernel service (VOS) slave management submit request for ASM Onnn slave process",
    ksvwait="kernel service (VOS) slave management setup waiting",
    ksvworkwait="kernel service (VOS) slave management wait for submitted work",
    ksw="kernel service (VOS) workgroup",
    ksws="kernel service (VOS) workgroup services",
    ksws_int_tag_sess="kernel service (VOS) workgroup services DBMS_SERVICE.INT_TAG_SESSION",
    ksws_kill_sess="kernel service (VOS) workgroup services DBMS_SERVICE.IKILL_SESSION",
    ksws_map_rc_to_error="kernel service (VOS) workgroup services DBMS_SERVICE.I_MAP_ERROR (?)",
    kswsdls="kernel service (VOS) workgroup services delete service",
    kswsgetosstat="kernel service (VOS) workgroup services get host cpu utilization",
    kswsics="kernel service (VOS) workgroup services DBMS_SERVICE.ICREATE_SERVICE",
    kswsidl="kernel service (VOS) workgroup services DBMS_SERVICE.IDELETE_SERVICE",
    kswsims="kernel service (VOS) workgroup services DBMS_SERVICE.IMODIFY_SERVICE",
    kswsiss="kernel service (VOS) workgroup services DBMS_SERVICE.ISTART_SERVICE",
    kswsists="kernel service (VOS) workgroup services DBMS_SERVICE.ISTOP_SERVICE",
    ksx="kernel service (VOS) cross instance",
    ksxa="kernel service (VOS) cross instance parallel affinity",
    ksxb1bqb="kernel service (VOS) cross instance memcpy buffer to qb and increment the qb",
    ksxmcln="kernel service (VOS) cross instance DBMS_STATS_INTERNAL.PURGE_ORPHAN_ENTRIES_CALLOUT",
    ksxp="kernel service (VOS) cross instance cross instance ipc",
    ksxpcnhent="kernel service cross instance ipc ??",
    ksxplstdmp="kernel service cross instance ipc ??",
    ksxprcvimd="kernel service cross instance ipc ??",
    ksxpwait="kernel service cross instance ipc ??",
    ksxr="kernel service (VOS) cross instance broadcast",
    ksxrpollremote="kernel service (VOS) cross instance broadcast poll for remote messages",
    ksxrrcvmsg="kernel service (VOS) cross instance broadcast receive message",
    ksz="kernel service (VOS) oracle storage server (OSS) server layer",
    ksz_cln_proc1="kernel service ??",
    kt="kernel transaction",
    kta="kernel transaction table access",
    ktaadm="kernel transaction table access get all dml locks",
    ktaftt="kernel transaction table access free temporary table",
    ktagdm="kernel transaction table access get dml lock",
    ktagetg0="kernel transaction table access get generic dml lock",
    ktagetp="kernel transaction table access get partition lock",
    ktaiam="kernel transaction table access internal allocate dml lock",
    ktaidm="kernel transaction table access internal delete dml lock",
    ktaifm="kernel transaction table access internal find dml lock",
    ktamp_GetContentCO="kernel transaction table access DBMS_APBACKEND.GETCONTENTCO",
    ktamp_remove_backupfile="kernel transaction table access DBMS_APBACKEND.REMOVEBACKUPFILE",
    ktamp_send_command="kernel transaction table access DBMS_APBACKEND.SENDCOMMANDINTERNAL",
    ktamp_write_tarball="kernel transaction table access DBMS_APBACKEND.WRITETARBALL",
    ktamp_WriteContentCO="kernel transaction table access DBMS_APBACKEND.WRITECONTENTCO",
    ktb="kernel transaction block",
    ktbapundo="kernel transaction block apply undo",
    ktbchg2="kernel transaction block (header) change",
    ktbconv="kernel transaction block block convert",
    ktbdbc="kernel transaction block fast block cleanout function",
    ktbgcl="kernel transaction block performs ITL cleanout for RC and CU blocks",
    ktbgcl1="kernel transaction block performs ITL cleanout for RC and CU blocks general clean 1",
    ktbgcur="kernel transaction block get",
    ktbgds="kernel transaction block get dependent SCN",
    ktbgfc="kernel transaction block flush cleanout to disk",
    ktbgfi="kernel transaction block get free ITL",
    ktbgwl="kernel transaction block generate write list (?)",
    ktbisc="kernel transaction block ITL scan",
    ktbrcl="kernel transaction block ITL cleanout routine",
    ktbt="kernel transaction block table",
    ktbtul="kernel transaction block table unlock ITLs",
    ktbtunlk="kernel transaction block table unlock all based on block type",
    ktc="kernel transaction control component",
    ktcbgn="kernel transaction control component begin transaction",
    ktcbod="kernel transaction control component delete the given branch state object and put it on the freelist",
    ktcccdel="kernel transaction control component commit callback delete",
    ktcCommitTxn="kernel transaction control component main commit function, calls ktcCommitTxn_new",
    ktcCommitTxn_new="kernel transaction control component main commit function, calls ktcCommitTxn_new main commit function",
    ktcddt="kernel transaction control component delete distributed transaction",
    ktcdso="kernel transaction control component delete state object",
    ktcgtx="kernel transaction control component get action global area",
    ktcifc="kernel transaction control component idl flush contexts",
    ktcrab="kernel transaction control component real abort",
    ktcrcm="kernel transaction control component real commit",
    ktcsod="kernel transaction control component state object procedure vector definition",
    ktcxcb="kernel transaction control component fixed table callback for x$ktcxb",
    ktd="kernel transaction distributed",
    ktdbgn="kernel transaction distributed begin",
    ktdcmt="kernel transaction distributed commit",
    ktdrev="kernel transaction distributed recovery",
    kte="kernel transaction extent management",
    ktec="kernel transaction extent management concurrency",
    ktecgetsh="kernel transaction extent management concurrency get segment header",
    ktecgsc="kernel transaction extent management concurrency get segment header and auto-convert",
    ktecgshx="kernel transaction extent management concurrency ??",
    kteclck="kernel transaction extent management concurrency set extent map lock",
    ktef="kernel transaction extent management extent flush extent map",
    ktehw="kernel transaction extent management high water mark operations",
    ktein="kernel transaction extent management information operations",
    kteinmap="kernel transaction extent management information operations return extent map",
    kteinxtt="kernel transaction extent management information operations extents",
    ktel="kernel transaction extent management loader",
    ktelck="kernel transaction extent management loader set segment header extent map lock",
    ktelrwi="kernel transaction extent management loader redoless write initialize",
    kteop="kernel transaction extent management operations",
    kteopins="kernel transaction extent management operations insert a formatted extent after the high water mark",
    kteopmerge="kernel transaction extent management operations marge extent extent maps",
    kteu="kernel transaction extent management redo support for segment header/extent map changes",
    ktf="kernel transaction flashback support",
    ktfa="kernel transaction flashback support flashback archive",
    ktfa_add_table_to_application="kernel transaction flashback support flashback archive DBMS_FLASHBACK_ARCHIVE.ADD_TABLE_TO_APPLICATION",
    ktfa_disable_application="kernel transaction flashback support flashback archive DBMS_FLASHBACK_ARCHIVE.DISABLE_APPLICATION",
    ktfa_disassociate_fba="kernel transaction flashback support flashback archive DBMS_FLASHBACK_ARCHIVE.DISASSOCIATE_FBA_INTERNAL",
    ktfa_do_health_check="kernel transaction flashback support flashback archive do a health check",
    ktfa_drop_application="kernel transaction flashback support flashback archive DBMS_FLASHBACK_ARCHIVE.DROP_APPLICATION",
    ktfa_enable_application="kernel transaction flashback support flashback archive DBMS_FLASHBACK_ARCHIVE.ENABLE_APPLICATION",
    ktfa_extend_mappings="kernel transaction flashback support flashback archive DBMS_FLASHBACK_ARCHIVE.EXTEND_MAPPINGS",
    ktfa_get_sys_context="kernel transaction flashback support flashback archive DBMS_FLASHBACK_ARCHIVE.GET_SYS_CONTEXT",
    ktfa_import_history="kernel transaction flashback support flashback archive DBMS_FLASHBACK_ARCHIVE.IMPORT_HISTORY",
    ktfa_lock_down_application="kernel transaction flashback support flashback archive DBMS_FLASHBACK_ARCHIVE.LOCK_DOWN_APPLICATION",
    ktfa_purge_context="kernel transaction flashback support flashback archive DBMS_FLASHBACK_ARCHIVE.PURGE_CONTEXT",
    ktfa_reassociate_fba="kernel transaction flashback support flashback archive DBMS_FLASHBACK_ARCHIVE.REASSOCIATE_FBA_INTERNAL",
    ktfa_register_application="kernel transaction flashback support flashback archive DBMS_FLASHBACK_ARCHIVE.REGISTER_APPLICATION",
    ktfa_remtabfapp="kernel transaction flashback support flashback archive DBMS_FLASHBACK_ARCHIVE.REMOVE_TABLE_FROM_APPLICATION",
    ktfa_set_context_level="kernel transaction flashback support flashback archive DBMS_FLASHBACK_ARCHIVE.SET_CONTEXT_LEVEL",
    ktfa_unlock_application="kernel transaction flashback support flashback archive DBMS_FLASHBACK_ARCHIVE.UNLOCK_APPLICATION",
    ktfactht="kernel transaction flashback support flashback archive DBMS_FLASHBACK_ARCHIVE.CREATE_TEMP_HISTORY_TABLE",
    ktfb="kernel transaction flashback support bitmapped space manipulation of files/tablespaces",
    ktfbh="kernel transaction flashback support bitmapped space manipulation of files/tablespaces header",
    ktfbt="kernel transaction flashback support bitmapped space manipulation of files/tablespaces extents",
    ktfbtgex="kernel transaction flashback support bitmapped space manipulation of files/tablespaces extents get a free extent",
    ktfd="kernel transaction flashback support dictionary based extent management",
    ktfedml="kernel transaction flashback support KUPP$PROC.ENABLE_FLASHBACK_DMLS",
    ktfgscnn="kernel transaction flashback support DBMS_FLASHBACK.GET_SYSTEM_CHANGE_NUMBER",
    ktfsnrb="kernel transaction flashback support DBMS_FLASHBACK.ENABLE_AT_SYSTEM_CHANGE_NUMBER",
    ktfsrb="kernel transaction flashback support DBMS_FLASHBACK.ENABLE_AT_TIME",
    ktfsrd="kernel transaction flashback support DBMS_FLASHBACK.DISABLE",
    ktft="kernel transaction flashback support temporary file manipulation",
    ktftb_backout_names="kernel transaction flashback support temporary file manipulation DBMS_FLASHBACK.INTERNAL_NAMES_BACKOUT",
    ktftbp_backout_xids="kernel transaction flashback support temporary file manipulation DBMS_FLASHBACK.INTERNAL_XIDS_BACKOUT",
    ktfwtsm="kernel transaction flashback support write timestamp",
    kti="kernel transaction in memory undo(?)",
    ktilm_flush_one_seg="kernel transaction in memory undo(?) DBMS_ILM.FLUSH_SEGMENT_ACCESS_INTERNAL",
    ktilm_flush_rowmaps="kernel transaction in memory undo(?) DBMS_ILM.FLUSH_ROWMAPS",
    ktilm_flush_seg="kernel transaction in memory undo(?) DBMS_ILM.FLUSH_ALL_SEGMENTS",
    ktilm_flush_seg_rowmaps="kernel transaction in memory undo(?) DBMS_ILM.FLUSH_ALL_SEGMENTS DBMS_ILM.FLUSH_SEGMENT_ROWMAP_INTERNAL",
    ktl="kernel transaction list blocks changed",
    ktldbl="kernel transaction list blocks changed delete list of block SO's",
    ktli_UpgradeUpdateInstIdAllLogs="kernel transaction list blocks changed DBMS_SECUREFILE_LOG_ADMIN.UPGRADE_INST_ALL_LOGS",
    ktliDestroyAllLogs_Mig="kernel transaction list blocks changed DBMS_SECUREFILE_LOG_ADMIN.DESTROY_ALL_LOGS",
    ktm="kernel transaction transaction monitor (smon)",
    ktma="kernel transaction transaction monitor (smon) IM transaction ADG",
    ktmb="kernel transaction transaction monitor (smon) IM transaction block",
    ktmc="kernel transaction transaction monitor (smon) IM transaction concurrency",
    ktmirc="kernel transaction transaction monitor (smon) instance recovery",
    ktmjs="kernel transaction transaction monitor (smon) IM transaction journal scan",
    ktmmon="kernel transaction transaction monitor (smon) tx monitor background timeout action (smon)",
    ktmpj="kernel transaction transaction monitor (smon) IM transaction private journal",
    ktmpjInvalidateRow="kernel transaction transaction monitor (smon) IM transaction private journal invalidates the row in a private journal",
    ktmpjUpdInMemExtStat="kernel transaction transaction monitor (smon) IM transaction private journal update inmemory extent statistics",
    ktmr="kernel transaction transaction monitor (smon) IM transaction read",
    ktmres="kernel transaction transaction monitor (smon) IM transaction read resource cleanup routine",
    ktmsj="kernel transaction transaction monitor (smon) IM transaction shared journal",
    ktmSmonMain="kernel transaction transaction monitor (smon) main smon routine",
    ktp="kernel transaction parallel",
    ktpcmt="kernel transaction parallel commit transaction",
    ktpr="kernel transaction parallel recovery",
    ktprbeg="kernel transaction parallel recovery begin",
    ktr="kernel transaction read consistency",
    ktrexc="kernel transaction read consistency examine blocks (consistent gets - examination)",
    ktrexf="kernel transaction read consistency examine blocks (returns best candidate)",
    ktrgcm="kernel transaction read consistency common cr read code; build a cr buffer by applying undo",
    ktrget="kernel transaction read consistency get a read consistent block",
    ktrgtc="kernel transaction read consistency get a read consistent block and call back client",
    ktri="kernel transaction read consistency DBMS_RESUMABLE",
    ktriabt="kernel transaction read consistency DBMS_RESUMABLE ABORT",
    ktrigst="kernel transaction read consistency DBMS_RESUMABLE GET_SESSION_TIMEOUT",
    ktrigt="kernel transaction read consistency DBMS_RESUMABLE GET_TIMEOUT",
    ktrisst="kernel transaction read consistency DBMS_RESUMABLE SET_SESSION_TIMEOUT",
    ktrist="kernel transaction read consistency DBMS_RESUMABLE SET_TIMEOUT",
    ktrsexec="kernel transaction read consistency space management execute",
    ktrvac="kernel transaction read consistency validate active transactions(?)",
    kts="kernel transaction segment management",
    kts4emchk="kernel transaction segment management extended semantic check of the block",
    kts4smck="kernel transaction segment management semantic check of the block",
    ktsa="kernel transaction segment management space analysis",
    ktsaps="kernel transaction segment management space analysis plsql space; dbms_space_admin",
    ktsaps_create_table_cost="kernel transaction segment management space analysis plsql space; dbms_space_admin DBMS_SPACE_ADMIN.KTSAP_CREATE_TABLE_COST",
    ktsaps_DropDF="kernel transaction segment management space analysis plsql space; dbms_space_admin DBMS_SPACE_INFO.KTSAPS_DROPDF ISDATAFILEDROPPABLE",
    ktsaps_info="kernel transaction segment management space analysis plsql space; dbms_space_admin DBMS_SPACE_ADMIN.KTSAPS_INFO",
    ktsaps_nglob_info="kernel transaction segment management space analysis plsql space; dbms_space_admin DBMS_SPACE_ADMIN.KTSAPS_NGLOB_INFO",
    ktsaps_nglob_info2="kernel transaction segment management space analysis plsql space; dbms_space_admin DBMS_SPACE_ADMIN.KTSAPS_NGLOB_INFO DBMS_SPACE_ADMIN.KTSAPS_NGLOB_INFO2",
    ktsaps_object_space_usage="kernel transaction segment management space analysis plsql space; dbms_space_admin DBMS_SPACE_ADMIN.KTSAP_OBJECTS_SPACE_USAGE",
    ktsaps_sf_info_fast="kernel transaction segment management space analysis plsql space; dbms_space_admin DBMS_SPACE_ADMIN.KTSAPS_SF_INFO_FAST SPACE_USAGE",
    ktsaps_verify_shrink_candidate="kernel transaction segment management space analysis plsql space; dbms_space_admin DBMS_SPACE_ADMIN.KTSAP_VERIFY_SHRINK_CANDIDATE",
    ktsb="kernel transaction segment management bitmap management",
    ktsclsb="kernel transaction segment management coalesce free space",
    ktsf="kernel transaction segment management file",
    ktsf_gsp="kernel transaction segment management file get space",
    ktsfbfmt="kernel transaction segment management file format block and link",
    ktsfsmhwm="kernel transaction segment management file segment move high water mark",
    ktsfsnblk="kernel transaction segment management file new block",
    ktsftcmove="kernel transaction segment management file ??",
    ktsfunlk="kernel transaction segment management file undo free list",
    ktsfx="kernel transaction segment management file datafile extention",
    ktsl="kernel transaction segment management lob",
    ktsl_disp_gsp_driver="kernel transaction segment management lob dispenser get space driver",
    ktsl_fill_dispenser_main="kernel transaction segment management lob fill dispenser main loop",
    ktsl_format_cfs_hbb="kernel transaction segment management lob format commited free space hash bucket block",
    ktsl_format_ehdr="kernel transaction segment management lob format extent header block",
    ktsl_format_ufs_hbb="kernel transaction segment management lob format uncommitted free space hash bucket block",
    ktsl_ins_fsb="kernel transaction segment management lob insert into free space block",
    ktsla="kernel transaction segment management lob space allocation",
    ktsla_cfsgsp_main="kernel transaction segment management lob space allocation committed free space get space main",
    ktsla_format_ufs_fsg="kernel transaction segment management lob space allocation format uncommitted free space FSG block",
    ktsla_hbb_gsp="kernel transaction segment management lob space allocation hash bucket block get space",
    ktsla_ins_fsg="kernel transaction segment management lob space allocation insert into FSG",
    ktslagsp="kernel transaction segment management lob space allocation get space",
    ktslagsp_main="kernel transaction segment management lob space allocation get space main routine",
    ktsld="kernel transaction segment management lob delete",
    ktsld_fsp="kernel transaction segment management lob delete free space",
    ktsld_ins_hbb="kernel transaction segment management lob delete insert into hash bucket block",
    ktsldfsp_main="kernel transaction segment management lob delete free space main procedure",
    ktslf="kernel transaction segment management lob free allocated space",
    ktslfbupd="kernel transaction segment management lob free allocated space buffer update",
    ktslfsp="kernel transaction segment management lob free allocated space procedure",
    ktslgfs="kernel transaction segment management lob get free space",
    ktslghb="kernel transaction segment management lob get hash bucket block",
    ktslj="kernel transaction segment management lob slave process",
    ktsmg="kernel transaction segment management merge",
    ktsmg_icmt="kernel transaction segment management merge insert direct load commit. called by transaction code at commit.",
    ktsmg_seg="kernel transaction segment management merge segments",
    ktsmgaex="kernel transaction segment management merge DBMS_UNDO_ADV.IF_AUTO_EXTEND",
    ktsmgbpr="kernel transaction segment management merge DBMS_UNDO_ADV.GET_BEST_POSSIBLE_RETENTION",
    ktsmgmql="kernel transaction segment management merge DBMS_UNDO_ADV.GET_LONGEST_QUERY",
    ktsmgmsz="kernel transaction segment management merge DBMS_UNDO_ADV.MAXSIZE",
    ktsmgru="kernel transaction segment management merge DBMS_UNDO_ADV.GET_REQUIRED_UNDO",
    ktsmgruarr="kernel transaction segment management merge DBMS_UNDO_ADV.GET_REQUIRED_UNDO DBMS_UNDO_ADV.GET_REQUIRED_UNDO",
    ktsp="kernel transaction segment management segment pagetable",
    ktspffbmb="kernel transaction segment management segment pagetable format first level bitmap block",
    ktspffc="kernel transaction segment management segment pagetable Fill First Level bmb dbas",
    ktspfmdb="kernel transaction segment management segment pagetable format a range of data blocks",
    ktspfmtrng="kernel transaction segment management segment pagetable format one range or less of data blocks",
    ktspfpblk="kernel transaction segment management segment pagetable pin useful block",
    ktspfsbmb="kernel transaction segment management segment pagetable format second level bitmap block",
    ktspfsrch="kernel transaction segment management segment pagetable first level bitmap block search",
    ktspfsteal="kernel transaction segment management segment pagetable Search cache for Pointer to data area of LII bitmap block",
    ktspftbmb="kernel transaction segment management segment pagetable format bitmap, formats lob persistent undo blocks(?)",
    ktspfupdst="kernel transaction segment management segment pagetable ??",
    ktspgetf="kernel transaction segment management segment pagetable Get next set of L1s",
    ktspgfblk3="kernel transaction segment management segment pagetable let L1 BMB",
    ktspgsp_cbk="kernel transaction segment management segment pagetable Get Space for inserts",
    ktspgsp_cbk1="kernel transaction segment management segment pagetable Get Space for inserts Get Space for inserts bitmap segment only",
    ktspgsp_main="kernel transaction segment management segment pagetable get space for inserts",
    ktsplbfmb="kernel transaction segment management segment pagetable reclaim free fatblocks from lob index",
    ktsplbrecl="kernel transaction segment management segment pagetable reclaim lob",
    ktspmlhwm="kernel transaction segment management segment pagetable Move the Low High Water Mark. Called when a range of blocks is formatted",
    ktspsc="kernel transaction segment management segment pagetable search cache",
    ktspscan_bmb="kernel transaction segment management segment pagetable search cache scan the level 1 bitmap blocks",
    ktss="kernel transaction segment management segment procedures",
    ktssdrp_segment="kernel transaction segment management segment procedures converts segment to temp in preparation for dropping",
    ktssdt_segs="kernel transaction segment management segment procedures drops stray temporary segments (creates cursor to check)",
    ktssof="kernel transaction segment management segment procedures callback for the x$ktsso implementation",
    ktst="kernel transaction segment management sort management",
    ktstdropobj="kernel transaction segment management sort management drop the temporary space object",
    ktstdt="kernel transaction segment management sort management deletes the sort handle (ktstused) state object",
    ktsx="kernel transaction segment management extent management",
    ktsx_endtx="kernel transaction segment management extent management end add extent transaction",
    ktsxr_add="kernel transaction segment management extent management redoless add extent to a segment",
    ktsxs_add="kernel transaction segment management extent management add extent to a segment",
    ktsxterr="kernel transaction segment management extent management find extent error",
    ktt="kernel transaction tablespace",
    ktte_ts_gettarget="kernel transaction tablespace check if the tbs needs to be extended",
    ktu="kernel transaction undo",
    ktu4smck="kernel transaction undo semantic check of the block",
    ktu4ubck="kernel transaction undo undo block check",
    ktuabt="kernel transaction undo abort",
    ktuapundo="kernel transaction undo apply undo",
    ktubgn="kernel transaction undo begin transaction",
    ktubko="kernel transaction undo get undo record to rollback transaction, non-cr only",
    ktubnd="kernel transaction undo bind undo segment",
    ktubsy="kernel transaction undo check if an extent can be reclaimed using extent commit time",
    ktuchg="kernel transaction undo write logs and perform changes",
    ktucmt="kernel transaction undo commit transaction",
    ktudba="kernel transaction undo convert from usn to dba",
    ktudecrustat="kernel transaction undo decrement undo usage statistics in the resource maanger",
    ktudnx="kernel transaction undo decrease active transaction count",
    ktugct="kernel transaction undo get commit times for transction ids in the data block's ITL",
    ktugti="kernel transaction undo ??",
    ktugur="kernel transaction undo generate undo and redo",
    ktugus="kernel transaction undo get undo segment header",
    ktugusc="kernel transaction undo get undo segment header get undo segment",
    ktuIM="kernel transaction undo in memory",
    ktuisonline1="kernel transaction undo return undo segment info if undo segment is online",
    ktundo="kernel transaction undo undo",
    ktunfy="kernel transaction undo notification procedure",
    ktur="kernel transaction undo recovery",
    kturbk="kernel transaction undo recovery rollback for CR only, reads undo record pointed by uba and call ktundo to back out the change",
    kturbt="kernel transaction undo recovery rollback to time scn",
    kturcm="kernel transaction undo recovery redo commit",
    kturCRBackoutOneChg="kernel transaction undo recovery consistent read; backout change",
    kturCurrBackoutOneChg="kernel transaction undo recovery current read; backout change",
    kturdb="kernel transaction undo recovery write undo data to undo block",
    kturdh="kernel transaction undo recovery write undo header data to undo block",
    kturef="kernel transaction undo recovery rollback examine candidate undo block",
    kturGetUndoRec="kernel transaction undo recovery get an undo record",
    kturRecover="kernel transaction undo recovery recover",
    kturRecoverActiveTxns="kernel transaction undo recovery recover active transactions",
    kturRecoverTxn="kernel transaction undo recovery recover transaction",
    kturRecoverTxnMain="kernel transaction undo recovery recover transaction main procedure",
    kturRecoverUndoSegment="kernel transaction undo recovery recover undo segment",
    ktursal="kernel transaction undo recovery shrink undo segments",
    ktursn="kernel transaction undo recovery rollback segments shrink numbered",
    ktursp="kernel transaction undo recovery rollback to savepoint",
    ktursr="kernel transaction undo recovery rollback segments shrink requested",
    ktusrs="kernel transaction undo shrink rollback segments",
    ktuulc="kernel transaction undo unlock (?)",
    ktz="kernel transaction testing",
    ku="kernel utility",
    kueuld="kernel utility export unloader",
    kup="kernel utility datapump",
    kupc="kernel utility datapump queue services",
    kupd="kernel utility datapump data package",
    kupf="kernel utility datapump file manager",
    kupfxCloseCtx="kernel utility datapump file manager KUPF$FILE_INT.CLOSE_CONTEXT",
    kupfxCreDmpFile="kernel utility datapump file manager KUPF$FILE_INT.CREATE_DUMP_FILE",
    kupfxCreKeyInfo="kernel utility datapump file manager KUPF$FILE_INT.CREATE_KEY_INFO",
    kupfxDelDmpFile="kernel utility datapump file manager KUPF$FILE_INT.DELETE_DUMP_FILE",
    kupfxExmDmpFile="kernel utility datapump file manager KUPF$FILE_INT.EXAMINE_DUMP_FILE",
    kupfxFlushLob="kernel utility datapump file manager KUPF$FILE_INT.FLUSH_LOB",
    kupfxGetBlkBufSizes="kernel utility datapump file manager KUPF$FILE_INT.GET_BLKBUF_SIZES",
    kupfxGetDebugEvent="kernel utility datapump file manager KUPF$FILE_INT.GET_DEBUG_EVENT",
    kupfxGetDefCredential="kernel utility datapump file manager KUPF$FILE_INT.GET_DEFAULT_CREDENTIAL",
    kupfxGetDefFileName="kernel utility datapump file manager KUPF$FILE_INT.GET_DEFAULT_FILENAME",
    kupfxGetFmtTime="kernel utility datapump file manager KUPF$FILE_INT.GET_FORMATTED_TIME",
    kupfxGetFullFileName="kernel utility datapump file manager KUPF$FILE_INT.GET_FULL_FILENAME",
    kupfxGetMaxCswidth="kernel utility datapump file manager KUPF$FILE_INT.GET_MAX_CSWIDTH",
    kupfxGetObfPwd="kernel utility datapump file manager KUPF$FILE_INT.GTOP",
    kupfxInit="kernel utility datapump file manager KUPF$FILE_INT.INIT",
    kupfxInitDfi="kernel utility datapump file manager KUPF$FILE_INT.INIT KUPF$FILE_INT.INIT",
    kupfxIsDmpRestFile="kernel utility datapump file manager KUPF$FILE_INT.IS_DUMPFILE_A_RESTFILE",
    kupfxOpenCtx="kernel utility datapump file manager KUPF$FILE_INT.OPEN_CONTEXT",
    kupfxParseFileName="kernel utility datapump file manager KUPF$FILE_INT.PARSE_FILENAME",
    kupfxReadLob="kernel utility datapump file manager KUPF$FILE_INT.READ_LOB",
    kupfxRelFiles="kernel utility datapump file manager KUPF$FILE_INT.RELEASE_FILES",
    kupfxSetDebug="kernel utility datapump file manager KUPF$FILE_INT.SET_DEBUG",
    kupfxSetTransParams="kernel utility datapump file manager KUPF$FILE_INT.SET_TRANS_PARAMS",
    kupfxTerm="kernel utility datapump file manager KUPF$FILE_INT.TERM",
    kupfxVerKeyInfo="kernel utility datapump file manager KUPF$FILE_INT.VERIFY_KEY_INFO",
    kupfxWriteLob="kernel utility datapump file manager KUPF$FILE_INT.WRITE_LOB",
    kupm="kernel utility datapump master control process",
    kupmuar="kernel utility datapump master control process KUPU$UTILITIES_INT.WRITEAUDITRECORD",
    kuppchus="kernel utility datapump KUPP$PROC.CHANGE_USER_INT",
    kuppcki="kernel utility datapump KUPP$PROC.CHECK_FOR_INTERRUPT",
    kuppcrmp="kernel utility datapump KUPP$PROC.CREATE_MASTER_PROCESS_INT",
    kuppcrwpr="kernel utility datapump KUPP$PROC.CREATE_WORKER_INT",
    kuppcws="kernel utility datapump KUPP$PROC.CHECK_WORKER_STATUS_INT",
    kuppdewp="kernel utility datapump KUPP$PROC.DELETE_WORKER_PROCESSES_INT",
    kuppetact="kernel utility datapump KUPP$PROC.WORKER_EXTTBL_ACTIVE",
    kuppetina="kernel utility datapump KUPP$PROC.WORKER_EXTTBL_INACTIVE",
    kuppetn="kernel utility datapump KUPP$PROC.WORKER_EXTTBL_FULLNAME",
    kuppgedf="kernel utility datapump KUPP$PROC.GET_EVENT_DEBUG_FLAGS",
    kuppgnls="kernel utility datapump KUPP$PROC.GET_NLS_ALTER_SESSION",
    kuppgwe="kernel utility datapump KUPP$PROC.GET_WORKER_EXCEPTION",
    kuppindn="kernel utility datapump KUPP$PROC.INIT_DONE",
    kuppja="kernel utility datapump KUPP$PROC.JOB_ALIVE_INT",
    kuppkwp="kernel utility datapump KUPP$PROC.KILL_WORKER",
    kuppopten="kernel utility datapump KUPP$PROC.OPTION_ENABLED_CALLOUT",
    kuppsdbg="kernel utility datapump KUPP$PROC.SET_DEBUG_INT",
    kuppsecld="kernel utility datapump KUPP$PROC.SEC_TT_LOADED",
    kuppsecul="kernel utility datapump KUPP$PROC.SEC_TT_UNLOADED",
    kuppsip="kernel utility datapump KUPP$PROC.SHUTDOWN_IN_PROGRESS_INT",
    kuppsrw="kernel utility datapump KUPP$PROC.SET_REMOTE_WORKER_INT",
    kupptwa="kernel utility datapump KUPP$PROC.TOTAL_WORKERS_ALIVE",
    kuppwami="kernel utility datapump KUPP$PROC.WHAT_AM_I_INT",
    kuppwmid="kernel utility datapump KUPP$PROC.WHATS_MY_ID_INT",
    kuppwmnm="kernel utility datapump KUPP$PROC.WHATS_MY_NAME_INT",
    kuppwop="kernel utility datapump KUPP$PROC.WHAT_ORACLE_PRODUCT",
    kuppwpi="kernel utility datapump KUPP$PROC.WORKER_PROCESS_INIT_INT",
    kuppwsi="kernel utility datapump KUPP$PROC.WORKER_SERVICE_INIT_INT",
    kupux10gLogonAllowed="kernel utility datapump KUPU$UTILITIES_INT.TEN_G_LOGON_ALLOWED",
    kupuxCreateDir="kernel utility datapump KUPU$UTILITIES_INT.CREATE_DIRECTORY",
    kupuxDecode="kernel utility datapump KUPU$UTILITIES_INT.DECODE",
    kupuxDHChkDigests="kernel utility datapump KUPU$UTILITIES_INT.DH_CHECK_DIGESTS",
    kupuxDHDecrypt="kernel utility datapump KUPU$UTILITIES_INT.DH_DECRYPT",
    kupuxDHEncrypt="kernel utility datapump KUPU$UTILITIES_INT.DH_ENCRYPT",
    kupuxDHFreeHandle="kernel utility datapump KUPU$UTILITIES_INT.DH_FREE_HANDLE",
    kupuxDHGenShrKey="kernel utility datapump KUPU$UTILITIES_INT.DH_GEN_SHARED_KEY",
    kupuxDHGetPubKey="kernel utility datapump KUPU$UTILITIES_INT.DH_GET_PUBLIC_KEY",
    kupuxDHNewHandle="kernel utility datapump KUPU$UTILITIES_INT.DH_NEW_HANDLE",
    kupuxDirScan="kernel utility datapump KUPU$UTILITIES_INT.DIRECTORY_SCAN_INT",
    kupuxEncode="kernel utility datapump KUPU$UTILITIES_INT.ENCODE",
    kupuxIsSuperset="kernel utility datapump KUPU$UTILITIES_INT.IS_SUPERSET_INT",
    kupv="kernel utility datapump fixed table",
    kupvcrat="kernel utility datapump fixed table KUPV$FT_INT.CREATE_ATTACH_ENTRY",
    kupvcrjb="kernel utility datapump fixed table KUPV$FT_INT.CREATE_JOB_ENTRY",
    kupvdlat="kernel utility datapump fixed table KUPV$FT_INT.DELETE_ATTACH_ENTRY",
    kupvdljb="kernel utility datapump fixed table KUPV$FT_INT.DELETE_JOB_ENTRY",
    kupvgtet="kernel utility datapump fixed table KUPV$FT_INT.GET_ERROR_TEXT",
    kupvisfe="kernel utility datapump fixed table KUPV$FT_INT.FATAL_ERROR",
    kupvupjb="kernel utility datapump fixed table KUPV$FT_INT.UPDATE_JOB_ENTRY",
    kuxCompare="kernel utility UTL_XML.COMPARE",
    kuxgetDDLSrcFromXML="kernel utility UTL_XML.GETDDLSRCFROMXML",
    kuxgetFdo="kernel utility UTL_XML.KUX$_GETFDO",
    kuxgetHashCode="kernel utility UTL_XML.GETHASHCODE",
    kuxgetNextTypeid="kernel utility UTL_XML.GETNEXTTYPEID",
    kuxHasTstz="kernel utility UTL_XML.HASTSTZ",
    kuxisnameomf="kernel utility UTL_XML.ISNAMEOMF",
    kuxLong2Clob="kernel utility UTL_XML.KUX$_LONG2CLOB",
    kuxmlClean="kernel utility UTL_XML.XMLCLEAN",
    kuxmlDumpCtxs="kernel utility UTL_XML.XMLDUMPCTXS",
    kuxmlInit="kernel utility UTL_XML.XMLINIT",
    kuxmlParseClob="kernel utility UTL_XML.XMLPARSE",
    kuxmlParseURI="kernel utility UTL_XML.XMLPARSE",
    kuxmlSetMemDebug="kernel utility UTL_XML.XMLSETMEMDEBUG_INT",
    kuxmlSetParseFlag="kernel utility UTL_XML.XMLSETPARSEFLAG",
    kuxParseExpr="kernel utility UTL_XML.PARSEEXPR",
    kuxParseQuery="kernel utility UTL_XML.PARSEQUERY",
    kuxsetXmlTransformEngine="kernel utility UTL_XML.SETXMLTRANSFORMENGINE",
    kuxslLoadFromFile="kernel utility UTL_XML.XSLLOADFROMFILE",
    kuxslResetParams="kernel utility UTL_XML.XSLRESETPARAMS",
    kuxslSetParam="kernel utility UTL_XML.XSLSETPARAM",
    kuxslTransformCtoC="kernel utility UTL_XML.XSLTRANSFORM",
    kuxslTransformCtoX="kernel utility UTL_XML.XSLTRANSFORMCTOX",
    kuxslTransformXtoX="kernel utility UTL_XML.XSLTRANSFORMXTOC",
    kuxsscFind="kernel utility UTL_XML.SSCFIND",
    kuxsscGetCtx="kernel utility UTL_XML.SSCGETCTX",
    kuxsscMinimizeCache="kernel utility UTL_XML.SSCMINIMIZECACHE",
    kuxsscParse="kernel utility UTL_XML.SSCPARSE",
    kuxsscPurge="kernel utility UTL_XML.SSCPURGE",
    kuxsscSetDebug="kernel utility UTL_XML.SSCSETDEBUG_INT",
    kuxtypeHashCodeEq="kernel utility UTL_XML.TYPEHASHCODEEQ",
    kuxWindows32="kernel utility UTL_XML.WINDOWS32",
    kuz="kernel utility security (orapw utility)",
    kv="kernel performance",
    kvi="kernel performance information tables",
    kwq="kernel advanced queuing",
    kwqa="kernel advanced queuing administration",
    kwqaAnalyzeMC="kernel advanced queuing administration DBMS_AQADM_SYSCALLS.KWQA_3GL_ANALYZE_MSG_CACHE",
    kwqaCalculateMC="kernel advanced queuing administration DBMS_AQADM_SYSCALLS.KWQA_3GL_CALCULATE_MSG_CACHE",
    kwqadrpq="kernel advanced queuing administration drop queue",
    kwqaGetMaxStreamspool="kernel advanced queuing administration DBMS_AQADM_SYSCALLS.GET_MAX_STREAMS_POOL",
    kwqaGetMinStreamspool="kernel advanced queuing administration DBMS_AQADM_SYSCALLS.GET_MIN_STREAMS_POOL",
    kwqaGetPassword="kernel advanced queuing administration DBMS_PRVTAQIP.KWQA_3GL_GETPASSWORD",
    kwqaIsLsby="kernel advanced queuing administration DBMS_AQADM_SYSCALLS.IS_LOGICAL_STBY",
    kwqaIsOggDest="kernel advanced queuing administration DBMS_AQADM_SYSCALLS.IS_OGG_DEST",
    kwqaIsOggSrc="kernel advanced queuing administration DBMS_AQADM_SYSCALLS.IS_OGG_SRC",
    kwqaIsPri="kernel advanced queuing administration DBMS_AQADM_SYSCALLS.IS_PRIMARY",
    kwqaSetMaxStreamspool="kernel advanced queuing administration DBMS_AQADM_SYSCALLS.SET_MAX_STREAMS_POOL",
    kwqaSetMinStreamspool="kernel advanced queuing administration DBMS_AQADM_SYSCALLS.SET_MIN_STREAMS_POOL",
    kwqaStopMsgForwarding="kernel advanced queuing administration DBMS_AQADM_SYSCALLS.KWQA_3GL_STOP_MSG_FORWARDING",
    kwqd="kernel advanced queuing dequeue",
    kwqi="kernel advanced queuing internal/plsql trusted callouts",
    kwqiadtdeq="kernel advanced queuing internal/plsql trusted callouts DBMS_AQ.DEQUEUE",
    kwqiadtenq="kernel advanced queuing internal/plsql trusted callouts DBMS_AQ.ENQUEUE",
    kwqiautoplsreg="kernel advanced queuing internal/plsql trusted callouts DBMS_AQ.CREATE_DEQUEUE_JOB",
    kwqiautoplsstart="kernel advanced queuing internal/plsql trusted callouts DBMS_AQ.ENABLE_DEQUEUE_JOB",
    kwqiautoplsstop="kernel advanced queuing internal/plsql trusted callouts DMBS_AQ.DISABLE_DEQUEUE_JOB",
    kwqiautoplsunreg="kernel advanced queuing internal/plsql trusted callouts DBMS_AQ.DROP_DEQUEUE_JOB",
    kwqic="kernel advanced queuing internal/plsql trusted callouts pre-12c notitication",
    kwqicdelrow="kernel advanced queuing internal/plsql trusted callouts pre-12c notitication delete row from queue table",
    kwqicgpc="kernel advanced queuing internal/plsql trusted callouts pre-12c notitication common get parsed cursor",
    kwqicgtoid="kernel advanced queuing internal/plsql trusted callouts pre-12c notitication internal common get TOID",
    kwqichkopt="kernel advanced queuing internal/plsql trusted callouts pre-12c notitication DBMS_AQADM_SYS.CHECKOPTION",
    kwqicRepBgOper="kernel advanced queuing internal/plsql trusted callouts pre-12c notitication DBMS_AQ.AQ$_BACKGROUND_OPER_INT",
    kwqid="kernel advanced queuing internal/plsql trusted callouts dequeue",
    kwqideqarr="kernel advanced queuing internal/plsql trusted callouts dequeue DBMS_AQ.DEQUEUE_ARRAY",
    kwqideqarr0="kernel advanced queuing internal/plsql trusted callouts dequeue DBMS_AQ.DEQUEUE_ARRAY 0",
    kwqidx81deq="kernel advanced queuing internal/plsql trusted callouts dequeue DBMS_AQIN.AQ$_DEQUEUE_IN",
    kwqidxdeq101="kernel advanced queuing internal/plsql trusted callouts dequeue DBMS_AQ.AQ$_DEQUEUE version 10.1",
    kwqidxdeq102="kernel advanced queuing internal/plsql trusted callouts dequeue DBMS_AQ.AQ$_DEQUEUE version 10.2",
    kwqidxdeq92="kernel advanced queuing internal/plsql trusted callouts dequeue DBMS_AQ.AQ$_DEQUEUE version 9.2",
    kwqidxdeqin="kernel advanced queuing internal/plsql trusted callouts dequeue DBMS_AQIN.AQ$_DEQUEUE_IN",
    kwqidxdeqin102="kernel advanced queuing internal/plsql trusted callouts dequeue DBMS_AQIN.AQ$_DEQUEUE_IN version 10.2",
    kwqie="kernel advanced queuing internal/plsql trusted callouts enqueue",
    kwqienqarr="kernel advanced queuing internal/plsql trusted callouts enqueue DBMS_AQ.ENQUEUE_ARRAY",
    kwqienqarr0="kernel advanced queuing internal/plsql trusted callouts enqueue DBMS_AQ.ENQUEUE_ARRAY (in library DBMS_AQ_LIB)",
    kwqiexenqueue="kernel advanced queuing internal/plsql trusted callouts enqueue DBMS_AQ.AQ$_ENQUEUE",
    kwqigetdeqsort="kernel advanced queuing internal/plsql trusted callouts DBMS_AQIN.GET_DEQ_SORT_IN",
    kwqigretry="kernel advanced queuing internal/plsql trusted callouts DBMS_AQIN.GET_MULTI_RETRY_IN",
    kwqigtusrforagnt="kernel advanced queuing internal/plsql trusted callouts DBMS_AQJMS_INTERNAL.GET_DB_USERNAME_FOR_AGENT",
    kwqijaddsub="kernel advanced queuing internal/plsql trusted callouts DBMS_AQJMS.AQ$_ADD_SUBSCRIBER_INT",
    kwqijaltsub="kernel advanced queuing internal/plsql trusted callouts DMBS_AQJMS.AQ$_ALTER_SUBSCRIBER",
    kwqijexenq="kernel advanced queuing internal/plsql trusted callouts DBMS_AQIN.AQ$_ENQUEUE_RAW",
    kwqijlisten="kernel advanced queuing internal/plsql trusted callouts DBMS_AQIN.AQ$_LISTEN",
    kwqijopdxdeq="kernel advanced queuing internal/plsql trusted callouts DBMS_AQIN.AQ$_DEQUEUE_IN",
    kwqijopdxdeq102="kernel advanced queuing internal/plsql trusted callouts DBMS_AQIN.AQ$_DEQUEUE_IN version 10.2",
    kwqijopenq="kernel advanced queuing internal/plsql trusted callouts DBMS_AQIN.AQ$_ENQUEUE_OBJ",
    kwqijops="kernel advanced queuing internal/plsql trusted callouts DBMS_AQJMS.AQ$_REGOPS",
    kwqijremsub="kernel advanced queuing internal/plsql trusted callouts DBMS_AQJMS.AQ$_REMOVE_SUBSCRIBER_INT",
    kwqilisten="kernel advanced queuing internal/plsql trusted callouts DBMS_AQ.LISTEN",
    kwqinrexenq="kernel advanced queuing internal/plsql trusted callouts DBMS_AQIN.AQ$_ENQUEUE_OBJ_NO_RECPL",
    kwqinrjopenq="kernel advanced queuing internal/plsql trusted callouts DBMS_AQIN.AQ$_ENQUEUE_OBJ_NO_RECPL",
    kwqiopqdeq="kernel advanced queuing internal/plsql trusted callouts DBMS_AQ.DEQUEUE",
    kwqiopqenq="kernel advanced queuing internal/plsql trusted callouts DBMS_AQ.ENQUEUE",
    kwqiplspost="kernel advanced queuing internal/plsql trusted callouts DBMS_AQ.POST",
    kwqiplsreg="kernel advanced queuing internal/plsql trusted callouts DBMS_AQ.REGISTER",
    kwqiplsunreg="kernel advanced queuing internal/plsql trusted callouts DBMS_AQ.UNREGISTER",
    kwqisetdeqsort="kernel advanced queuing internal/plsql trusted callouts DBMS_AQIN.SET_DEQ_SORT_IN",
    kwqisretry="kernel advanced queuing internal/plsql trusted callouts DBMS_AQIN.SET_MULTI_RETRY_IN",
    kwqit="kernel advanced queuing internal/plsql trusted callouts time manager",
    kwqitmmit="kernel advanced queuing internal/plsql trusted callouts time manager calback function which processes tables",
    kwqitmmsgs="kernel advanced queuing internal/plsql trusted callouts time manager messages",
    kwqitnmptme="kernel advanced queuing internal/plsql trusted callouts time manager newstyle multiconsumer queues",
    kwqitptm="kernel advanced queuing internal/plsql trusted callouts time manager perform time management",
    kwqj="kernel advanced queuing job queue scheduler for propagation",
    kwqm="kernel advanced queuing multiconsumer queue IOT support",
    kwqmn="kernel advanced queuing multiconsumer queue IOT support time manager",
    kwqmnslv="kernel advanced queuing multiconsumer queue IOT support time manager slave callback called by ksvrdp",
    kwqmnstslv="kernel advanced queuing multiconsumer queue IOT support time manager start AQ slave process",
    kwqmstmgr="kernel advanced queuing multiconsumer queue IOT support scan time manager entries",
    kwqn="kernel advanced queuing queue notifier",
    kwqngetfrommail="kernel advanced queuing queue notifier DBMS_AQELM.GET_SENDFROM",
    kwqngethostmail="kernel advanced queuing queue notifier DBMS_AQELM.GET_MAILHOST",
    kwqngetportmail="kernel advanced queuing queue notifier DBMS_AQELM.GET_MAILPORT",
    kwqngetproxy="kernel advanced queuing queue notifier DBMS_AQELM.GET_PROXY",
    kwqngettxtimeout="kernel advanced queuing queue notifier DBMS_AQELM.GET_TXTIMEOUT",
    kwqnsetfrommail="kernel advanced queuing queue notifier DBMS_AQELM.SET_SENDFROM",
    kwqnsethostmail="kernel advanced queuing queue notifier DBMS_AQELM.SET_MAILHOST",
    kwqnsetportmail="kernel advanced queuing queue notifier DBMS_AQELM.SET_MAILPORT",
    kwqnsetproxy="kernel advanced queuing queue notifier DBMS_AQELM.SET_PROXY",
    kwqo="kernel advanced queuing insttype checking options",
    kwqp="kernel advanced queuing queueing propagation",
    kwqs="kernel advanced queuing statistics handling",
    kwqu="kernel advanced queuing lob data",
    kwqvdsvc="kernel advanced queuing drop service",
    kwqx="kernel advanced queuing transformations",
    kwqxcreate="kernel advanced queuing transformations DBMS_TRANSFORMATION_INTERNAL.I_CREATE_TRANSFORMATION",
    kwqxdelete="kernel advanced queuing transformations DBMS_TRANSFORMATION_INTERNAL.I_DROP_TRANSFORMATION",
    kwqxEvalTrans="kernel advanced queuing transformations DBMS_TRANSFORMATION_INTERNAL.COMPUTE_TRANSFORMATION",
    kwqxmodify="kernel advanced queuing transformations DBMS_TRANSFORMATION_INTERNAL.I_MODIFY_TRANSFORMATION",
    kwrc="kernel rules engine evaluation(?)",
    kwre="kernel rules engine evaluation(?)",
    kwrsrcb="kernel ??",
    kws="kernel streams advanced queuing",
    kwsbg="kernel streams advanced queuing background",
    kwsbgshms="kernel streams advanced queuing background shutdown masters (AQ process coordinator)",
    kwsbit="kernel streams advanced queuing time manager for sharded queue",
    kwsbjc="kernel streams advanced queuing time manager for sharded queue",
    kwsbsm="kernel streams advanced queuing background",
    kwsbtm="kernel streams advanced queuing time manager for sharded queue",
    kwscb="kernel streams advanced queuing message cache",
    kwscp="kernel streams advanced queuing cross process",
    kwsdqwm="kernel streams advanced queuing message cache",
    kwsipc="kernel streams advanced queuing cross process",
    kwsiRawDqCalout="kernel streams advanced queuing DBMS_AQ.DEQUEUE",
    kwslb="kernel streams advanced queuing load balancer",
    kwsmb="kernel streams advanced queuing message cache",
    kwsmc="kernel streams advanced queuing message cache",
    kwsmsg="kernel streams advanced queuing message cache",
    kwsnsm="kernel streams advanced queuing subscription",
    kwspt="kernel streams advanced queuing partitioning",
    kwssa="kernel streams advanced queuing subscription",
    kwssb="kernel streams advanced queuing message cache",
    kwssh="kernel streams advanced queuing message cache",
    kwssi="kernel streams advanced queuing subscription",
    kx="kernel execution",
    kxc="kernel execution constraints",
    kxcb="kernel execution constraints backup",
    kxcc="kernel execution constraints catch all",
    kxcs="kernel execution constraints sql statements",
    kxcsnn="kernel execution constraints sql statements signal a not null constraint violation",
    kxd="kernel execution exadata modules",
    kxdam="kernel execution exadata modules disk auto manage",
    kxdbc="kernel execution exadata modules backup compression for backup appliance",
    kxdbio="kernel execution exadata modules block level intelligent operations",
    kxdcm="kernel execution exadata modules metrics fixed table callbacks",
    kxdofl="kernel execution exadata modules offload",
    kxdr="kernel execution exadata modules DML driver entrypoint",
    kxdrs="kernel execution exadata modules DML driver entrypoint resilvering layer",
    kxf="kernel execution parallel query",
    kxfc="kernel execution parallel query coordinator",
    kxfp="kernel execution parallel query process and queue manager",
    kxfpb="kernel execution parallel query process and queue manager buffers",
    kxfpbgpc="kernel execution parallel query process and queue manager buffers get permanent chunks",
    kxfpbgtc="kernel execution parallel query process and queue manager buffers buffer allocation get chunk",
    kxfpclinfo="kernel execution parallel query process and queue manager get load info from instances",
    kxfpcrel="kernel execution parallel query process and queue manager create local query server process",
    kxfpg1sg="kernel execution parallel query process and queue manager get one server group",
    kxfpGetTotalCpuCount="kernel execution parallel query process and queue manager get cpu counts for parallel sql profile recommendation",
    kxfpgsg="kernel execution parallel query process and queue manager get server group (coordinator)",
    kxfpi="kernel execution parallel query process and queue manager instance",
    kxfpiinfo="kernel execution parallel query process and queue manager instance info; get information from instances",
    kxfpldbl="kernel execution parallel query process and queue manager loadbalancing",
    kxfpnfy="kernel execution parallel query process and queue manager notify",
    kxfpProcessError="kernel execution parallel query process and queue manager process error",
    kxfpqdqr="kernel execution parallel query process and queue manager Queue DeQueue queue Reference",
    kxfpqidqr="kernel execution parallel query process and queue manager Queue Internal DeQueue queue Reference",
    kxfpqput="kernel execution parallel query process and queue manager put qb buffer back (create partial)",
    kxfpqrfdb="kernel execution parallel query process and queue manager Queue ref free dequeued buffer",
    kxfpqrsod="kernel execution parallel query process and queue manager queue ref state object delete",
    kxfpqsod="kernel execution parallel query process and queue manager queue state object delete",
    kxfpqsrls="kernel execution parallel query process and queue manager slave release",
    kxfprdp="kernel execution parallel query process and queue manager run detached process",
    kxfprienq="kernel execution parallel query process and queue manager Queue ref internal enqueue message",
    kxfprifdb="kernel execution parallel query process and queue manager Queue ref internal free dequeued buffer",
    kxfq="kernel execution parallel query table queues",
    kxfqira="kernel execution parallel query table queues initialize a TQ range",
    kxfqupp="kernel execution parallel query table queues unpack message and put in sort buffer",
    kxfr="kernel execution parallel query granules",
    kxfrAllocSlaves="kernel execution parallel query granules allocate slaves",
    kxfralo="kernel execution parallel query granules allocate rowid ranges and slave processes",
    kxfrDefaultDOP="kernel execution parallel query granules calculate default DOP",
    kxfs="kernel execution parallel query slave",
    kxft="kernel execution parallel query parallel execution PTL",
    kxftaskload="kernel execution parallel query parallel execution PTL this is the load callback that is called for by qerfxFetch to get ...",
    kxfx="kernel execution parallel query execution",
    kxfxcp="kernel execution parallel query execution client side (qc) interface",
    kxfxcw="kernel execution parallel query execution kxfxrytab yields the (greatest) reply type expected from a",
    kxfxgs="kernel execution parallel query execution get start",
    kxfxmai="kernel execution parallel query execution slave process main entry point",
    kxfxq="kernel execution parallel query execution queueing",
    kxfxse="kernel execution parallel query execution execute",
    kxfxsExecute="kernel execution parallel query execution slave execute",
    kxfxsp="kernel execution parallel query execution open, parse, bind entire DFO",
    kxfxsStmtExecute="kernel execution parallel query execution statement execute",
    kxh="kernel execution hash join",
    kxhf="kernel execution hash join support for hash join and memory management",
    kxhrUnpack="kernel execution hash join unpack a row",
    kxib="kernel execution index buffering operations",
    kxibDoFinish="kernel execution index buffering operations do finish processing for a specified index",
    kxibFinish="kernel execution index buffering operations finish index maintenance processing",
    kxpar="kernel execution partition row sources",
    kxrd="kernel execution row delete",
    kxru="kernel execution row update",
    kxs="kernel execution shared cursor",
    kxsbnddmp="kernel execution shared cursor bind variable dump. master routine per bind for providing bind info in sql trace files.",
    kxsbndinf="kernel execution shared cursor bind variable information. provides actual bind data in sql trace files.",
    kxscln="kernel execution shared cursor cleanup instantiation object",
    kxscls="kernel execution shared cursor close",
    kxsclsr="kernel execution shared cursor close remote",
    kxsDiag8711391="kernel execution shared cursor Check for bug 8711391 (cursor lock user session state object deleted before close of the cursors)",
    KXSDUMP="kernel execution shared cursor ??",
    kxsfbb="kernel execution shared cursor free bind buffers(?)",
    kxsffir="kernel execution shared cursor function fire called when the appropriate heap is going away",
    kxsGetRuntimeLock="kernel execution shared cursor get runtime lock",
    kxsOpenACursor="kernel execution shared cursor open a cursor (local in PGA)",
    kxspoac="kernel execution shared cursor put oacdef into the cursor instantiation",
    kxsSsa="kernel execution shared cursor session state array(?)",
    kxsSsaSetSqlid="kernel execution shared cursor session state array(?) prepare to update X$SUSE with sqlid, updateallssa performs this",
    kxsSsaUpdateAllssa="kernel execution shared cursor session state array(?) update all session state array (X$KSUSE)",
    kxst="kernel execution shared cursor sql trace",
    kxstcls="kernel execution shared cursor sql trace trace cursor closing",
    kxstcol="kernel execution shared cursor sql trace collect. provide parse, execute and fetch statistics.",
    kxstcol2="kernel execution shared cursor sql trace collect. provide parse, execute and fetch statistics. for LOB types",
    kxstper="kernel execution shared cursor sql trace process error",
    kxstsql="kernel execution shared cursor sql trace sql processing. provide SQL information",
    kxstTraceBinds="kernel execution shared cursor sql trace bind variable",
    kxstTraceClose="kernel execution shared cursor sql trace close tracefile",
    kxstTraceWait="kernel execution shared cursor sql trace provide wait information",
    kxtex1="kernel execution execute trigger",
    kxti="kernel execution trigger",
    kxtiget="kernel execution trigger ??",
    kxtivwt="kernel execution trigger view with active trigger for current ML",
    kxto="kernel execution trigger",
    kxtr="kernel execution trigger",
    kxtt="kernel execution temporary table operations",
    kxttClnUp="kernel execution temporary table operations clean up state object",
    kxwph="kernel execution table/tabpart/cluster segment attribute management",
    kywmabtpln="kernel DBMS_WLM.IABORT_WLMPLAN",
    kywmadclsfr="kernel DBMS_WLM.IADD_WLMCLASSIFIERS",
    kywmchkpln="kernel DBMS_WLM.ICHECK_WLMPLAN",
    kywmchkrmenable="kernel DBMS_WLM.ICHECK_RM_ENABLE",
    kywmchkrmisoff="kernel DBMS_WLM.ICHECK_RM_ISOFF",
    kywmchkrmplan="kernel DBMS_WLM.ICHECK_RM_PLAN",
    kywmcrtpln="kernel DBMS_WLM.ICREATE_PLAN",
    kywmdelpln="kernel DBMS_WLM.IDELETE_WLMPLAN",
    kywmgetcdbsetting="kernel DBMS_WLM.IGET_CDB_SETTING",
    kywmgetdbinfo="kernel DBMS_WLM.IGET_DB_INFO",
    kywmgetpomultiplier="kernel DBMS_WLM.IGET_PO_MULTIPLIER",
    kywmisetpdbrmplan="kernel DBMS_WLM.ISET_PDB_RM_PLAN",
    kywmsbmtpc="kernel DBMS_WLM.ISUBMIT_WLMPCS",
    kywmsbmtpcinfo="kernel DBMS_WLM.ISUBMIT_WLMPCS DBMS_WLM.ISUBMIT_WLMPCINFO",
    kywmsbmtpln="kernel DBMS_WLM.ISUBMIT_WLMPLAN",
    kywmsetdbidbmap="kernel DBMS_WLM.ISET_DBI_DBMAP",
    kywmsetdbirmplan="kernel DBMS_WLM.ISET_DBI_RM_PLAN",
    kywmsetdbmap="kernel DBMS_WLM.ISET_DBMAP",
    kywmsetrmplan="kernel DBMS_WLM.ISET_RM_PLAN",
    kywmupcggrpmap="kernel DBMS_WLM.IUPDATE_CG_MAPS",
    kywmupcgmaps="kernel DBMS_WLM.IUP_CG_MAPS",
    kywmuppdbcgmap="kernel DBMS_WLM.IUPDATE_PDBCG_MAPS",
    kz="kernel security",
    kza="kernel security audit",
    kzang="kernel security audit next generation",
    kzangins="kernel security audit next generation insert record",
    kzap="kernel security audit policy",
    kzapicsp="kernel security audit policy DBMS_ZHELP_IR.CHECK_SYS_PRIV",
    kzar="kernel security audit application",
    kzc="kernel security Code-Based Access Control",
    kzcicrStatsDecryptNum="kernel security Code-Based Access Control DBMS_CRYPTO_INTERNAL.STATS_DECRYPT_NUM_CALLOUT",
    kzcicrStatsDecryptRaw="kernel security Code-Based Access Control DBMS_CRYPTO_INTERNAL.STATS_DECRYPT_RAW_CALLOUT",
    kzcicrStatsEncryptNum="kernel security Code-Based Access Control DBMS_CRYPTO_INTERNAL.STATS_ENCRYPT_NUM_CALLOUT",
    kzcicrStatsEncryptRaw="kernel security Code-Based Access Control DBMS_CRYPTO_INTERNAL.STATS_ENCRYPT_RAW_CALLOUT",
    kzcicrUpdateSensitiveStats="kernel security Code-Based Access Control DBMS_CRYPTO_INTERNAL.UPDATESENSITIVESTATS",
    kzck="kernel security Code-Based Access Control encryption support",
    kzctx="kernel security Code-Based Access Control context routines",
    kzctxcdbli="kernel security Code-Based Access Control context routines construct DB link info",
    kzctxecc="kernel security Code-Based Access Control context routines DBMS_SESSION.KZCTXECC CLEAR_CONTEXT",
    kzctxecc1="kernel security Code-Based Access Control context routines DBMS_SESSION.KZCTXECC CLEAR_CONTEXT DBMS_SESSION.KZCTXECC1 CLEAR_ALL_CONTEXT",
    kzctxesc="kernel security Code-Based Access Control context routines DBMS_SESSION.KZCTXESC SET_CONTEXT",
    kzctxg="kernel security Code-Based Access Control context routines global_context",
    kzctxgci="kernel security Code-Based Access Control context routines global_context DBMS_SESSION.KZCTXGCI CLEAR_IDENTIFIER",
    kzctxgsi="kernel security Code-Based Access Control context routines global_context DBMS_SESSION.KZCTXGSI SET_IDENTIFIER",
    kzctxscv="kernel security Code-Based Access Control context routines set context value",
    kzd="kernel security dictionary access support",
    kzdopcl="kernel security dictionary access support object privileges check routines?",
    kzdpcrd="kernel security dictionary access support DBMS_TDE_TOOLKIT_FFI.DATAPUMP_DECRYPT",
    kzdpcre="kernel security dictionary access support DBMS_TDE_TOOLKIT_FFI.DATAPUMP_ENCRYPT",
    kzdpepadp="kernel security dictionary access support DBMS_TDSP_PROTECT.ASSOCIATE_POLICY",
    kzdpepalp="kernel security dictionary access support DBMS_TDSP_PROTECT.INTERNAL_ALTER_POLICY",
    kzdpepapo="kernel security dictionary access support DBMS_TDSP_PROTECT.INTERNAL_ADD_POLICY",
    kzdpepdpc="kernel security dictionary access support DBMS_TDSP_PROTECT.DISABLE_PROTECTION_COLUMN",
    kzdpepdpo="kernel security dictionary access support DBMS_TDSP_PROTECT.DROP_POLICY",
    kzdpepdps="kernel security dictionary access support DBMS_TDSP_PROTECT.DISABLE_PROTECTION_SOURCE",
    kzdpepdpt="kernel security dictionary access support DBMS_TDSP_PROTECT.DISABLE_PROTECTION_TYPE",
    kzdpepdsp="kernel security dictionary access support DBMS_TDSP_PROTECT.INTERNAL_DROP_POLICY",
    kzdpepepc="kernel security dictionary access support DBMS_TDSP_PROTECT.ENABLE_PROTECTION_COLUMN",
    kzdpepeps="kernel security dictionary access support DBMS_TDSP_PROTECT.ENABLE_PROTECTION_SOURCE",
    kzdpepept="kernel security dictionary access support DBMS_TDSP_PROTECT.ENABLE_PROTECTION_TYPE",
    kzdpmpalc="kernel security dictionary access support DBMS_TDSP_MANAGE.ALTER_SENSITIVE_COLUMN",
    kzdpmpasc="kernel security dictionary access support DBMS_TDSP_MANAGE.ADD_SENSITIVE_COLUMN",
    kzdpmpast="kernel security dictionary access support DBMS_TDSP_MANAGE.ADD_SENSITIVE_TYPE",
    kzdpmpdst="kernel security dictionary access support DBMS_TDSP_MANAGE.DROP_SENSITIVE_TYPE",
    kzdpmpdts="kernel security dictionary access support DBMS_TDSP_MANAGE.DROP_SENSITIVE_TYPE_SOURCE",
    kzdpmpidx="kernel security dictionary access support DBMS_TDSP_MANAGE.INT_IMPORT_DISCOVERY_RESULT",
    kzdpmpist="kernel security dictionary access support DBMS_TDSP_MANAGE.INT_IMPORT_SENSITIVE_TYPES",
    kzdpmprco="kernel security dictionary access support DBMS_TDSP_MANAGE.DROP_SENSITIVE_COLUMN",
    kzdpmprscs="kernel security dictionary access support DBMS_TDSP_MANAGE.REMOVE_DISCOVERY_RESULT",
    kzekmaptkp="kernel security DBMS_TTS.ADD_PROTECTED_CE_TAB_KEY_INT",
    kzekmgptkp="kernel security DBMS_TTS.GET_PROTECTED_CE_TAB_KEY_INT",
    kzfa="kernel security fine grained auditing",
    kzfaadp="kernel security fine grained auditing DBMS_FGA.ADD_POLICY",
    kzfadrp="kernel security fine grained auditing DBMS_FGA.DROP_POLICY",
    kzfaenp="kernel security fine grained auditing DBMS_FGA.ENABLE_POLICY, DISABLE_POLICY",
    kzft="kernel security fine grained auditing",
    kzia="kernel security identification and authentication",
    kziaia="kernel security identification and authentication main identification and authentication function",
    kziavua="kernel security identification and authentication ??",
    kzl="kernel security label",
    kzld="kernel security label ldap",
    kzlg="kernel security label generic directory services integration",
    kzp="kernel security privileges",
    kzpcaobb="kernel security privileges check for access on object using object",
    kzpchkbu="kernel security privileges check for privileges",
    kzpchkc="kernel security privileges check privileges on a object cyclic",
    kzppCapturePLSQL="kernel security privileges DBMS_PRIVILEGE_CAPTURE.CAPTURE_DEPENDENCY_PRIVS",
    kzppCreateCapture="kernel security privileges DBMS_PRIVILEGE_CAPTURE.CREATE_CAPTURE",
    kzppDeleteRun="kernel security privileges DBMS_PRIVILEGE_CAPTURE.DELETE_RUN",
    kzppDisableCapture="kernel security privileges DBMS_PRIVILEGE_CAPTURE.DISABLE_CAPTURE",
    kzppDropCapture="kernel security privileges DBMS_PRIVILEGE_CAPTURE.DROP_CAPTURE",
    kzppEnableCapture="kernel security privileges DBMS_PRIVILEGE_CAPTURE.ENABLE_CAPTURE",
    kzppGenerateResult="kernel security privileges DBMS_PRIVILEGE_CAPTURE.GENERATE_RESULT",
    kzppinsdc="kernel security privileges DBMS_PRIV_CAPTURE.CAPTURE_PRIVILEGE_USE",
    kzppinsdc_str="kernel security privileges DBMS_PRIV_CAPTURE.CAPTURE_PRIVILEGE_USE DBMS_PRIV_CAPTURE.CAPTURE_PRIVILEGE_USE",
    kzppobjpriv="kernel security privileges DBMS_PRIV_CAPTURE.SES_HAS_OBJ_PRIV",
    kzpprolepriv="kernel security privileges DBMS_PRIV_CAPTURE.SES_HAS_ROLE_PRIV",
    kzppsyspriv="kernel security privileges DBMS_PRIV_CAPTURE.SES_HAS_SYS_PRIV",
    kzr="kernel security virtual private database",
    kzra="kernel security virtual private database privileges",
    kzraacx="kernel security virtual private database privileges DBMS_RLS_INT.ADD_POLICY_CONTEXT",
    kzraadp="kernel security virtual private database privileges DBMS_RLS_INT.ADD_POLICY",
    kzracpg="kernel security virtual private database privileges DBMS_RLS_INT.CREATE_POLICY_GROUP",
    kzradcx="kernel security virtual private database privileges DBMS_RLS_INT.DROP_POLICY_CONTEXT",
    kzradm="kernel security virtual private database privileges real-time application-controlled data masking",
    kzradmadd="kernel security virtual private database privileges real-time application-controlled data masking DBMS_REDACT_INT.ADD_POLICY",
    kzradmalter="kernel security virtual private database privileges real-time application-controlled data masking DBMS_REDACT_INT.ALTER_POLICY",
    kzradmdisable="kernel security virtual private database privileges real-time application-controlled data masking DBMS_REDACT_INT.DISABLE_POLICY",
    kzradmdrop="kernel security virtual private database privileges real-time application-controlled data masking DBMS_REDACT_INT.DROP_POLICY",
    kzradmenable="kernel security virtual private database privileges real-time application-controlled data masking DBMS_REDACT_INT.ENABLE_POLICY",
    kzradmfpmmask="kernel security virtual private database privileges real-time application-controlled data masking DBMS_REDACT_INT.FPM_MASK",
    kzradmfpmunmask="kernel security virtual private database privileges real-time application-controlled data masking DBMS_REDACT_INT.FPM_UNMASK",
    kzradmupdfull="kernel security virtual private database privileges real-time application-controlled data masking DBMS_REDACT_INT.UPDATE_FULL_REDACTION_VALUES",
    kzradpg="kernel security virtual private database privileges DBMS_RLS_INT.DELETE_POLICY_GROUP",
    kzradrp="kernel security virtual private database privileges DBMS_RLS_INT.DROP_POLICY",
    kzraealgp="kernel security virtual private database privileges DBMS_RLS_INT.ALTER_GROUPED_POLICY",
    kzraealp="kernel security virtual private database privileges DBMS_RLS_INT.ALTER_POLICY",
    kzraenp="kernel security virtual private database privileges DBMS_RLS_INT.ENABLE_POLICY",
    kzraflp="kernel security virtual private database privileges DBMS_RLS_INT.REFRESH_POLICY",
    kzragenp="kernel security virtual private database privileges DBMS_RLS_INT.ENABLE_GROUPED_POLICY DISABLE_GROUPED_POLICY",
    kzragflp="kernel security virtual private database privileges DBMS_RLS_INT.REFRESH_GROUPED_POLICY",
    kzrapfg="kernel security virtual private database privileges DBMS_RLS_INT.DROP_GROUPED_POLICY",
    kzraptg="kernel security virtual private database privileges DBMS_RLS_INT.ADD_GROUPED_POLICY",
    kzraxdsa="kernel security virtual private database privileges XS_DATA_SECURITY_INT.APPLY_OBJECT_POLICY",
    kzraxdse="kernel security virtual private database privileges XS_DATA_SECURITY_INT.ENABLE_DISABLE_OBJECT_POLICY",
    kzraxdsr="kernel security virtual private database privileges XS_DATA_SECURITY_INT.REMOVE_OBJECT_POLICY",
    kzraxpnm="kernel security virtual private database privileges XS_DATA_SECURITY_UTIL.VERIFY_OBJECTNAME",
    kzredact_apply_pe_col="kernel security virtual private database DBMS_REDACT_INT.APPLY_POLICY_EXPR_TO_COL",
    kzredact_create_pe="kernel security virtual private database DBMS_REDACT_INT.CREATE_POLICY_EXPRESSIONS",
    kzredact_drop_pe="kernel security virtual private database DBMS_REDACT_INT.DROP_POLICY_EXPRESSIONS",
    kzredact_update_pe="kernel security virtual private database DBMS_REDACT_INT.UPDATE_POLICY_EXPRESSIONS",
    kzrt="kernel security virtual private database privileges",
    kzs="kernel security privileges",
    kzsob_DES3Decrypt="kernel security privileges DBMS_OBFUSCATION_TOOLKIT_FFI.DES3DECRYPT",
    kzsob_DES3Encrypt="kernel security privileges DBMS_OBFUSCATION_TOOLKIT_FFI.DES3ENCRYPT",
    kzsob_DESDecrypt="kernel security privileges DBMS_OBFUSCATION_TOOLKIT_FFI.DESDECRYPT",
    kzsob_DESEncrypt="kernel security privileges DBMS_OBFUSCATION_TOOLKIT_FFI.DESENCRYPT",
    kzsob_GetKey="kernel security privileges DBMS_OBFUSCATION_TOOLKIT_FFI.GETKEY",
    kzsob_MD5="kernel security privileges DBMS_OBFUSCATION_TOOLKIT_FFI.MD5",
    kzsp="kernel security privileges privileges",
    kzsr="kernel security privileges roles/remote password file",
    kzstc="kernel security privileges DBMS_CRYPTO_FFI.COOKIE",
    kzstdl="kernel security privileges DBMS_CRYPTO_FFI.DECRYPT",
    kzstdr="kernel security privileges DBMS_CRYPTO_FFI.DECRYPT",
    kzstel="kernel security privileges DBMS_CRYPTO_FFI.ENCRYPT",
    kzster="kernel security privileges DBMS_CRYPTO_FFI.ENCRYPT",
    kzsthl="kernel security privileges DBMS_CRYPTO_FFI.HASH",
    kzsthr="kernel security privileges DBMS_CRYPTO_FFI.HASH",
    kzstiac="kernel security privileges KUPU$UTILITIES_INT.INTALGCONV",
    kzstml="kernel security privileges DBMS_CRYPTO_FFI.MAC",
    kzstmr="kernel security privileges DBMS_CRYPTO_FFI.MAC",
    kzstr="kernel security privileges DBMS_CRYPTO_FFII.RANDOM",
    kzsu="kernel security privileges XS principal",
    kzu="kernel security privileges",
    kzvd="kernel security data vault",
    kzvdvedptransp="kernel security data vault KUPM$MCP.CHECK_TTS_DVAUTH",
    kzvdvexsgr="kernel security data vault XS_PRINCIPAL.DV_ROLE_CHECK",
    kzx="kernel security XS Fusion Security",
    kzxa="kernel security XS Fusion Security XS ACL",
    kzxaud_tc_admin_audit="kernel security XS Fusion Security XS ACL XS_ADMIN_INT.ADMIN_AUDIT_INTERNAL",
    kzxc="kernel security XS Fusion Security XS Security Class",
    kzxd="kernel security XS Fusion Security XS Data Security",
    kzxh_delete_midtier_cache="kernel security XS Fusion Security XS_MTCACHE_INT.MIDTIER_CACHE_DELETE",
    kzxh_set_retention_time="kernel security XS Fusion Security XS_MTCACHE_INT.SET_RETENTION_TIME",
    kzxh_update_midtier_cache="kernel security XS Fusion Security XS_MTCACHE_INT.MIDTIER_CACHE_UPDATE",
    kzxi="kernel security XS Fusion Security XS Administrative operation",
    kzxm="kernel security XS Fusion Security XS Administrative operation",
    kzxm_check_permission="kernel security XS Fusion Security XS Administrative operation XS_ADMIN_INT.CHECK_PERMISSION",
    kzxm_create_dependency="kernel security XS Fusion Security XS Administrative operation XS_ADMIN_INT.CREATE_DEPENDENCY",
    kzxm_create_entity="kernel security XS Fusion Security XS Administrative operation XS_ADMIN_INT.CREATE_ENTITY",
    kzxm_delete_dependency="kernel security XS Fusion Security XS Administrative operation XS_ADMIN_INT.DELETE_DEPENDENCY",
    kzxm_delete_entity="kernel security XS Fusion Security XS Administrative operation XS_ADMIN_INT.DELETE_ENTITY",
    kzxm_get_entity_id="kernel security XS Fusion Security XS Administrative operation XS_ADMIN_INT.GET_INTITY_ID",
    kzxm_invalidate_entity="kernel security XS Fusion Security XS Administrative operation XS_ADMIN_INT.INVALIDATE_ENTITY",
    kzxm_validate_entity_name="kernel security XS Fusion Security XS Administrative operation XS_ADMIN_INT.VALIDATE_ENTITY_NAME",
    kzxnt="kernel security XS Fusion Security XS Namespace template",
    kzxpTcCheckXSCallback="kernel security XS Fusion Security DBMS_XS_SYSTEM_FFI.CHECK_XSCALLBACK",
    kzxpTcCheckXSProv="kernel security XS Fusion Security DBMS_XS_SYSTEM_FFI.CHECK_XSPROVISION",
    kzxpTcSetXSAclResultSize="kernel security XS Fusion Security DBMS_XS_SYSTEM_FFI.SET_XS_ACL_RESULT_SIZE",
    kzxs="kernel security XS Fusion Security XS Session",
    kzxsidp_tc_doDHExchange="kernel security XS Fusion Security XS Session DBMS_XS_SIDP.DOHEXCHANGE",
    kzxsidp_tc_fixDHKeySize="kernel security XS Fusion Security XS Session DBMS_XS_SIDP.FIXDHKEYSIZE",
    kzxsp="kernel security XS Fusion Security XS Session XS Security Class",
    kzxsTcAddGlobalCallback="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.ADD_GLOBAL_CALLBACK",
    kzxsTcAssignUser="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.ASSIGN_USER",
    kzxsTcAttachSession="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.ATTACH_SESSION",
    kzxsTcCreateAttribute="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.CREATE_ATTRIBUTE",
    kzxsTcCreateNamespace="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.CREATE_NAMESPACE",
    kzxsTcCreateSession="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.CREATE_SESSION",
    kzxsTcDeleteAttribute="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.DELETE_ATTRIBUTE",
    kzxsTcDeleteNamespace="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.DELETE_NAMESPACE",
    kzxsTcDelGlobalCallback="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.DELETE_GLOBAL_CALLBACK",
    kzxsTcDestroySession="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.DESTROY_SESSION",
    kzxsTcDetachSession="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.DETACH_SESSION",
    kzxsTcDisableRole="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.DISABLE_ROLE",
    kzxsTcEnableRole="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.ENABLE_ROLE",
    kzxsTcGetAttribute="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.GET_ATTRIBUTE",
    kzxsTcGetSIDforCookie="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.GET_SESSIONID_FROM_COOKIE",
    kzxsTcReauthenticateSession="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.REAUTH_SESSION",
    kzxsTcResetAttribute="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.RESET_ATTRIBUTE",
    kzxsTcSaveSession="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.SAVE_SESSION",
    kzxsTcSetAttribute="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.SET_ATTRIBUTE",
    kzxsTcSetCookie="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.SET_SESSION_COOKIE",
    kzxsTcSetDefaultWS="kernel security XS Fusion Security XS Session XS_ADMIN_UTIL.SET_DEFAULT_WORKSPACE_UGA",
    kzxsTcSetInactiveTimeout="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.SET_INACTIVITY_TIMEOUT",
    kzxsTcSwitchUser="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.SWITCH_USER",
    kzxsTcUpdGlobalCallback="kernel security XS Fusion Security XS Session DBMS_XS_SESSIONS_FFI.ENABLE_GLOBAL_CALLBACK",
    kzxuTcAddProxyToSchema="kernel security XS Fusion Security XS_PRINCIPAL_INT.ADD_PROXY_TO_SCHEMA_INTERNAL",
    kzxuTcRemoveProxyFromSchema="kernel security XS Fusion Security XS_PRINCIPAL_INT.RM_PROXY_FROM_SCHEMA_INTERNAL",
    kzxuTcSetPassword="kernel security XS Fusion Security XS_PRINCIPAL_INT.SET_PASSWORD_INTERNAL",
    kzxuTcSetProfile="kernel security XS Fusion Security XS_PRINCIPAL_INT.SET_PROFILE_INTERNAL",
    kzxuTcSetUserStatus="kernel security XS Fusion Security XS_PRINCIPAL_INT.SET_USER_STATUS_INTERNAL",
    kzxuTcSetVerifier="kernel security XS Fusion Security XS_PRINCIPAL_INT.SET_VERIFIER_INTERNAL",
    kzxutilErr="kernel security XS Fusion Security XS_ADMIN_UTIL.RAISE_ERROR (?)",
    kzxutilValidateDBuser="kernel security XS Fusion Security XS_ADMIN_UTIL.VALIDATE_DB_USER",
    kzxutilValidateObjectName="kernel security XS Fusion Security XS_ADMIN_UTIL.VALIDATE_DB_OBJECT_NAME",
    Ldi="date/time conversion",
    libc_start_main="(non oracle)libc support for starting the main function",
    lis="PLSQL_KG_Interface",
    lm="low level math functions",
    lmtdcrel="low level math functions compare two double-precision float-point numbers",
    lnxn2copt="converts an oracle number to a character string with option for padding",
    lnxn2coptg="converts an oracle number to a character string with option for padding with nls global",
    lnxqchk="private number check function",
    Lpx="xml parser",
    LpxFSM="xml parser FSM parser",
    LpxFSMSaxSE="xml parser FSM parser ??",
    LpxMemFree="xml parser ??",
    ltx="XDB",
    lxm="native language support",
    main="(non oracle)general c starting function",
    md="spatial",
    mdgr="spatial spatial georaster",
    mDNS="multicast dns",
    mdr="spatial spatial indexing",
    mdrcnccom="spatial spatial indexing ??",
    msq="generating sql statements",
    msqcol="generating sql statements append column name",
    msqrxq="generating sql statements make sql for remote execution",
    n="network",
    na="network authentication",
    nau_ctl="network authentication aUthentication ConTroL",
    nazslon="network authentication Zecurity Log ON",
    nb="network buffer",
    nbi="network buffer incoming",
    nbiCreate="network buffer incoming create buffer",
    nbiRead="network buffer incoming read",
    nbiReadLine="network buffer incoming read a line",
    nbiReadLineMB="network buffer incoming read a line multiple buffers(?)",
    nbiReadLineSB="network buffer incoming read a line single buffer(?)",
    nbo="network buffer outgoing",
    nboCreate="network buffer outgoing create buffer",
    nboFlush="network buffer outgoing flush buffer",
    nboWrite="network buffer outgoing write (to socket?)",
    nco="network network connection",
    ncodfa="network network connection definition allocation, allocate a new ncodef",
    ncrorou="network receive OUT arguments for specified procedure",
    ncroxrend="network xfr record end",
    ncrsrend="network end record",
    ncrsrwrt="network Record WRiTe output buffer",
    new="network ??",
    ngine="network ??",
    nhp="network http",
    nhpDestroyConnection="network http remove connection",
    nhpEndConnection="network http end connection",
    nhpGetConnection="network http start connection",
    nhpNewConnection="network http create new connection",
    nhpReadLine="network http read a line",
    nhpReadResponse="network http read response",
    nhpReqBegin="network http begin request",
    nhpRespEnd="network http end response",
    nhpRespGet="network http get response",
    nhpRespGet0="network http get response 0 (?)",
    nhpReturnConnection="network http return connection",
    nhpSendRequest="network http send request",
    nhpSockAvail="network http is socket available",
    nhpSockRecv="network http receive via network socket",
    nhpSockSend="network http send via network socket",
    nhpStartRequest="network http start request",
    ni="network interface",
    nImpl="network ??",
    nio="network interface operating system dependent networking",
    nioqer="network interface operating system dependent networking error",
    nioqrc="network interface operating system dependent networking receive",
    nioqsn="network interface operating system dependent networking send",
    nioqwa="network interface operating system dependent networking wait",
    nl="network library",
    nldatxt="network library put current date/time into string",
    nn="network names",
    npi="network network program interface",
    npiall="network network program interface use bundled execution",
    npiane="network network program interface add new nco entry",
    npibeg="network network program interface maybe begin a distributed transaction branch, release local DX",
    npicom="network network program interface old style commit",
    npicon="network network program interface connect; connect and log on to an external database",
    npidri="network network program interface driver common",
    npidsa="network network program interface disconnect all",
    npidsc="network network program interface DiSConnect connection",
    npierr="network network program interface check for errors requiring ksesec, also reacquire DX lock",
    npil="network network program interface local",
    npisnl="network network program interface set network link",
    npitcc="network network program interface Test/Clear connections",
    npixfr="network network program interface transfer",
    ns="network session",
    nsb="network session block(?)",
    nsbasic="network session block(?) basic",
    nsbasic_brc="network session block(?) basic block receive",
    nsbasic_bsd="network session block(?) basic block send",
    nsbrecv="network session block(?) receive",
    nsbsend="network session block(?) send",
    nscon="network session connect",
    nsdo="network session execute network session operation. NS protocol engine",
    nsevdansw="network session event deferred: complete deferred nsanswer operation",
    nsevrec="network session record: record event occurence",
    nsevwait="network session wait: wait for event notification on all registered connections",
    nsmal="network session memory allocate",
    nsntwrn="network session ??",
    nso="network session nest optimisation (sql transformation)",
    nsoqbc="network session nest optimisation (sql transformation) on query block",
    nsotruns="network session nest optimisation (sql transformation) traverse and unnest subquery",
    nsprecv="network session receive packet from network transport layer",
    nspsend="network session ??",
    nsrdr="network session packet reader",
    nstimexp="network session expire function. invoked by LTM with these specific arguments",
    nt="network transport",
    ntevque="network transport event vector query",
    ntm="network transport mailbox",
    ntp="network transport ipc",
    ntpfp="network transport ipc ?",
    ntpfprd="network transport ipc ? read",
    ntpfpwr="network transport ipc ? write",
    ntprd="network transport ipc read",
    ntt="network transport tcp/ip",
    ntt2err="network transport tcp/ip error procedure",
    nttctl="network transport tcp/ip control",
    nttfp="network transport tcp/ip ?",
    nttfprd="network transport tcp/ip ? read",
    nttfpwr="network transport tcp/ip ? write",
    nttrd="network transport tcp/ip basic read",
    nttwr="network transport tcp/ip ??",
    ntus="network transport unix domain sockets",
    ntz="network transport SSL",
    nu="network trace route utility",
    nz="network security",
    oba="operator buffer allocation",
    oci="oracle call interface",
    ociepacm="oracle call interface ??",
    ociextp="oracle call interface PLSQL External proc",
    OCILobCreateTemporary="DBMS_LOB.KKXL_CREATETEMPORARY",
    OCILobFileCloseAll="DBMS_LOB.KKXL_FILECLOSEALL",
    OCILobFileExists="DBMS_LOB.KKXL_FILEEXISTS",
    OCILobFileGetName="DBMS_LOB.KKXL_FILEGETNAME",
    OCILobFileIsOpen="DBMS_LOB.KKXL_FILEISOPEN",
    OCILobFreeTemporary="DBMS_LOB.KKXL_FREETEMPORARY",
    OCILobGetChunkSize="DBMS_LOB.KKXL_GETCHUNKSIZE",
    OCILobGetLength="DBMS_LOB.KKXL_GETLENGTH",
    OCILobGetOptions="DBMS_LOB.KKXL_GETOPTIONS",
    OCILobIsOpen="DBMS_LOB.KKXL_ISOPEN",
    OCILobIsTemporary="DBMS_LOB.KKXL_ISTEMPORARY",
    OCILobLoadFromFile="DBMS_LOB.KKXL_LOADFROMFILE",
    OCILobSetOptions="DBMS_LOB.KKXL_SETOPTIONS",
    OCIStmtExecute="execute",
    OCIStmtFetch="fetch",
    odm="oracle disk manager",
    odm_io="oracle disk manager IO",
    ofs="oracle filesystem (ACFS)?",
    opi="oracle program interface",
    opiaba="oracle program interface access bind (variable) array?",
    opiabt="oracle program interface abort instance",
    opiamr="oracle program interface archival and media recovery",
    opibnd="oracle program interface bind",
    opibnd0="oracle program interface bind 0",
    opibrn="oracle program interface bind reference numeric",
    opicca="oracle program interface clear context area",
    opiclo="oracle program interface close cursor",
    opicom="oracle program interface oracle side, commit current transaction",
    opidcl="oracle program interface cleanup after the sqlnet connection is terminated",
    opiDeferredSem="oracle program interface perform deferred semantic analysis",
    opidr="oracle program interface route current request",
    opidrv="oracle program interface route current request driver, entry side into two task interface",
    opidsa="oracle program interface array describe locals",
    opiefn="oracle program interface execute function (?)",
    opiexe="oracle program interface execute",
    opifch="oracle program interface oracle side of the fetch interface",
    opifch2="oracle program interface oracle side of the fetch interface main routine",
    opifcr="oracle program interface fetch callback - fetch a row?",
    opifcs="oracle program interface free cursors by session close",
    opigln="oracle program interface get long column",
    opiierr="oracle program interface internal error",
    opiino="oracle program interface initialize opi",
    opikndf1="oracle program interface OPIINO: Kernel route which sits on top of the SQL*Net driver. we asusme that only MTS uses this function right before it detaches the session.",
    opikndf2="oracle program interface OPIINO: Kernel route which sits on top of the SQL*Net driver",
    opilof="oracle program interface log off",
    opilon="oracle program interface log on",
    opimai="oracle program interface main",
    opimai_real="oracle program interface main real oracle start point",
    opiNeedDeferredSem="oracle program interface is deferred semantic analysis needed (if so (r1), returns from kksParseChildCursor and starts kksFullTypeCheck)",
    opiobv="oracle program interface bind a variable",
    opiodr="oracle program interface oracle code request driver, route the current request",
    opiomc="oracle program interface map cursor",
    opiope="oracle program interface open cursor",
    opiopr="oracle program interface open cursor",
    opiosq="oracle program interface prepare to parse a sql command",
    opiosq0="oracle program interface prepare to parse a sql command 0",
    opiParse="oracle program interface parse",
    opipbr="oracle program interface process bind by reference chain",
    opipls="oracle program interface contains opi bundled call executor and support routines",
    opiprs="oracle program interface parse",
    opirip="oracle program interface run independent process. invoked from special function sou2o direct call in opimai of detached process invocation. initializes fixed-PGA in RAM and SQL layers.",
    opiSem="oracle program interface semantic analysis driver",
    opistp="oracle program interface stop oracle",
    opistr="oracle program interface start oracle",
    opitca="oracle program interface sets up context area",
    opitsk="oracle program interface two task function dispatcher",
    opiul="oracle program interface direct loader",
    opix="oracle program interface transfer to remote",
    opixrb="oracle program interface ??",
    opixrm="oracle program interface transfer to remote check remote cursor",
    orp="oracle external pickler/opaque type interface",
    ort="OBJECTS Types",
    osn="Two Task",
    oss="oracle storage server",
    ossconf="oracle storage server configuration",
    osssec="oracle storage server security",
    p2c="PLSQL PSD standalones",
    par="PLSQL KG interface",
    pb="PLSQL code execution",
    pbbbl="PLSQL code execution PBREAK.PBBBL SET_BREAK_LINE",
    pbbdb="PLSQL code execution PBREAK.PBBDB DISABLE_BREAKPOINT",
    pbbeb="PLSQL code execution PBREAK.PBBEB ENABLE_BREAKPOINT",
    pbbevent="PLSQL code execution PBREAK.PBBEVENT GET_CURRENT_EVENT",
    pbbglm="PLSQL code execution PBREAK.PBBGLM GET_LINE_MAP",
    pbbgln="PLSQL code execution PBREAK.PBBGLN GET_CURRENT_INFO",
    pbbgpf="PLSQL code execution PBREAK.PBBGPF GET_DEBUG_FLAGS",
    pbbhs="PLSQL code execution PBREAK.PBBHS GET_LU",
    pbbibacktrace="PLSQL code execution PBREAK.PBBIBACKTRACE PRINT_BACKTRACE",
    pbbibreakpoints="PLSQL code execution PBREAK.PBBIBREAKPOINTS PRINT_BREAKPOINTS",
    pbbicdisexe="PLSQL code execution PBREAK.PBBICDISEXE IS_EXECUTABLE",
    pbbicdvck="PLSQL code execution PBREAK.ICDVCK INTERNAL_VERSION_CHECK",
    pbbiget="PLSQL code execution PBREAK.PBBIGET GET_SCALAR",
    pbbigindexes="PLSQL code execution PBREAK.PBBIGINDEXES GET_INDEXES",
    pbbilspkgs="PLSQL code execution PBREAK.PBBILSPKGS PRINT_BACKTRACE",
    pbbiset="PLSQL code execution PBREAK.PBBISET SET_VALUE",
    pbbopt="PLSQL code execution PBREAK.PBBOPT SET_NUMERIC_OPTION GET_NUMERIC_OPTION",
    pbbpbs="PLSQL code execution PBREAK.PBBPBS PRINT_BREAKPOINTS",
    pbbpsl="PLSQL code execution PBREAK.PBBPSL PRINT_SOURCE (_LINE?)",
    pbbpslf="PLSQL code execution PBREAK.PBBPSL PRINT_SOURCE (_LINE?) PBREAK.PBBPSLF PRINT_FRAME_SOURCE",
    pbbrb="PLSQL code execution PBREAK.PBBRD DELETE_BREAKPOINT",
    pbbsd="PLSQL code execution PBREAK.PBBSD SET_DEBUG",
    pbbspf="PLSQL code execution PBREAK.PBBSPF SET_DEBUG_FLAGS",
    pbcov3gsct="PLSQL code execution DBMS_PLSQL_CODE_COVERAGE.PBCOV3GSCT START_COVERAGE",
    pbcov3gstt="PLSQL code execution DBMS_PLSQL_CODE_COVERAGE.PBCOV3GSTT STOP_COVERAGE",
    pbmsg="PLSQL code execution ??",
    pbp3g="PLSQL code execution dbms_profiler",
    pbp3gfpd="PLSQL code execution dbms_profiler DBMS_PROFILER.PBP3GFPD FLUSH_PROFILER FLUSH_DATA",
    pbp3gkcb="PLSQL code execution dbms_profiler DBMS_PROFILER.PBP3GKCB GET_VERSION",
    pbp3gpp="PLSQL code execution dbms_profiler DBMS_PROFILER.PBP3GPP PAUSE_PROFILER",
    pbp3grp="PLSQL code execution dbms_profiler DBMS_PROFILER.PBP3GRP RESUME_PROFILER",
    pbp3gsrp="PLSQL code execution dbms_profiler DBMS_PROFILER.PBP3GSRP START_PROFILER",
    pbp3gstp="PLSQL code execution dbms_profiler DBMS_PROFILER.PBP3GSTP STOP_PROFILER",
    pbp3gvck="PLSQL code execution dbms_profiler DBMS_PROFILER.PBP3GVCK INTERNAL_VERSION_CHECK",
    pbs="PLSQL code execution KNLDE",
    pbt3g="PLSQL code execution dbms_trace",
    pbt3gco="PLSQL code execution dbms_trace DBMS_TRACE.PBT3GCO COMMENT_PLSQL_TRACE",
    pbt3glm="PLSQL code execution dbms_trace DBMS_TRACE.PBT3GLM LIMIT_PLSQL_TRACE",
    pbt3gmt="PLSQL code execution dbms_trace DBMS_TRACE.PBT3GMT SET_OR_CLEAR_TRACE",
    pbt3grn="PLSQL code execution dbms_trace DBMS_TRACE.PBT3GRN GET_PLSQL_TRACE_RUNNUMBER",
    pbt3gtl="PLSQL code execution dbms_trace DBMS_TRACE.PBT3GTL GET_PLSQL_TRACE_LEVEL",
    pbt3gvck="PLSQL code execution dbms_trace DBMS_TRACE.PBT3GVCK INTERNAL_VERSION_CHECK",
    pci="PLSQL infrastructure",
    pckl="dbms_pickler",
    pcklfdo="dbms_pickler DBMS_PICKLER.GET_FORMAT_BUFFER",
    pcklfun="dbms_pickler DBMS_JAVA_TEST.CALL_STATIC_JAVA_METHOD",
    pckltds="dbms_pickler DBMS_PICKLER.GET_DESCRIPTORS",
    pckltds2="dbms_pickler DBMS_PICKLER.GET_DESCRIPTORS DBMS_PICKLER.GET_DESCRIPTORS",
    pckltds3="dbms_pickler DBMS_PICKLER.GET_DESCRIPTORS DBMS_PICKLER.GET_DESCRIPTORS",
    pckltds4="dbms_pickler DBMS_PICKLER.GET_DESCRIPTORS DBMS_PICKLER.GET_DESCRIPTORS",
    pcklupd="dbms_pickler DBMS_PICKLER.UPDATE_THRU_REF",
    pcm="PLSQL infrastructure",
    pd="PLSQL code execution",
    pdlifu="PLSQL code execution internal entrypoint for the PL/SQL code generator",
    pdn="PLSQL code execution codegen native",
    pdt="PLSQL code execution IDL; type generator",
    pdtidc="PLSQL code execution IDL; type generator PL/SQL Diana IDL to PL/SQL intermediate code IDL translator",
    pdtimb="PLSQL code execution IDL; type generator PL/SQL intermediate code IDL translator block module",
    pdtist="PLSQL code execution IDL; type generator PL/SQL intermediate code IDL translator statement support",
    pdtitf="PLSQL code execution IDL; type generator interested in finding the base",
    pdw="PLSQL code execution codegen IDL gen",
    pdx="PLSQL code execution codegen optimizer",
    pdy="PLSQL code execution codegen MCode gen",
    pdz="PLSQL code execution codegen infrastructure",
    pe="PLSQL code execution",
    pef="PLSQL code execution external proc",
    peftrusted="PLSQL code execution external proc execute a trusted callout",
    peibp="PLSQL code execution PLSQL KNLDE",
    peicnt="PLSQL code execution PL/SQL Controlled execution",
    pes="PLSQL code execution Shared Object Manager",
    pesacos="PLSQL code execution Shared Object Manager STANDARD.PESACOS ACOS",
    pesasin="PLSQL code execution Shared Object Manager STANDARD.PESASIN ASIN",
    pesatn2="PLSQL code execution Shared Object Manager STANDARD.PESATN2 ATAN2",
    pesblt="PLSQL code execution Shared Object Manager built in interpreter",
    pesdbtz="PLSQL code execution Shared Object Manager STANDARD.PESDBTZ DBTIMEZONE",
    pesguid="PLSQL code execution Shared Object Manager STANDARD.PESGUID SYS_GUID",
    pesld="PLSQL code execution Shared Object Manager Native Code Loader",
    pesn2dsi="PLSQL code execution Shared Object Manager STANDARD.PESN2DSI NUMTODSINTERVAL",
    pesn2ymi="PLSQL code execution Shared Object Manager STANDARD.PESN2YMI NUMTOYMINTERVAL",
    pessdt="PLSQL code execution Shared Object Manager STANDARD.PESSDT SYSDATE",
    pessdx="PLSQL code execution Shared Object Manager STANDARD.PESSDX SOUNDEX",
    pessts="PLSQL code execution Shared Object Manager STANDARD.PESSTS SYSTIMESTAMP",
    pessysctx2="PLSQL code execution Shared Object Manager STANDARD.PESSYSCTX2 SYS_CONTEXT",
    pessysctx3="PLSQL code execution Shared Object Manager STANDARD.PESSYSCTX3 SYS_CONTEXT",
    pesuen="PLSQL code execution Shared Object Manager STANDARD.PESUEN USERENV",
    pesxco="PLSQL code execution Shared Object Manager STANDARD.PESXCO NLSSORT",
    pesxcp="PLSQL code execution Shared Object Manager STANDARD.PESXCP NLS_INITCAP",
    pesxlo="PLSQL code execution Shared Object Manager STANDARD.PESXLO NLS_LOWER",
    pesxlt="PLSQL code execution Shared Object Manager STANDARD.PESXLT TRANSLATE",
    pesxup="PLSQL code execution Shared Object Manager STANDARD.PESXUP NLS_UPPER",
    pextproc="PLSQL code execution pefm call external procedure",
    pf="PLSQL Code Execution",
    pfr="PLSQL Code Execution runtime",
    pfrba_bind_array="PLSQL Code Execution runtime bind array",
    pfrci_compute_index="PLSQL Code Execution runtime compute index",
    pfrecl_excp_caught_locally="PLSQL Code Execution runtime exception caught locally",
    pfrexc="PLSQL Code Execution runtime plsql interpreter exception support",
    pfrfeb_format_error_backtrace="PLSQL Code Execution runtime format error backtrace",
    pfrfi_find_index="PLSQL Code Execution runtime find index",
    pfrfoe_flush_oci_error="PLSQL Code Execution runtime flush oci error",
    pfrfxh="PLSQL Code Execution runtime finds an exception handler",
    pfrrbt_record_backtrace="PLSQL Code Execution runtime record backtrace",
    pfrrun="PLSQL Code Execution runtime Interpreter Main Instruction Loop",
    pfrrun_no_tool="PLSQL Code Execution runtime Interpreter Main Instruction Loop fast interpretation loop",
    pfrsi_sort_index="PLSQL Code Execution runtime sort index",
    pfrsim_sort_index_main="PLSQL Code Execution runtime sort index main",
    pfrsqc="PLSQL Code Execution runtime callbacks for array sql and dml with returning",
    pfrstk="PLSQL Code Execution runtime runtime stack frame",
    pfrtcs="PLSQL Code Execution runtime trace call stack(?) calls kgitrc on each kgiob on the stack",
    pgm="PLSQL ILMS",
    ph="PLSQL infrastructure",
    ph1="PLSQL infrastructure syntax",
    ph2="PLSQL infrastructure semantics phase 2",
    ph2blo="PLSQL infrastructure semantics phase 2 idl node D_BLOCK, D_DECL",
    ph2exp="PLSQL infrastructure semantics phase 2 process IDL class EXP",
    ph2ext="PLSQL infrastructure semantics phase 2 process IDL class EXP - top level",
    ph2gbi="PLSQL infrastructure semantics phase 2 initialize bind variable type information",
    ph2ima="PLSQL infrastructure semantics phase 2 images a",
    ph2its="PLSQL infrastructure semantics phase 2 process items",
    ph2obl="PLSQL infrastructure semantics phase 2 outermost block, outermost D_BLOCK in a body",
    ph2of1="PLSQL infrastructure semantics phase 2 D_F_CALL or D_PARM_C",
    ph2qlb="PLSQL infrastructure semantics phase 2 perform a schema.table lookup",
    ph2qlk="PLSQL infrastructure semantics phase 2 lookup the set of tables in a from clause in a database",
    ph2qqx="PLSQL infrastructure semantics phase 2 IDL node Q_EXP",
    ph2qs2="PLSQL infrastructure semantics phase 2 sql routines",
    ph2qst="PLSQL infrastructure semantics phase 2 main routine for sql statements, IDL node Q_SQL_ST",
    ph2qtx="PLSQL infrastructure semantics phase 2 IDL class TAB_EXP",
    ph2sbo="PLSQL infrastructure semantics phase 2 IDL node D_S_BODY",
    ph2sms="PLSQL infrastructure semantics phase 2 process statements",
    ph2stm="PLSQL infrastructure semantics phase 2 statement(?)",
    ph2uni="PLSQL infrastructure semantics phase 2 IDL class UNIT_BODY",
    pha="PLSQL infrastructure semantics",
    phdite="PLSQL infrastructure immediate type (S_OBJ_TY) of expressions",
    phdr="PLSQL infrastructure KG interface",
    phn="PLSQL infrastructure semantics",
    pi="PLSQL apps",
    pico="PLSQL apps utl_compress support",
    picomplz="PLSQL apps utl_compress support UTL_COMPRESS.LZ_COMPRESS_I",
    picompulz="PLSQL apps utl_compress support UTL_COMPRESS.LZ_UNCOMPRESS",
    pien="PLSQL apps utl_encode support",
    pienc264="PLSQL apps utl_encode support UTL_ENCODE.BASE64_ENCODE_I",
    pienc2m="PLSQL apps utl_encode support UTL_ENCODE.MIMEHEADER_ENCODE_I",
    pienc2qp="PLSQL apps utl_encode support UTL_ENCODE.QUOTED_PRINTABLE_ENCODE_I",
    pienc2t="PLSQL apps utl_encode support UTL_ENCODE.TEXT_ENCODE_I",
    pienc2uu="PLSQL apps utl_encode support UTL_ENCODE.UUENCODE_I",
    piencf64="PLSQL apps utl_encode support UTL_ENCODE.BASE64_DECODE_I",
    piencfm="PLSQL apps utl_encode support UTL_ENCODE.MIMEHEADER_DECODE_I",
    piencfqp="PLSQL apps utl_encode support UTL_ENCODE.QUOTED_PRINTABLE_DECODE_I",
    piencft="PLSQL apps utl_encode support UTL_ENCODE.TEXT_DECODE_I",
    piencfuu="PLSQL apps utl_encode support UTL_ENCODE.UUDECODE_I",
    pifi="PLSQL apps utl_file support",
    pifiat="PLSQL apps utl_file support UTL_FILE.FGETATTR_I",
    pifica="PLSQL apps utl_file support UTL_FILE.FCLOSE_ALL_I",
    pificl="PLSQL apps utl_file support UTL_FILE.FCLOSE_I",
    pificp="PLSQL apps utl_file support UTL_FILE.FCOPY_I",
    pififl="PLSQL apps utl_file support UTL_FILE.FFLUSH_I",
    pifigch="PLSQL apps utl_file support UTL_FILE.FOPEN_NCHAR_I",
    pifigl="PLSQL apps utl_file support UTL_FILE.GET_LINE_I",
    pifigr="PLSQL apps utl_file support UTL_FILE.GET_LINE_RAW_I",
    pifiio="PLSQL apps utl_file support UTL_FILE.FIS_OPEN_I",
    pifimv="PLSQL apps utl_file support UTL_FILE.FRENAME_I",
    pifinl="PLSQL apps utl_file support UTL_FILE.NEW_LINE_I",
    pifiop="PLSQL apps utl_file support UTL_FILE.FOPEN_I",
    pifipo="PLSQL apps utl_file support UTL_FILE.FGETPOS_I",
    pifipr="PLSQL apps utl_file support UTL_FILE.PUT_RAW_I",
    pifipu="PLSQL apps utl_file support UTL_FILE.PUT_BUFFER_I",
    pifirm="PLSQL apps utl_file support UTL_FILE.FREMOVE_I",
    pifisk="PLSQL apps utl_file support UTL_FILE.FSEEK_I",
    pigd="PLSQL apps utl_gdk support",
    pigdkmn="PLSQL apps utl_gdk support UTL_GDK.MAP_NAME_I",
    piht="PLSQL apps utl_http support",
    pihtAvailable="PLSQL apps utl_http support is connection available",
    pihtca="PLSQL apps utl_http support UTL_HTTP.ADD_COOKIE",
    pihtcc="PLSQL apps utl_http support UTL_HTTP.GET_COOKIE_COUNT",
    pihtcf="PLSQL apps utl_http support UTL_HTTP.GET_FIRST_COOKIE",
    pihtcn="PLSQL apps utl_http support UTL_HTTP.GET_NEXT_COOKIE",
    pihtConnect="PLSQL apps utl_http support setup tcp connection",
    pihtcrc="PLSQL apps utl_http support UTL_HTTP.CREATE_REQUEST_CONTEXT",
    pihtcx="PLSQL apps utl_http support UTL_HTTP.CLEAR_COOKIES",
    pihtDisconnect="PLSQL apps utl_http support disconnect tcp connection",
    pihtdrc="PLSQL apps utl_http support UTL_HTTP.DESTROY_REQUEST_CONTEXT",
    pihtgbcs="PLSQL apps utl_http support UTL_HTTP.GET_BODY_CHARSET",
    pihtgbcsf="PLSQL apps utl_http support UTL_HTTP.GET_BODY_CHARSET UTL_HTTP.GET_BODY_CHARSET",
    pihtgces="PLSQL apps utl_http support UTL_HTTP.GET_CONTENT_ENCODING_SUPPORT",
    pihtgcksp="PLSQL apps utl_http support UTL_HTTP.GET_COOKIE_SUPPORT",
    pihtgdc="PLSQL apps utl_http support UTL_HTTP.GET_DETAILED_SQLCODE",
    pihtgdm="PLSQL apps utl_http support UTL_HTTP.GET_DETAILED_SQLERRM",
    pihtgec="PLSQL apps utl_http support UTL_HTTP.GET_RESPONSE_ERROR_CHECK",
    pihtges="PLSQL apps utl_http support UTL_HTTP.GET_DETAILED_EXCP_SUPPORT",
    pihtgfrd="PLSQL apps utl_http support UTL_HTTP.GET_FOLLOW_REDIRECT",
    pihtgpcsp="PLSQL apps utl_http support UTL_HTTP.GET_PERSISTENT_CONN_SUPPORT",
    pihtgpxy="PLSQL apps utl_http support UTL_HTTP.GET_PROXY",
    pihtgtxto="PLSQL apps utl_http support UTL_HTTP.GET_TRANSFER_TIMEOUT",
    pihtgw="PLSQL apps utl_http support UTL_HTTP.GET_WALLET",
    pihtinit="PLSQL apps utl_http support UTL_HTTP.INITIALIZE",
    pihtMalloc="PLSQL apps utl_http support allocate memory",
    pihtnc="PLSQL apps utl_http support UTL_HTTP.GET_PERSISTENT_CONN_COUNT",
    pihtnf="PLSQL apps utl_http support UTL_HTTP.GET_FIRST_PERSISTENT_CONN",
    pihtnn="PLSQL apps utl_http support UTL_HTTP.GET_NEXT_PERSISTENT_CONN",
    pihtnx="PLSQL apps utl_http support UTL_HTTP.CLOSE_PERSISTENT_CONN",
    pihtpa="PLSQL apps utl_http support UTL_HTTP.GET_AUTHENTICATION",
    pihtpbcs="PLSQL apps utl_http support UTL_HTTP.SET_RESP_BODY_CHARSET",
    pihtpc="PLSQL apps utl_http support UTL_HTTP.GET_HEADER_COUNT",
    pihtpe="PLSQL apps utl_http support UTL_HTTP.END_RESPONSE",
    pihtpg="PLSQL apps utl_http support UTL_HTTP.GET_RESPONSE",
    pihtph="PLSQL apps utl_http support UTL_HTTP.GET_HEADER",
    pihtpl="PLSQL apps utl_http support UTL_HTTP.READ_LINE",
    pihtpn="PLSQL apps utl_http support UTL_HTTP.GET_HEADER_BY_NAME",
    pihtpr="PLSQL apps utl_http support UTL_HTTP.READ_RAW",
    pihtpr_ptr="PLSQL apps utl_http support UTL_HTTP.READ_RAW UTL_HTTP.READ_RAW_PTR",
    pihtpt="PLSQL apps utl_http support UTL_HTTP.READ_TEXT",
    pihtqa="PLSQL apps utl_http support UTL_HTTP.SET_AUTHENTICATION",
    pihtqbcs="PLSQL apps utl_http support UTL_HTTP.SET_REQ_BODY_CHARSET",
    pihtqces="PLSQL apps utl_http support UTL_HTTP.SET_REQ_CONTENT_ENC_SUPPORT",
    pihtqcksp="PLSQL apps utl_http support UTL_HTTP.SET_COOKIE_SUPPORT",
    pihtqe="PLSQL apps utl_http support UTL_HTTP.END_REQUEST",
    pihtqec="PLSQL apps utl_http support UTL_HTTP.END_REQUEST UTL_HTTP.SET_REQ_RESPONSE_ERROR_CHECK",
    pihtqfrd="PLSQL apps utl_http support UTL_HTTP.SET_FOLLOW_REDIRECT",
    pihtqg="PLSQL apps utl_http support UTL_HTTP.BEGIN_REQUEST_I",
    pihtqh="PLSQL apps utl_http support UTL_HTTP.SET_HEADER",
    pihtql="PLSQL apps utl_http support UTL_HTTP.WRITE_LINE",
    pihtqp="PLSQL apps utl_http support UTL_HTTP.SET_PROPERTY",
    pihtqpc="PLSQL apps utl_http support UTL_HTTP.SET_PROPERTY UTL_HTTP.SET_REQ_PERSISTENT_CONN",
    pihtqt="PLSQL apps utl_http support UTL_HTTP.WRITE_TEXT",
    pihtqtxto="PLSQL apps utl_http support UTL_HTTP.WRITE_TEXT UTL_HTTP.SET_REQ_TRANSFER_TIMEOUT",
    pihtqw="PLSQL apps utl_http support UTL_HTTP.WRITE_RAW",
    pihtsbcs="PLSQL apps utl_http support UTL_HTTP.SET_BODY_CHARSET",
    pihtsces="PLSQL apps utl_http support UTL_HTTP.SET_CONTENT_ENCODING_SUPPORT",
    pihtscksp="PLSQL apps utl_http support UTL_HTTP.SET_COOKIE_SUPPORT",
    pihtsec="PLSQL apps utl_http support UTL_HTTP.SET_RESPONSE_ERROR_CHECK",
    pihtSend="PLSQL apps utl_http support send tcp request",
    pihtses="PLSQL apps utl_http support UTL_HTTP.SET_DETAILED_EXCP_SUPPORT",
    pihtsfrd="PLSQL apps utl_http support UTL_HTTP.SET_FOLLOW_REDIRECT",
    pihtspcsp="PLSQL apps utl_http support UTL_HTTP.SET_PERSISTENT_CONN_SUPPORT",
    pihtspxy="PLSQL apps utl_http support UTL_HTTP.SET_PROXY",
    pihtstxto="PLSQL apps utl_http support UTL_HTTP.SET_TRANSFER_TIMEOUT",
    pihtsw="PLSQL apps utl_http support UTL_HTTP.SET_WALLET",
    pii18n="PLSQL apps utl_i18n support",
    pii18n_common_list="PLSQL apps utl_i18n support UTL_I18N.COMMON_LIST_I",
    pii18n_get_max_character_size="PLSQL apps utl_i18n support UTL_I18N.GET_MAX_CHARACTER_SIZE",
    pii18n_get_translation="PLSQL apps utl_i18n support UTL_I18N.GET_TRANSLATION_I",
    pii18nc2="PLSQL apps utl_i18n support UTL_I18N.CONVERT2_CHAR CONVERT2_NCHAR",
    pii18ncc="PLSQL apps utl_i18n support UTL_I18N.CONVERT_CHAR CONVERT_NCHAR",
    pii18nch="PLSQL apps utl_i18n support UTL_I18N.GET_CHARSET_HANDLE",
    pii18ncr="PLSQL apps utl_i18n support UTL_I18N.CONVERT_RAW",
    pii18ncv="PLSQL apps utl_i18n support UTL_I18N.CNV_XML_SQL",
    pii18ndc="PLSQL apps utl_i18n support UTL_I18N.GET_DEFCHARSET",
    pii18ner="PLSQL apps utl_i18n support UTL_I18N.ESCAPE_REF_I",
    pii18ninit="PLSQL apps utl_i18n support UTL_I18N.INITIALIZE",
    pii18nm2="PLSQL apps utl_i18n support UTL_I18N.MAP_NAME_II",
    pii18nme="PLSQL apps utl_i18n support UTL_I18N.MAP_EMAIL",
    pii18nmn="PLSQL apps utl_i18n support UTL_I18N.MAP_NAME_I",
    pii18ntr="PLSQL apps utl_i18n support UTL_I18N.TRANSLITERATE",
    pii18nue="PLSQL apps utl_i18n support UTL_I18N.UNESCAPE_REFERENCE",
    pii18nvce="PLSQL apps utl_i18n support UTL_I18N.VALIDATE_CHARACTER_ENCODING",
    pii18nvce_clob="PLSQL apps utl_i18n support UTL_I18N.VALIDATE_CHARACTER_ENCODING UTL_I18N.VALIDATE_CHARACTER_ENCODING",
    pii18nvd="PLSQL apps utl_i18n support UTL_I18N.VALIDATE_SQLNAME",
    piin="PLSQL apps utl_inaddr support",
    piinadgha="PLSQL apps utl_inaddr support UTL_INADDR.GET_HOST_ADDRESS_I",
    piinadghn="PLSQL apps utl_inaddr support UTL_INADDR.GET_HOST_NAME_I",
    pilm="PLSQL apps utl_lms support",
    pilmsfm="PLSQL apps utl_lms support UTL_LMS.FORMAT_MESSAGE",
    pilmsgm="PLSQL apps utl_lms support UTL_LMS.GET_MESSAGE",
    pinl="PLSQL apps utl_nla support",
    pinlaB_dasum="PLSQL apps utl_nla support UTL_NLA.BLAS_ASUM_",
    pinlaB_daxpy="PLSQL apps utl_nla support UTL_NLA.BLAS_AXPY_",
    pinlaB_dcopy="PLSQL apps utl_nla support UTL_NLA.BLAS_COPY_",
    pinlaB_ddot="PLSQL apps utl_nla support UTL_NLA.BLAS_DOT_",
    pinlaB_dgbmv="PLSQL apps utl_nla support UTL_NLA.BLAS_GBMV_",
    pinlaB_dgemm="PLSQL apps utl_nla support UTL_NLA.BLAS_GEMM_",
    pinlaB_dgemv="PLSQL apps utl_nla support UTL_NLA.BLAS_GEMV_",
    pinlaB_dger="PLSQL apps utl_nla support UTL_NLA.BLAS_GER_",
    pinlaB_dnrm2="PLSQL apps utl_nla support UTL_NLA.BLAS_NRM2_",
    pinlaB_drot="PLSQL apps utl_nla support UTL_NLA.BLAS_ROT_",
    pinlaB_drotg="PLSQL apps utl_nla support UTL_NLA.BLAS_ROT_ UTL_NLA.BLAS_ROTG_",
    pinlaB_dsbmv="PLSQL apps utl_nla support UTL_NLA.BLAS_SBMV_",
    pinlaB_dscal="PLSQL apps utl_nla support UTL_NLA.BLAS_SCAL_",
    pinlaB_dspmv="PLSQL apps utl_nla support UTL_NLA.BLAS_SPMV_",
    pinlaB_dspr="PLSQL apps utl_nla support UTL_NLA.BLAS_SPR_",
    pinlaB_dspr2="PLSQL apps utl_nla support UTL_NLA.BLAS_SPR_ UTL_NLA.BLAS_SPR2_",
    pinlaB_dswap="PLSQL apps utl_nla support UTL_NLA.BLAS_SWAP_",
    pinlaB_dsymm="PLSQL apps utl_nla support UTL_NLA.BLAS_SYMM_",
    pinlaB_dsymv="PLSQL apps utl_nla support UTL_NLA.BLAS_SYMV_",
    pinlaB_dsyr="PLSQL apps utl_nla support UTL_NLA.BLAS_SYR_",
    pinlaB_dsyr2="PLSQL apps utl_nla support UTL_NLA.BLAS_SYR_ UTL_NLA.BLAS_SYR2_",
    pinlaB_dsyr2k="PLSQL apps utl_nla support UTL_NLA.BLAS_SYR_ UTL_NLA.BLAS_SYR2_ UTL_NLA.BLAS_SYR2K_",
    pinlaB_dsyrk="PLSQL apps utl_nla support UTL_NLA.BLAS_SYR_ UTL_NLA.BLAS_SYRK_",
    pinlaB_dtbsm="PLSQL apps utl_nla support UTL_NLA.BLAS_TBMV_",
    pinlaB_dtbsv="PLSQL apps utl_nla support UTL_NLA.BLAS_TBSV_",
    pinlaB_dtpmv="PLSQL apps utl_nla support UTL_NLA.BLAS_TPMV_",
    pinlaB_dtprv="PLSQL apps utl_nla support UTL_NLA.BLAS_TPMV_",
    pinlaB_dtpsv="PLSQL apps utl_nla support UTL_NLA.BLAS_TPSV_",
    pinlaB_dtrmm="PLSQL apps utl_nla support UTL_NLA.BLAS_TRMM_",
    pinlaB_dtrmv="PLSQL apps utl_nla support UTL_NLA.BLAS_TRMV_",
    pinlaB_dtrsm="PLSQL apps utl_nla support UTL_NLA.BLAS_TRSM_",
    pinlaB_dtrsv="PLSQL apps utl_nla support UTL_NLA.BLAS_TRSV_",
    pinlaB_idamax="PLSQL apps utl_nla support UTL_NLA.BLAS_IAMAX_",
    pinlaB_isamax="PLSQL apps utl_nla support UTL_NLA.BLAS_IAMAX_",
    pinlaB_sasum="PLSQL apps utl_nla support UTL_NLA.BLAS_ASUM_",
    pinlaB_saxpy="PLSQL apps utl_nla support UTL_NLA.BLAS_AXPY_",
    pinlaB_scopy="PLSQL apps utl_nla support UTL_NLA.BLAS_COPY_",
    pinlaB_sdot="PLSQL apps utl_nla support UTL_NLA.BLAS_DOT_",
    pinlaB_sgbmv="PLSQL apps utl_nla support UTL_NLA.BLAS_GBMV_",
    pinlaB_sgemm="PLSQL apps utl_nla support UTL_NLA.BLAS_GEMM_",
    pinlaB_sgemv="PLSQL apps utl_nla support UTL_NLA.BLAS_GEMV_",
    pinlaB_sger="PLSQL apps utl_nla support UTL_NLA.BLAS_GER_",
    pinlaB_snrm2="PLSQL apps utl_nla support UTL_NLA.BLAS_NRM2_",
    pinlaB_srot="PLSQL apps utl_nla support UTL_NLA.BLAS_ROT_",
    pinlaB_srotg="PLSQL apps utl_nla support UTL_NLA.BLAS_ROT_ UTL_NLA.BLAS_ROTG_",
    pinlaB_ssbmv="PLSQL apps utl_nla support UTL_NLA.BLAS_SBMV_",
    pinlaB_sscal="PLSQL apps utl_nla support UTL_NLA.BLAS_SCAL_",
    pinlaB_sspmv="PLSQL apps utl_nla support UTL_NLA.BLAS_SPMV_",
    pinlaB_sspr="PLSQL apps utl_nla support UTL_NLA.BLAS_SPR_",
    pinlaB_sspr2="PLSQL apps utl_nla support UTL_NLA.BLAS_SPR_ UTL_NLA.BLAS_SPR2_",
    pinlaB_sswap="PLSQL apps utl_nla support UTL_NLA.BLAS_SWAP_",
    pinlaB_ssymm="PLSQL apps utl_nla support UTL_NLA.BLAS_SYMM_",
    pinlaB_ssymv="PLSQL apps utl_nla support UTL_NLA.BLAS_SYMV_",
    pinlaB_ssyr="PLSQL apps utl_nla support UTL_NLA.BLAS_SYR_",
    pinlaB_ssyr2="PLSQL apps utl_nla support UTL_NLA.BLAS_SYR_ UTL_NLA.BLAS_SYR2_",
    pinlaB_ssyr2k="PLSQL apps utl_nla support UTL_NLA.BLAS_SYR_ UTL_NLA.BLAS_SYR2_ UTL_NLA.BLAS_SYR2K_",
    pinlaB_ssyrk="PLSQL apps utl_nla support UTL_NLA.BLAS_SYR_ UTL_NLA.BLAS_SYRK_",
    pinlaB_stbmv="PLSQL apps utl_nla support UTL_NLA.BLAS_TBMV_",
    pinlaB_stbsv="PLSQL apps utl_nla support UTL_NLA.BLAS_TBSV_",
    pinlaB_stpmv="PLSQL apps utl_nla support UTL_NLA.BLAS_TPMV_",
    pinlaB_stpsv="PLSQL apps utl_nla support UTL_NLA.BLAS_TPSV_",
    pinlaB_strmm="PLSQL apps utl_nla support UTL_NLA.BLAS_TRMM_",
    pinlaB_strmv="PLSQL apps utl_nla support UTL_NLA.BLAS_TRMV_",
    pinlaB_strsm="PLSQL apps utl_nla support UTL_NLA.BLAS_TRSM_",
    pinlaB_strsv="PLSQL apps utl_nla support UTL_NLA.BLAS_TRSV_",
    pinlaL_dgbsv="PLSQL apps utl_nla support UTL_NLA_LAPACK_GBSV_",
    pinlaL_dgees="PLSQL apps utl_nla support UTL_NLA.LAPACK_GEES_",
    pinlaL_dgeev="PLSQL apps utl_nla support UTL_NLA.LAPACK_GEEV_",
    pinlaL_dgels="PLSQL apps utl_nla support UTL_NLA.LAPACK_GELS_",
    pinlaL_dgesdd="PLSQL apps utl_nla support UTL_NLA.LAPACK_GESDD_",
    pinlaL_dgesv="PLSQL apps utl_nla support UTL_NLA.LAPACK_GESV_",
    pinlaL_dgesvd="PLSQL apps utl_nla support UTL_NLA.LAPACK_GESV_ UTL_NLA.LAPACK_GESVD_",
    pinlaL_dgtsv="PLSQL apps utl_nla support UTL_NLA.LAPACK_GTSV_",
    pinlaL_dpbsv="PLSQL apps utl_nla support UTL_NLA.LAPACK_PBSV_",
    pinlaL_dposv="PLSQL apps utl_nla support UTL_NLA_LAPACK_POSV_",
    pinlaL_dppsv="PLSQL apps utl_nla support UTL_NLA.LAPACK_PPSV_",
    pinlaL_dptsv="PLSQL apps utl_nla support UTL_NLA.LAPACK_PTSV_",
    pinlaL_dsbev="PLSQL apps utl_nla support UTL_NLA.LAPACL_SBEV_",
    pinlaL_dsbevd="PLSQL apps utl_nla support UTL_NLA.LAPACL_SBEV_ UTL_NLA.LAPACL_SBEVD_",
    pinlaL_dspev="PLSQL apps utl_nla support UTL_NLA.LAPACK_SPEV_",
    pinlaL_dspevd="PLSQL apps utl_nla support UTL_NLA.LAPACK_SPEV_ UTL_NLA.LAPACK_SPEVD_",
    pinlaL_dspsv="PLSQL apps utl_nla support UTL_NLA.LAPACK_SPSV_",
    pinlaL_dstev="PLSQL apps utl_nla support UTL_NLA.LAPACK_STEV_",
    pinlaL_dstevd="PLSQL apps utl_nla support UTL_NLA.LAPACK_STEV_ UTL_NLA.LAPACK_STEVD_",
    pinlaL_dsyev="PLSQL apps utl_nla support UTL_NLA.LAPACK_SYEV_",
    pinlaL_dsyevd="PLSQL apps utl_nla support UTL_NLA.LAPACK_SYEV_ UTL_NLA.LAPACK_SYEVD_",
    pinlaL_dsysv="PLSQL apps utl_nla support UTL_NLA.LAPACK_SYSV_",
    pinlaL_sgbsv="PLSQL apps utl_nla support UTL_NLA_LAPACK_GBSV_",
    pinlaL_sgees="PLSQL apps utl_nla support UTL_NLA.LAPACK_GEES_",
    pinlaL_sgeev="PLSQL apps utl_nla support UTL_NLA.LAPACK_GEEV_",
    pinlaL_sgels="PLSQL apps utl_nla support UTL_NLA.LAPACK_GELS_",
    pinlaL_sgesdd="PLSQL apps utl_nla support UTL_NLA.LAPACK_GESDD_",
    pinlaL_sgesv="PLSQL apps utl_nla support UTL_NLA.LAPACK_GESV_",
    pinlaL_sgesvd="PLSQL apps utl_nla support UTL_NLA.LAPACK_GESV_ UTL_NLA.LAPACK_GESVD_",
    pinlaL_sgtsv="PLSQL apps utl_nla support UTL_NLA.LAPACK_GTSV_",
    pinlaL_spbsv="PLSQL apps utl_nla support UTL_NLA.LAPACK_PBSV_",
    pinlaL_sposv="PLSQL apps utl_nla support UTL_NLA_LAPACK_POSV_",
    pinlaL_sppsv="PLSQL apps utl_nla support UTL_NLA.LAPACK_PPSV_",
    pinlaL_sptsv="PLSQL apps utl_nla support UTL_NLA.LAPACK_PTSV_",
    pinlaL_ssbev="PLSQL apps utl_nla support UTL_NLA.LAPACL_SBEV_",
    pinlaL_ssbevd="PLSQL apps utl_nla support UTL_NLA.LAPACL_SBEV_ UTL_NLA.LAPACL_SBEVD_",
    pinlaL_sspev="PLSQL apps utl_nla support UTL_NLA.LAPACK_SPEV_",
    pinlaL_sspevd="PLSQL apps utl_nla support UTL_NLA.LAPACK_SPEV_ UTL_NLA.LAPACK_SPEVD_",
    pinlaL_sspsv="PLSQL apps utl_nla support UTL_NLA.LAPACK_SPSV_",
    pinlaL_sstev="PLSQL apps utl_nla support UTL_NLA.LAPACK_STEV_",
    pinlaL_sstevd="PLSQL apps utl_nla support UTL_NLA.LAPACK_STEV_ UTL_NLA.LAPACK_STEVD_",
    pinlaL_ssyev="PLSQL apps utl_nla support UTL_NLA.LAPACK_SYEV_",
    pinlaL_ssyevd="PLSQL apps utl_nla support UTL_NLA.LAPACK_SYEV_ UTL_NLA.LAPACK_SYEVD_",
    pinlaL_ssysv="PLSQL apps utl_nla support UTL_NLA.LAPACK_SYSV_",
    pirg="PLSQL apps utl_raw support",
    pirg2bd="PLSQL apps utl_raw support UTL_RAW.PIRG2BD CAST_TO_BINARY_DOUBLE",
    pirg2bf="PLSQL apps utl_raw support UTL_RAW.PIRG2BF CAST_TO_BINARY_FLOAT",
    pirg2bi="PLSQL apps utl_raw support UTL_RAW.PIRG2BI CAST_TO_BINARY_INTEGER",
    pirg2mn="PLSQL apps utl_raw support UTL_RAW.PIRG2MN CAST_TO_NUMBER",
    pirg2nvc="PLSQL apps utl_raw support UTL_RAW.PIRG2NVC CAST_TO_NVARCHAR2",
    pirg2rw="PLSQL apps utl_raw support UTL_RAW.PIRG2RW CAST_TO_RAW",
    pirg2vc="PLSQL apps utl_raw support UTL_RAW.PIRG2VC CAST_TO_VARCHAR2",
    pirgcmp="PLSQL apps utl_raw support UTL_RAW.PIRGCMP COMPARE",
    pirgcnr="PLSQL apps utl_raw support UTL_RAW.PIRGCNR CONVERT",
    pirgcom="PLSQL apps utl_raw support UTL_RAW.PIRGCOM BIT_COMPLEMENT",
    pirgcon="PLSQL apps utl_raw support UTL_RAW.PIRGCON CONCAT",
    pirgcop="PLSQL apps utl_raw support UTL_RAW.PIRGCOP COPIES",
    pirgfbd="PLSQL apps utl_raw support UTL_RAW.PIRGFBF CAST_FROM_BINARY_DOUBLE",
    pirgfbf="PLSQL apps utl_raw support UTL_RAW.PIRGFBF CAST_FROM_BINARY_FLOAT",
    pirgfbi="PLSQL apps utl_raw support UTL_RAW.PIRGFBI CAST_FROM_BINARY_INTEGER",
    pirgfnm="PLSQL apps utl_raw support UTL_RAW.PIRGFNM CAST_FROM_NUMBER",
    pirglen="PLSQL apps utl_raw support UTL_RAW.PIRGLEN LENGTH",
    pirgopr="PLSQL apps utl_raw support UTL_RAW.PIRGOPR BIT_AND BIT_OR BIT_XOR",
    pirgovr="PLSQL apps utl_raw support UTL_RAW.PIRGOVR OVERLAY",
    pirgrev="PLSQL apps utl_raw support UTL_RAW.PIRGREV REVERSE",
    pirgsub="PLSQL apps utl_raw support UTL_RAW.PIRGSUB SUBSTR",
    pirgtrn="PLSQL apps utl_raw support UTL_RAW.PIRGTRN TRANSLATE",
    pirgtrs="PLSQL apps utl_raw support UTL_RAW.PIRGTRS TRANSLITERATE",
    pirgxra="PLSQL apps utl_raw support UTL_RAW.PIRGXRA XRANGE",
    pism="PLSQL apps utl_smtp support",
    pismescdot="PLSQL apps utl_smtp support UTL_SMPT.ESCAPE_DOT_I",
    pismmacmd5="PLSQL apps utl_smtp support UTL_SMTP.MAC_MD5_I",
    pismraise="PLSQL apps utl_smtp support UTL_SMPT.RAISE_I",
    pitc="PLSQL apps utl_tcp support",
    pitcct="PLSQL apps utl_tcp support UTL_TCP.CONNECT_I",
    pitcda="PLSQL apps utl_tcp support UTL_TCP.DISCONNECT_ALL_I",
    pitcdct="PLSQL apps utl_tcp support UTL_TCP.DISCONNECT_I",
    pitcfl="PLSQL apps utl_tcp support UTL_TCP.FLUSH_I",
    pitcinit="PLSQL apps utl_tcp support UTL_TCP.INITIALIZE_I",
    pitcr="PLSQL apps utl_tcp support UTL_TCP.READ_I",
    pitcra="PLSQL apps utl_tcp support UTL_TCP.READ_I UTL_TCP.AVAILABLE_I",
    pitcrl="PLSQL apps utl_tcp support UTL_TCP.READ_I UTL_TCP.READ_LINE_",
    pitcrt="PLSQL apps utl_tcp support UTL_TCP.READ_I UTL_TCP.READ_TEXT_I",
    pitcssl="PLSQL apps utl_tcp support UTL_TCP.START_SSL_I",
    pitcw="PLSQL apps utl_tcp support UTL_TCP.WRITE_I",
    pitcwl="PLSQL apps utl_tcp support UTL_TCP.WRITE_I UTL_TCP.WRITE_LINE_I",
    pitcwt="PLSQL apps utl_tcp support UTL_TCP.WRITE_I UTL_TCP.WRITE_TEXT_I",
    pitsk="PLSQL apps ??",
    piur="PLSQL apps utl_url support",
    piuriesc="PLSQL apps utl_url support UTL_URL.ESCAPE_I",
    piuriune="PLSQL apps utl_url support UTL_URL.UNESCAPE_I",
    pk="PLSQL KG interface",
    pkrdi="PLSQL KG interface ??",
    pl="PLSQL infrastructure",
    plck="PLSQL infrastructure ??",
    plio="PLSQL infrastructure object instantiation",
    pliodl="PLSQL infrastructure object instantiation delete function",
    plitblm="PLSQL infrastructure PLSQL apps",
    pls="PLSQL infrastructure PLSQL PSD standalones",
    plslm="PLSQL infrastructure PLSQL PSD standalones ncomp processing",
    plsm="PLSQL infrastructure PLSQL PSD standalones plsql handling collections",
    plsql_run="PLSQL infrastructure PLSQL PSD standalones single entry point for top level pfrrun and penrun",
    plst="PLSQL infrastructure PLSQL PSD standalones PLSQL code execution",
    plswa="PLSQL infrastructure PLSQL PSD standalones Programmatic Interfaces to/from PL/SQL",
    plzsql="PLSQL infrastructure STANDARD.PLZSQL SQL_DDL",
    pmuc="plsql handling collections",
    pmuo="plsql handling collections",
    pmux="plsql handling collections",
    pncutil="PLSQL infrastructure",
    pp="PLSQL infrastructure",
    pri="PLSQL remote interface",
    pricbr="PLSQL remote interface callback, remote",
    prient="PLSQL remote interface run given (rpc) entrypoint",
    prient2="PLSQL remote interface run given (rpc) entrypoint common code to run given entrypoint, could be rpc or non-rpc",
    prifold="PLSQL remote interface rpc forwarding to older releases",
    priold="PLSQL remote interface rpc forwarding to older releases",
    prm="parameter handling with sql layer",
    prs="parse",
    prsase="parse initialisation parameter names",
    prscmd="parse SQL command (syntax check)",
    prsctc="parse create table/cluster",
    prsdel="parse delete",
    prsdrv="parse driver (?)",
    prspo_proc_opts="parse (or only validate) PHysical Attribute specification",
    prsrss="parse recursive alter system or session",
    prssz="parse parse context to be saved",
    prsxpl="parse explain statement",
    ps="PLSQL infrastructure",
    psd="PLSQL infrastructure programmatic interfaces to/from",
    psd_asct="PLSQL infrastructure programmatic interfaces to/from DBMS_SESSION.PSD_ASCT ADD_SQL_CONNECTION_TEST",
    psd_dct="PLSQL infrastructure programmatic interfaces to/from DBMS_SESSION.PSD_DCT DISABLE_CONNECTION_TEST",
    psd_dsct="PLSQL infrastructure programmatic interfaces to/from DBMS_SESSION.PSD_DSCT DELETE_SQL_CONNECTION_TEST",
    psd_ect="PLSQL infrastructure programmatic interfaces to/from DBMS_SESSION.ECT ENABLE_CONNECTION_TEST",
    psd_package_memory_utilizatio2="PLSQL infrastructure programmatic interfaces to/from DBMS_SESSION.PSD_PACKAGE_MEMORY_UTILIZATIO2 GET_PACKAGE_MEMORY_UTILIZATION",
    psd_package_memory_utilization="PLSQL infrastructure programmatic interfaces to/from DBMS_SESSION.PSD_PACKAGE_MEMORY_UTILIZATION",
    psd_set_schema_deferred="PLSQL infrastructure programmatic interfaces to/from DBMS_SESSION.PSD_SET_SCHEMA_DEFERRED SET_CURRENT_SCHEMA_DEFERRED",
    psdanam="PLSQL infrastructure programmatic interfaces to/from DBMS_UTILITY.PSDANAM LNAME_PARSE",
    psdbnd="PLSQL infrastructure programmatic interfaces to/from manage bind variables",
    psdcatet="PLSQL infrastructure programmatic interfaces to/from DBMS_UTILITY.PSD_CATET CREATE_ALTER_TYPE_ERROR_TABLE",
    psdcnam="PLSQL infrastructure programmatic interfaces to/from DBMS_UTILITY.PSDCNAM CANONICALIZE",
    psddbv="PLSQL infrastructure programmatic interfaces to/from DBMS_UTILITY.PSDDBV DB_VERSION",
    psdddl="PLSQL infrastructure programmatic interfaces to/from execute DDL",
    psddin="PLSQL infrastructure programmatic interfaces to/from DBMS_SESSION.PSDDIN RESET_PACKAGE",
    psddr0="PLSQL infrastructure programmatic interfaces to/from Null pointer definitions for ttcdrv callback and context.",
    psdevn="PLSQL infrastructure programmatic interfaces to/from plsql debugger",
    psdfmr="PLSQL infrastructure programmatic interfaces to/from DBMS_SESSION.PSDFMR FREE_UNUSED_USER_MEMORY",
    psdgbt="PLSQL infrastructure programmatic interfaces to/from get bind info",
    psdgcscn="PLSQL infrastructure programmatic interfaces to/from DBMS_TRANSACTION.PSDGCSCN GET_CURRENT_SCN",
    psdgtr="PLSQL infrastructure programmatic interfaces to/from DBMS_UTILITY.PSDGTR GET_TZ_TRANSITIONS",
    psdhot="PLSQL infrastructure programmatic interfaces to/from DBMS_SHARED_POOL.PSDHOT MARKHOT",
    psdicd="PLSQL infrastructure programmatic interfaces to/from plsql call c",
    psdire="PLSQL infrastructure programmatic interfaces to/from DBMS_SESSION.PSDIRE IS_ROLE_ENABLED",
    psdisa="PLSQL infrastructure programmatic interfaces to/from DBMS_SESSION.PSDISA IS_SESSION_ALIVE",
    psdkep="PLSQL infrastructure programmatic interfaces to/from DBMS_SHARED_POOL.PSDKEP KEEP",
    psdkepnew="PLSQL infrastructure programmatic interfaces to/from DBMS_SHARED_POOL.PSDKEP KEEP DBMS_SHARED_POOL.PSDKEPNEW",
    psdlcv="PLSQL infrastructure programmatic interfaces to/from DBMS_LOCK.PSDLCV",
    psdlgt="PLSQL infrastructure programmatic interfaces to/from DBMS_LOCK.PSDLGT",
    psdlrl="PLSQL infrastructure programmatic interfaces to/from DBMS_LOCK.PSDLRL",
    psdmsc="PLSQL infrastructure programmatic interfaces to/from system dependent misc functions",
    psdnal="PLSQL infrastructure programmatic interfaces to/from ??",
    psdnohot="PLSQL infrastructure programmatic interfaces to/from DBMS_SHARED_POOL.PSDNOHOT UNMARKHOT",
    psdocs="PLSQL infrastructure programmatic interfaces to/from DBMS_UTILITY.PSDOCS OLD_CURRENT_SCHEMA",
    psdocu="PLSQL infrastructure programmatic interfaces to/from DBMS_UTILITY.PSDOCU OLD_CURRENT_USER",
    psdpgi="PLSQL infrastructure programmatic interfaces to/from open and close cursor support",
    psdpur="PLSQL infrastructure programmatic interfaces to/from DBMS_SHARED_POOL.PSDPUR PURGE",
    psdpurnew="PLSQL infrastructure programmatic interfaces to/from DBMS_SHARED_POOL.PSDPUR PURGE DBMS_SHARED_POOL.PSDPURNEW",
    psdrin="PLSQL infrastructure programmatic interfaces to/from DBMS_SESSION.PSDRIN REINITIALIZE",
    psdstfp="PLSQL infrastructure programmatic interfaces to/from DBMS_DDL.PSDSTFP",
    psduis="PLSQL infrastructure programmatic interfaces to/from DBMS_SESSION.PSDUIS UNIQUE_SESSION_ID",
    psdwat="PLSQL infrastructure programmatic interfaces to/from DBMS_DG.PSDWAT DBMS_LOCK.PSDWAT DBMS_SESSION.PSDWAT SLEEP",
    psf="PLSQL infrastructure instantiating plsql in library cache",
    pso="PLSQL infrastructure PLSQL PSD generic",
    psu="PLSQL infrastructure PLSQL PSD generic",
    psx="PLSQL infrastructure PLSQL PSD standalones",
    pt="PLSQL IDL",
    ptdadh="PLSQL IDL ??",
    ptf="PLSQL IDL polymorphic table functions",
    ptkin="PLSQL IDL ??",
    pu="PLSQL infrastructure",
    q="query",
    qba="query buffer allocation",
    qbadrv="query buffer allocation create control structures",
    qbaopn="query buffer allocation create control structures",
    qc="query compile",
    qcdl="query compile dictionary lookup",
    qcdldtin="query compile dictionary lookup dependency table insert",
    qcdlgui="query compile dictionary lookup get user id",
    qcdlSynonymTranslation="query compile dictionary lookup translate synonym to object",
    qcdo="query compile dictionary support for objects",
    qcdoloi="query compile dictionary support for objects load object specific information",
    qci="query compile language parser and semantic analyser",
    qciSetPlSqlCtx="query compile language parser and semantic analyser set plsql context during a compile",
    qcop="query compile parse",
    qcp="query compile parse",
    qcpi="query compile parse interim",
    qcpia="query compile parse interim arithmetic",
    qcpiaex="query compile parse interim arithmetic expression",
    qcpib="query compile parse interim boolean",
    qcpibex="query compile parse interim boolean expression",
    qcpibfa="query compile parse interim boolean factor",
    qcpibte="query compile parse interim boolean term",
    qcpicmd="query compile parse interim command",
    qcpiere="query compile parse interim expression relop expression",
    qcpierr="query compile parse interim raise error",
    qcpiidn="query compile parse interim identifier",
    qcpilcl="query compile parse interim logical clause",
    qcpilcl0="query compile parse interim logical clause (private)",
    qcpiltb="query compile parse interim lock table command",
    qcpiq="query compile parse interim query(?)",
    qcpisqt="query compile parse interim sql text",
    qcpitnam="query compile parse interim table name",
    qcpitnm="query compile parse interim table name",
    qcpl="query compile parse lexer",
    qcplgnt="query compile parse lexer get next token",
    qcplgte="query compile parse lexer group SQL text (?)",
    qcs="query compile semantic analysis (parser)",
    qcsbxl="query compile semantic analysis (parser) first round of privilege checking",
    qcsCheckPriv="query compile semantic analysis (parser) check privileges",
    qcse="query compile semantic analysis (parser) expand",
    qcsevw="query compile semantic analysis (parser) expand view",
    qcsfccc="query compile semantic analysis ??",
    qcsIsColInFro="query compile semantic analysis ??",
    qcsj="query compile semantic analysis (parser) java(?)",
    qcso="query compile semantic analysis (parser) OBJECTS",
    qcsp="query compile semantic analysis (parser) process",
    qcspafq="query compile semantic analysis (parser) process all frodefs in query block",
    qcsphnt="query compile semantic analysis (parser) process hint?",
    qcspqb="query compile semantic analysis (parser) process query blocks",
    qcspqbDescendents="query compile semantic analysis (parser) process query blocks and descendents (this processes qbc and its inner qbc's, but not its sibling (qbcnxt) query blocks)",
    qcsprfro="query compile semantic analysis (parser) process frodef",
    qcsprfro_tree="query compile semantic analysis (parser) process frodef tree (handles ANSI join frodefs)",
    qcsraic="query compile semantic analysis ??",
    qcsridn="query compile semantic analysis ??",
    qcsRslvColWithinQbc="query compile semantic analysis ??",
    qcsRslvName="query compile semantic analysis ??",
    qcsWeakColRslv="query compile semantic analysis ??",
    qct="query compile type check operations",
    qctcopn="query compile type check operations typechecks the query block and its descendant",
    qctErr932="query compile type check operations raise ORA 932 (inconsistent data types)",
    qctErrConvertDataType="query compile type check operations error routine for data type conversions",
    qcto="query compile type check operations operators",
    qctopls="query compile type check operations operators typecheck OPTPLS operator",
    qcu="query compile utility",
    qcuErr="query compile utility error",
    qcuErroep="query compile utility error oracle error position",
    qcuSigErr="query compile utility error raised by signal",
    qe="query execute",
    qeae="query execute aggregate (order by) elimination (?)",
    qeaeCn1Serial="query execute aggregate (order by) elimination (?) count function",
    qec="query execute (edit) checks",
    qecdrv="query execute (edit) checks driver",
    qecgoc="query execute (edit) checks group operand check",
    qecrlssub="query execute (edit) checks release resources subroutine",
    qecsel="query execute (edit) checks select list",
    qecvdm="query execute (edit) checks view dml",
    qee="query execute SQL execution",
    qer="query execute rowsource",
    qerae="query execute rowsource and equal",
    qeraeMax="query execute rowsource and equal max",
    qeraeMinmax="query execute rowsource and equal min/max",
    qerandv="query execute rowsource approximate NDV",
    qerandvFetch="query execute rowsource approximate NDV fetch",
    qerandvRop="query execute rowsource approximate NDV row procedure callback",
    qerba="query execute rowsource bitmap index and",
    qerbc="query execute rowsource bitmap index compaction",
    qerbi="query execute rowsource bitmap index creation",
    qerbl="query execute rowsource Bloom Filter",
    qerbm="query execute rowsource minus",
    qerbo="query execute rowsource bitmap index or",
    qerbu="query execute rowsource bitmap index unlimited or",
    qerbx="query execute rowsource bitmap index access",
    qercb="query execute rowsource connect by",
    qercbi="query execute rowsource connect by support functions",
    qerco="query execute rowsource count",
    qercoFetch="query execute rowsource count fetch",
    qerdl="query execute rowsource delete",
    qerep="query execute rowsource explosion",
    qerf="query execute rowsource first row",
    qerff="query execute rowsource first row fifo buffer",
    qerfl="query execute rowsource first row filter definition",
    qerflFetchOutside="query execute rowsource first row filter definition fetch row from a row source",
    qerfu="query execute rowsource first row update",
    qerfx="query execute rowsource first row fixed table",
    qerfxArrayMaxSize="query execute rowsource first row fixed table array max size",
    qerfxFetch="query execute rowsource first row fixed table fetch",
    qerfxGCol="query execute rowsource first row fixed table get column",
    qerfxGConId="query execute rowsource first row fixed table get container id",
    qergh="query execute rowsource hash group by",
    qerghStart="query execute rowsource hash group by start",
    qergi="query execute rowsource granule iterator (partitioning? or PX granules?)",
    qergiFetch="query execute rowsource granule iterator (partitioning? or PX granules?) Fetch procedure of PX granule Iterator Row source Rowid",
    qergr="query execute rowsource group by rollup",
    qergs="query execute rowsource group by sort",
    qergsFetch="query execute rowsource group by sort fetch",
    qergv="query execute rowsource vector aggregate",
    qerhc="query execute rowsource hash clusters",
    qerhj="query execute rowsource hash join",
    qerhjadf="query execute rowsource hash join ??",
    qerhjAllocate="query execute rowsource hash join allocate",
    qerhjFetch="query execute rowsource hash join fetch",
    qerhjInnerProbeHashTable="query execute rowsource hash join inner probe hash table",
    qerhjWalkHashBucket="query execute rowsource hash join walk a list of pointers in a hash bucket and check for a match",
    qeril="query execute rowsource in list",
    qerim="query execute rowsource index maintenance",
    qerix="query execute rowsource index",
    qerixFetchFastFullScan="query execute rowsource index index fast full scan",
    qerixFetchSkipScan="query execute rowsource index index skip scan",
    qerixtFetch="query execute rowsource index fetch operation for index range scan",
    qerjo="query execute rowsource nested loop outer",
    qerjoFetch="query execute rowsource nested loop outer fetch from join rowsource",
    qerjot="query execute rowsource nested loop outer join tunneling",
    qerjotFetch="query execute rowsource nested loop outer join tunneling fetch",
    qerjotRowProc="query execute rowsource nested loop outer join tunneling ??",
    qerle="query execute rowsource linear execution implementation",
    qerli="query execute rowsource parallel create index",
    qerlt="query execute rowsource load table",
    qerlt_olev="query execute rowsource load table out-of-line columns, evaluate and stash away",
    qerlt_snv="query execute rowsource load table stash away and new values",
    qerltc="query execute rowsource load table conventional",
    qerltcFetch="query execute rowsource load table conventional main processing function",
    qerltcFreeMemory="query execute rowsource load table conventional free memory",
    qerltcPostInsertProcessing="query execute rowsource load table conventional post single row load processing",
    qerltcSingleRowLoad="query execute rowsource load table conventional main single row insertion function",
    qerltcStart="query execute rowsource load table conventional initialising function",
    qerltFetch="query execute rowsource load table fetch",
    qerltRop="query execute rowsource load table row procedure callback",
    qerns="query execute rowsource group by nosort",
    qeroc="query execute rowsource object collection iterator",
    qerocStart="query execute rowsource object collection iterator create a collection iterator row-source to iterate",
    qeroi="query execute rowsource extensibel indexing query component",
    qeroifcc="query execute rowsource extensibel indexing query component fast call close",
    qeroifcsu="query execute rowsource extensibel indexing query component fast call switch user",
    qeroiirc="query execute rowsource extensibel indexing query component invoke rowsource close",
    qerpa="query execute rowsource partition",
    qerpf="query execute rowsource query execution prefetch",
    qerpfFetch="query execute rowsource query execution prefetch fetch",
    qerpsel="query execute rowsource parallel execution PX selector",
    qerptf="query execute rowsource polymorphic table function execution",
    qerpx="query execute rowsource parallel execution",
    qerpxFetch="query execute rowsource parallel execution fetch method for parallelizer row source",
    qerpxSlaveFetch="query execute rowsource parallel execution fetch method row source",
    qerpxStart="query execute rowsource parallel execution start",
    qerrc="query execute rowsource vector translate",
    qerrm="query execute rowsource remote",
    qersc="query execute rowsource AQP",
    qerse="query execute rowsource set implementation",
    qerso="query execute rowsource sort",
    qersoFetch="query execute rowsource sort fetch from from a sort row source",
    qersoProcessULS="query execute rowsource sort process underlying row source",
    qersq="query execute rowsource sequence number",
    qerst="query execute rowsource statistics",
    qerstFetch="query execute rowsource statistics row source fetch",
    qertb="query execute rowsource table access",
    qertbFetch="query execute rowsource table access fetch",
    qertbFetchByRowId="query execute rowsource table access fetch using inderlying row source fetch by rowid or cluster key",
    qertbItOpen="query execute rowsource table access ??",
    qertbSaveMethod="query execute rowsource table access save IO request for batching(?)",
    qertbStart="query execute rowsource table access ??",
    qertq="query execute rowsource table queue (px)",
    qertqoFetch="query execute rowsource table queue (px) output table queue fetch method",
    qertqoInitRowDesc="query execute rowsource table queue (px) use tqo row vector to determine the partitioning columns",
    qerua="query execute rowsource union all",
    qeruaFetch="query execute rowsource union all fetch",
    qeruaStart="query execute rowsource union all start",
    qerup="query execute rowsource update",
    qerupFetch="query execute rowsource update fetch",
    qerus="query execute rowsource upsert",
    qerusAllocateX="query execute rowsource upsert allocate row source",
    qervw="query execute rowsource view",
    qervwFetch="query execute rowsource view fetch",
    qervwRowProcedure="query execute rowsource view row procedure",
    qerwn="query execute rowsource window",
    qerwnFetch="query execute rowsource window fetch",
    qerxj="query execute rowsource json",
    qerxl="query execute rowsource vector translate",
    qerxp="query execute rowsource XDB query",
    qerxt="query execute rowsource external table",
    qerxtAllocate="query execute rowsource external table row source allocate",
    qes="query execute services",
    qesaAggNonDist="query execute services create/compute non-distinct aggregates",
    qesaPackCols="query execute services pack columns into queue buffer",
    qesbl="query execute services bloom filter",
    qesblAlo="query execute services bloom filter allocate memory",
    qesblGetFilter="query execute services bloom filter get filter",
    qesblStart="query execute services bloom filter start",
    qesdp="query execute services adaptive features?",
    qesdpi="query execute services adaptive features? internationalisation (timezones)?",
    qesdpiBeginPrepare="query execute services adaptive features? internationalisation (timezones)? DBMS_DST.BEGIN_PREPARE_KERNEL",
    qesdpiBeginUpgrade="query execute services adaptive features? internationalisation (timezones)? DBMS_DST.BEGIN_UPGRADE_KERNEL",
    qesdpiChkPrivs="query execute services adaptive features? internationalisation (timezones)? DBMS_DST.CHECK_PRIVILEGES",
    qesdpiChkTZVer="query execute services adaptive features? internationalisation (timezones)? DBMS_DST.CHECK_TZ_VERSION",
    qesdpiEndPrepare="query execute services adaptive features? internationalisation (timezones)? DBMS_DST.END_PREPARE_KERNEL",
    qesdpiEndUpgrade="query execute services adaptive features? internationalisation (timezones)? DBMS_DST.END_UPGRADE_KERNEL",
    qesdpiFindAffTabs="query execute services adaptive features? internationalisation (timezones)? DBMS_DST.FIND_AFFECTED_TABLES_KERNEL",
    qesdpiGetAndLockDSTProp="query execute services adaptive features? internationalisation (timezones)? DBMS_DST.GET_AND_LOCK_DST_PROPERTY",
    qesdpiGetLatestTZVer="query execute services adaptive features? internationalisation (timezones)? DBMS_DST.GET_LATEST_TIMEZONE_VERSION",
    qesdpiGetSGAUpStateTyp="query execute services adaptive features? internationalisation (timezones)? DBMS_DST.SGA_UPGRADE_STATE",
    qesdpiLoadSecTZ="query execute services adaptive features? internationalisation (timezones)? DBMS_DST.LOAD_SECONDARY_KERNEL",
    qesdpiUnLoadSecTZ="query execute services adaptive features? internationalisation (timezones)? DBMS_DST.UNLOAD_SECONDARY_KERNEL",
    qesdpiUpgradeTable="query execute services adaptive features? internationalisation (timezones)? DBMS_DST.UPGRADE_TABLE_KERNEL",
    qesgv="query execute services vector aggregate",
    qesltc="query execute services load table conventional",
    qesma="query execute services partitioning",
    qesmaIsInterval="query execute services partitioning ??",
    qesmm="query execute services memory manager (pga)",
    qesmmCGetCurSize="query execute services memory manager (pga) ??",
    qesmmIPgaFreeCb="query execute services memory manager (pga) pga free callback",
    qespc="query execute services partitioning",
    qesrc="query execute services result cache",
    qesrcCM="query execute services result cache commit?",
    qesrcPS_BKDrv="query execute services result cache DBMS_RESULT_CACHE.BK_DRV BLACKLIST_ADD/REMOVE/CLEAR",
    qesrcPS_BKLst="query execute services result cache DBMS_RESULT_CACHE.BK_LST BLACK_LIST",
    qesrcPS_Byp="query execute services result cache DBMS_RESULT_CACHE.BYPASS_",
    qesrcPS_Del="query execute services result cache DBMS_RESULT_CACHE.DELETE_DEPENDENCY",
    qesrcPS_Flush="query execute services result cache DBMS_RESULT_CACHE.FLUSH_",
    qesrcPS_Inv="query execute services result cache DBMS_RESULT_CACHE.INVALIDATE_",
    qesrcPS_InvObj0="query execute services result cache DBMS_RESULT_CACHE.INVALIDATE_ DBMS_RESULT_CACHE.INVALIDATE_OBJECT0",
    qesrcPS_InvObj1="query execute services result cache DBMS_RESULT_CACHE.INVALIDATE_ DBMS_RESULT_CACHE.INVALIDATE_OBJECT1",
    qesrcPS_MemSta="query execute services result cache DBMS_RESULT_CACHE.MEMSTA",
    qesrcPS_MemSum="query execute services result cache DBMS_RESULT_CACHE.MEMSUM",
    qesrcPS_NspCnt="query execute services result cache DBMS_RESULT_CACHE.NAMESPACES",
    qesrcPS_ReliesOn="query execute services result cache DBMS_RESULT_CACHE.RELIES_ON_",
    qesrcPS_Status="query execute services result cache DBMS_RESULT_CACHE.STATUS_",
    qesSageEnabled="query execute services test if exadata storage servers are used",
    qesst="query execute services statistic functions",
    qesstPIncBeta="query execute services statistic functions DBMS_STAT_FUNCS_AUX.IN_BETA_CALLOUT",
    qesstPIncGamma="query execute services statistic functions DBMS_STAT_FUNCS.INC_GAMMA_CALLOUT",
    qesstPIncGammaC="query execute services statistic functions DBMS_STAT_FUNCS.INC_GAMMA_CALLOUT DBMS_STAT_FUNCS_AUX.INC_GAMMA_C_CALLOUT",
    qesstPKSSig="query execute services statistic functions DBMS_STAT_FUNCS.SIG_KS_CALLOUT",
    qesxl="query execute services vector translate",
    qesxlp="query execute services vector translate PX",
    qjsn="query json",
    qk="query kernel",
    qka="query kernel allocation",
    qkadrv="query kernel allocation allocate query structures",
    qkadrv2="query kernel allocation allocate query structures 2",
    qkadrv2Post="query kernel allocation allocate query structures 2 post processing",
    qkaffsindex="query kernel allocation fast full scan index",
    qkagby="query kernel allocation group by",
    qkajoi="query kernel allocation join processing",
    qkanindex="query kernel allocation analyzes the usage of the argument non-clustered index",
    qkaqkn="query kernel allocation row source allocation",
    qkaset="query kernel allocation set expression",
    qkatab="query kernel allocation runtime allocation for base table row sources",
    qkatrv="query kernel allocation traverse set expression tree",
    qkauna="query kernel allocation union or union all",
    qke="query kernel expressions",
    qkexl="query kernel expressions vector translate",
    qkk="query kernel allocate",
    qkn="query kernel allocate",
    qknr="query kernel allocate rowsets setup",
    qks="query kernel sql",
    qks3t="query kernel sql temp table transformation",
    qksan="query kernel sql analyze",
    qksbg="query kernel sql bind (variable) management(?)",
    qksce="query kernel sql cursor evaluation",
    qksctx="query kernel sql MPGE",
    qksds="query kernel sql Dynamic Sampling Services (ADS)",
    qksdsCheckPreds="query kernel sql Dynamic Sampling Services (ADS) check and find usable predicates",
    qksdsDumpResult="query kernel sql Dynamic Sampling Services (ADS) dump results (to trace file); trace[ADS]",
    qksdsExecute="query kernel sql Dynamic Sampling Services (ADS) execute",
    qksdsExeStmt="query kernel sql Dynamic Sampling Services (ADS) execute sql for actual sampling",
    qksdsFindSampleTable="query kernel sql Dynamic Sampling Services (ADS) find tables to sample",
    qksdsInitCtx="query kernel sql Dynamic Sampling Services (ADS) start and initialize ADS",
    qksfroIsFastDual="query kernel sql frolist is fast dual",
    qksht="query kernel sql hints",
    qksmm="query kernel sql compiler memory management",
    qksmms="query kernel sql compiler memory management simulation",
    qksop="query kernel sql compilter operand processing",
    qkspm="query kernel sql plan management",
    qksptf="query kernel sql polymorphic table functions compilation",
    qksqb="query kernel sql Query compilation for query blocks",
    qksqbApplyToQbc="query kernel sql Query compilation for query blocks apply to QB",
    qksqbApplyToQbcLoc="query kernel sql Query compilation for query blocks apply to QB local implementation",
    qksqbCreateName="query kernel sql Query compilation for query blocks create name",
    qksqbGenerateName="query kernel sql Query compilation for query blocks generate name",
    qksqbRegister="query kernel sql Query compilation for query blocks register",
    qksrc="query kernel sql result cache",
    qkssa="query kernel sql sampling",
    qksSage="query kernel sql exadata",
    qkssm="query kernel sql string mapping",
    qksvc="query kernel sql Virtual Column",
    qkswc="query kernel sql with clause",
    qkswcDriver="query kernel sql with clause Recursively traverse through all query blocks",
    qkx="query kernel SQL code generator",
    qkxa="query kernel SQL code generator annotations",
    qm="query XDB",
    qmcx="query XDB CSX",
    qmcxd="query XDB CSX DECODING",
    qmcxe="query XDB CSX ENCODING",
    qmcxm="query XDB CSX ENCODING",
    qme="query XDB repository",
    qmf="query XDB ftp server",
    qmh="query XDB protocols",
    qmixq="query XDB XMLIndex",
    qmn="query XDB protocols",
    qmr="query XDB hierarchical resolver",
    qms="query XDB XOB storage and retrieval",
    qmtm="query XDB CSX tokenmgr",
    qmudxClearBindValues="query XDB DBMS_XMLGEN.CLEARBINDVALUES",
    qmudxClose="query XDB DBMS_XMLGEN.CLOSECONTEXT",
    qmudxGetCtx="query XDB DBMS_XMLGEN.NEWCONTEXT",
    qmudxGetCtxFromHQ="query XDB DBMS_XMLGEN.NEWCONTEXT DBMS_XMLGEN.NEWCONTEXTFROMHIERARCHY",
    qmudxGetNumRowsProcessed="query XDB DBMS_XMLGEN.GETNUMROWSPROCESSED",
    qmudxGetXMLClob="query XDB DBMS_XMLGEN.GETXMLWRAPPED",
    qmudxRemoveXSLTParam="query XDB DBMS_XMLGEN.REMOVEXSLTPARAM",
    qmudxRestartQuery="query XDB DBMS_XMLGEN.RESTARTQUERY",
    qmudxSetBindValue="query XDB DBMS_XMLGEN.SETBINDVALUE",
    qmudxSetMaxRows="query XDB DBMS_XMLGEN.SETMAXROWS",
    qmudxSetNullHandling="query XDB DBMS_XMLGEN.SETNULLHANDLING",
    qmudxSetRowSetTagName="query XDB DBMS_XMLGEN.SETROWSETTAG",
    qmudxSetRowTagName="query XDB DBMS_XMLGEN.SETROWTAG",
    qmudxSetSkipRows="query XDB DBMS_XMLGEN.SETSKIPROWS",
    qmudxSetXSLT="query XDB DBMS_XMLGEN.SETXSLT",
    qmudxSetXSLTParam="query XDB DBMS_XMLGEN.SETXSLT DBMS_XMLGEN.SETXSLTPARAM",
    qmudxUseItemTagsForColl="query XDB DBMS_XMLGEN.USEITEMTAGSFORCOLL",
    qmurs="query XDB handling URIs",
    qmx="query XDB XML Objects",
    qmxiManifestVArray="query XDB xml support ??",
    qmxp="query XDB XML Objects CSX print",
    qmxq="query XDB XML Objects XML",
    qmxrs="query XDB XML Objects CSX print",
    qmxsax="query XDB XML Objects SAX processing",
    qmxt="query XDB XML Objects XML",
    qmxtc="query XDB XML Objects XML ddl and other operator support sql XML support",
    qmxtcDxsClearKeyCols="query XDB XML Objects XML ddl and other operator support sql XML support DBMS_XMLSTORE.CLEARKEYCOLUMNLIST",
    qmxtcDxsClearUpdCols="query XDB XML Objects XML ddl and other operator support sql XML support DBMS_XMLSTORE.CLEARUPDATECOLUMNLIST",
    qmxtcDxsClose="query XDB XML Objects XML ddl and other operator support sql XML support DBMS_XMLSTORE.CLOSECONTEXT",
    qmxtcDxsDeleteC="query XDB XML Objects XML ddl and other operator support sql XML support DBMS_XMLSTORE.DELETEXML",
    qmxtcDxsDeleteV="query XDB XML Objects XML ddl and other operator support sql XML support DBMS_XMLSTORE.DELETEXML",
    qmxtcDxsGetCtx="query XDB XML Objects XML ddl and other operator support sql XML support DBMS_XMLSTORE.NEWCONTEXT",
    qmxtcDxsInsertC="query XDB XML Objects XML ddl and other operator support sql XML support DBMS_XMLSTORE.INSERTXML",
    qmxtcDxsInsertV="query XDB XML Objects XML ddl and other operator support sql XML support DBMS_XMLSTORE.INSERTXML",
    qmxtcDxsSetKeyCol="query XDB XML Objects XML ddl and other operator support sql XML support DBMS_XMLSTORE.SETKEYCOLUMN",
    qmxtcDxsSetPreserveWS="query XDB XML Objects XML ddl and other operator support sql XML support DBMS_XMLSTORE.SETPRESERVEWHITESPACE",
    qmxtcDxsSetRowTagName="query XDB XML Objects XML ddl and other operator support sql XML support DBMS_XMLSTORE.SETROWTAG",
    qmxtcDxsSetUpdCol="query XDB XML Objects XML ddl and other operator support sql XML support DBMS_XMLSTORE.SETUPDATECOLUMN",
    qmxtcDxsUpdateC="query XDB XML Objects XML ddl and other operator support sql XML support DBMS_XMLSTORE.UPDATEXML",
    qmxtcDxsUpdateV="query XDB XML Objects XML ddl and other operator support sql XML support DBMS_XMLSTORE.UPDATEXML",
    qmxtgx="query XDB XML Objects XML ADT to XML transformation",
    qmxtra="query XDB XML Objects XML query",
    qmxtri="query XDB XML Objects XML schema/XMLindex",
    qmxtsk="query XDB XML Objects XML xmltype support functions",
    qo="query optimizer",
    qolclrevu="query optimizer OUTLN_PKG.CLEAR_USED",
    qolgenol="query optimizer OUTLN_PKG_INTERNAL",
    qolgensig="query optimizer DBMS_SQLTCB_INTERNAL.I_TCB_GENERATE_SIGNATURE",
    qolrfcache="query optimizer OUTLN_PKG.REFESH_OUTLINE_CACHE",
    qolsigupd="query optimizer OUTLN_PKG.UPDATE_SIGNATURES",
    qolsigxct="query optimizer OUTLN_PKG.EXACT_TEXT_SIGNATURES",
    qos="query optimizer statistics",
    qosadv="query optimizer statistics SQL optimizer statistics advisor",
    qosadvExecuteTaskDrv="query optimizer statistics SQL optimizer statistics advisor DBMS_STATS_ADVISOR.I_EXECUTE_TASK_CALLOUT",
    qosd="query optimizer statistics sql plan directive",
    qosdAlterSPD="query optimizer statistics sql plan directive DBMS_SPD_INTERNAL.ALTER_SPD_CALLOUT",
    qosdCheckWindowMode="query optimizer statistics sql plan directive DBMS_STATS_INTERNAL.CHECK_WINDOW_CAPTURE_MODE",
    qosdDelExprStats="query optimizer statistics sql plan directive DBMS_STATS_INTERNAL.DELETE_EXPR_STATS_CALLOUT",
    qosdDSResExternal="query optimizer statistics sql plan directive DBMS_SPD_INTERNAL.DS_RES_INTERNAL",
    qosdFlushSPD="query optimizer statistics sql plan directive DBMS_SPD_INTERNAL.FLUSH_SPD_CALLOUT",
    qosdgelc="query optimizer statistics sql plan directive DBMS_STATS_INTERNAL.GET_EXP_LIST_CALLOUT",
    qosdGetFObjKeyFromStmt="query optimizer statistics sql plan directive get stat/DS(?) results using sql text (stmt)?",
    qosdImportSPD="query optimizer statistics sql plan directive DBMS_SPD_INTERNAL.IMPORT_SPD_CALLOUT",
    qosdInitDirCtx="query optimizer statistics sql plan directive initialize directives context",
    qosdUB8ToSqlId="query optimizer statistics sql plan directive DBMS_SPD_INTERNAL.UB8_TO_SQLID",
    qosdVecbit="query optimizer statistics sql plan directive DBMS_SPD_INTERNAL.VECBIT",
    qoshgshrc="query optimizer statistics DBMS_STATS.GET_STATS_RETENTION_CALLOUT",
    qoshposc="query optimizer statistics DBMS_STATS_INTERNAL.PURGE_OLD_STATS_CALLOUT",
    qoshrsoc="query optimizer statistics DBMS_STATS.REPORTING_MAN_LOG_OP",
    qoshrstc="query optimizer statistics DBMS_STATS.REPORTING_MAN_LOG_TASK_CALLOUT",
    qoshsavsys="query optimizer statistics DBMS_STATS.SAVE_SYSTEM_STATS",
    qoshsshrc="query optimizer statistics DBMS_STATS.SET_STATS_RETENTION_CALLOUT",
    qosp_odci_inprogress="query optimizer statistics DBMS_STATS.ODCI_INPROGRESS",
    qosp_odci_reset_ugafsc="query optimizer statistics DBMS_STATS.ODCI_RESET_UGAFSC",
    qosp_odci_set_privs="query optimizer statistics DBMS_STATS.ODCI_SET_PRIVS",
    qosp_odci_set_ugafsc="query optimizer statistics DBMS_STATS.ODCI_SET_UGAFSC",
    qosp_odci_set_ugaqxob="query optimizer statistics DBMS_STATS.ODCI_SET_UGAQXOB",
    qospCheckMMONPolicyViolation="query optimizer statistics DBMS_STATS_ADVISOR.I_CHKMPOLICY_VIOLATION_CALLOUT",
    qospClearMonModInfo="query optimizer statistics DBMS_STATS.CLEARMONMODINFO",
    qospClearStStatus="query optimizer statistics DBMS_STATS_INTERNAL.CLEAR_ST_STATUS_CALLOUT",
    qospColNormalConv2Raw="query optimizer statistics DBMS_STATS_INTERNAL.NORM_AND_CONV",
    qospdefdop="query optimizer statistics DBMS_STATS_INTERNAL.GET_DEFAULT_DOP",
    qospdvexempt="query optimizer statistics DBMS_STATS.SET_DVSECURITY_MODE",
    qospfcl="query optimizer statistics DBMS_STATS.FIXED_COL_LENGTHS",
    qospFlushMonModInfo="query optimizer statistics DBMS_STATS.FLUSHMONMODINFO",
    qospfreq="query optimizer statistics DBMS_STATS.GET_CPU_FREQUENCY_CALLOUT",
    qospGetCurRows="query optimizer statistics DBMS_STATS_ADVISOR.I_GET_CURRENT_ROWS_CALLOUT",
    qospGetExtnName="query optimizer statistics DBMS_STATS.GET_EXTENSION_NAME_CALLOUT",
    qospGetNoworkStat="query optimizer statistics DBMS_STATS.GET_NOWORK_CALOUT",
    qospGetScn="query optimizer statistics DBMS_STATS.GET_CURRENT_SCN_CALLOUT",
    qospgetthr="query optimizer statistics DBMS_STATS.GET_THROUGHPUT_CALLOUT",
    qospgev="query optimizer statistics DBMS_STATS.GET_EVENT_LEVEL",
    qospgibc="query optimizer statistics DBMS_STATS_INTERNAL.GET_INDEX_BLOCK_COUNT_CALLOUT",
    qospgmveqCallBack="query optimizer statistics DBMS_STATS_INTERNAL.GET_MV_ENQUE",
    qospgtbc="query optimizer statistics DBMS_STATS_INTERNAL.GET_TABLE_BLOCK_COUNT_CALLOUT",
    qosphnc="query optimizer statistics DBMS_STATS.NORM_AND_CONV_HISTOGRAMS",
    qospmfal="query optimizer statistics DBMS_STATS.FLUSH_ALL_MON_INFO",
    qospmfcuo="query optimizer statistics DBMS_STATS.FLUSH_OBJ_COLU_INFO",
    qospMinMaxPartCol="query optimizer statistics DBMS_STATS.GET_PART_MINMAX",
    qospNormalizeDensity="query optimizer statistics DBMS_STATS.NORMALIZE_DENSITY_CALLOUT",
    qosppgaflg="query optimizer statistics DBMS_STATS_INTERNAL.QOSPSETPGAFLG",
    qospprv="query optimizer statistics DBMS_STATS.CHECK_PRIVS_CALLOUT",
    qospRecColUsage="query optimizer statistics DBMS_STATS.REC_COLU_INFO",
    qospresetthr="query optimizer statistics DBMS_STATS.RESET_THROUGHPUT_INFO",
    qospscs="query optimizer statistics DBMS_STATS.SET_COLUMN_STATS_CALLOUT",
    qospsec="query optimizer statistics DBMS_STATS.SET_SECURITY_MODE",
    qospsgaflg="query optimizer statistics DBMS_STATS_INTERNAL.QOSPSETSGAFLG",
    qospsis="query optimizer statistics DBMS_STATS.SET_INDEX_STATS_CALLOUT",
    qospslck="query optimizer statistics DBMS_STATS.SET_LOCK_MODE_CALLOUT",
    qospsts="query optimizer statistics DBMS_STATS.SET_TABLE_STATS_CALLOUT",
    qospsys="query optimizer statistics DBMS_STATS.SET_SYSTEM_STATS_CALLOUT",
    qospTestMmon="query optimizer statistics DBMS_STATS_INTERNAL.TEST_MMON_AUTOJOB",
    qosptrc="query optimizer statistics DBMS_SPM_INTERNAL.I_NON_TERM_DUMP KSD_TRACE",
    qs="query system",
    qsm="query system management",
    qsme="query system management expression processing",
    qsmg_generate_checksum="query system management PRVT_TUNE_MVIEW.GENERATE_CHECKSUM",
    qsmg_mvlog_advisor="query system management PRVT_SYS_TUNE_MVIEW.ANALYZE_MVLOGS",
    qsmg_rewrite_query="query system management PRVT_TUNE_MVIEW.REWRITE_QUERY_INTERNAL",
    qsmka="query system management determine if summary would be useful",
    qsmkz="query system management create/alter summary semantic analysis",
    qsmmcd="query system management access advisor",
    qsmmcdGetTaskScript="query system management access advisor PRVT_ACCESS_ADVISOR.GET_TASK_SCRIPT",
    qsmmcdImplementTask="query system management access advisor PRVT_ACCESS_ADVISOR.X_IMPLEMENT_TASK",
    qsmmcdMain="query system management access advisor PRVT_ACCESS_ADVISOR.AA_MAIN",
    qsmmcdParamValidate="query system management access advisor PRVT_ACCESS_ADVISOR.PARAM_VALIDATE_EXT PRVT_WORKLOAD.PARAM_VALIDATE_EXT",
    qsmmhwghw="query system management PRVT_WORKLOAD.GEN_HYP_WKD",
    qsmmutlGetNewName="query system management PRVT_ACCESS_ADVISOR.GET_NEW_NAME",
    qsmmwrkDeleteStatement="query system management PRVT_WORKLOAD.DELETE_ST",
    qsmmwrkImportSqlTuningSet="query system management PRVT_WORKLOAD.IMPORT_SQLCACHE PRVT_WORKLOAD.IMPORT_STS",
    qsmmwrkImportSumadv="query system management PRVT_WORKLOAD.IMPORT_SUMADV",
    qsmmwrkImportUser="query system management PRVT_WORKLOAD.IMPORT_USER",
    qsmmwrkInsertStatement="query system management PRVT_WORKLOAD.SQLW_INSERT",
    qsmmwrkRecordJournal="query system management PRVT_WORKLOAD.RECORD_JNL_ENTRY",
    qsmmwrkResetWorkload="query system management PRVT_WORKLOAD.X_RESET_WORKLOAD",
    qsmmwrkUpdateStatement="query system management PRVT_WORKLOAD.UPDATE_ST",
    qsmo="query system management optimizer",
    qsmoAcceptAdaptivePlanExt="query system management optimizer DBMS_SPM_INTERNAL.I_ACCEPT_ADAPTIVE_PLAN",
    qsmoAlterPlans="query system management optimizer alter plans driver",
    qsmoAlterPlansExt="query system management optimizer alter plans driver DBMS_SPM.I_ALTER_SQL_PLAN_BASELINE",
    qsmoAutocapNotifierExt="query system management optimizer DBMS_SPM_INTERNAL.I_NOTIFY_SMB_CONFIG_UPDATE",
    qsmoCreatePlanBaselineExt="query system management optimizer DBMS_SPM_INTERNAL.I_CREATE_SQL_PLAN_BASELINE",
    qsmoDropPlansExt="query system management optimizer DBMS_SPM.I_DROP_SQL_PLAN_BASELINE",
    qsmoGenSqlHandleExt="query system management optimizer DBMS_SPM.I_GENERATE_SQL_HANDLE_FROM_SIG",
    qsmoLoadPlansExt="query system management optimizer DBMS_SPM_INTERNAL.LOAD_PLANS_SET",
    qsmoSPMAllowedExt="query system management optimizer DBMS_SPM_INTERNAL.CHECK_SPM_ALLOWED",
    qsmoUnMigrateOutlnsExt="query system management optimizer DBMS_SPM_INTERNAL.I_UNMIGRATE_STORED_OUTLINE",
    qsmp="query system management partition processing",
    qsmq="query system management dictionary access",
    qsmqcsm="query system management dictionary access create/drop/alter summary",
    qsmqutl="query system management dictionary access support",
    qsms="query system management advisor",
    qsmssql="query system management advisor PRVT_WORKLOAD.ANALYZE_SQL",
    qsoda="query system DBMS_SODA",
    qsodaplsCreateColl="query system DBMS_SODA DBMS_SODA.CREATE_COLLECTION",
    qsodaplsDropColl="query system DBMS_SODA DBMS_SODA.DROP_COLLECTION",
    qsodaplsOpenColl="query system DBMS_SODA DBMS_SODA.OPEN_COLLECTION",
    qx="query query execution",
    qxdid="query query execution domain index ddl operations",
    qxdid_odci_get_impltype_num="query query execution domain index ddl operations DBMS_ODCI.GET_IMPLTYPE_NUM",
    qxdid_odci_set_privs="query query execution domain index ddl operations DBMS_ODCI.ODCI_SET_PRIVS",
    qxidm="query query execution extensible index dml operations",
    qxidp="query query execution domain index ddl partition operations",
    qxim="query query execution support for objects",
    qximcom="query query execution support for objects create operator for type method",
    qximeop="query query execution support for objects evaluate operand",
    qxitex="query query execution support for create/drop indextype",
    qxopc="query query execution time operator callbacks",
    qxope="query query execution support for operator ddl",
    qxopq="query query execution support for user-defined operators",
    qxuag="query query execution support for user-defined aggragate processing",
    qxxm="query query execution support external tables",
    rbfima="rowsource buffer implementation a",
    rcoima="rowsource count implementation a",
    rfa="data guard (?)",
    rfmon="data guard broker monitor",
    rfra="data guard broker monitor",
    rfrdb="data guard broker monitor",
    rfrla="data guard broker monitor",
    rfrm="data guard broker monitor",
    rfrxpt="data guard broker monitor",
    rfs_add_database="DBMS_DG.RFS_ADD_DATABASE",
    rfs_add_far_sync="DBMS_DG.RFS_ADD_FAR_SYNC",
    rfs_check_connect="DBMS_DG.RFS_CHECK_CONNECT",
    rfs_create_configuration="DBMS_DG.RFS_CREATE_CONFIGURATION",
    rfs_disable_fsfo="DBMS_DG.RFS_DISABLE_FSFO",
    rfs_do_observe="DBMS_DG.RFS_DO_OBSERVE",
    rfs_dump_broker="DBMS_DG.RFS_DUMP_BROKER",
    rfs_dump_observer="DBMS_DG.RFS_DUMP_OBSERVER",
    rfs_enable_fsfo="DBMS_DG.RFS_ENABLE_FSFO",
    rfs_enable_member="DBMS_DG.RFS_ENABLE_MEMBER",
    rfs_fs_failover_for_hc_cond="DBMS_DG.RFS_FS_FAILOVER_FOR_HC_COND",
    rfs_initiate_fs_failover="DBMS_DG.RFS_INITIATE_FS_FAILOVER",
    rfs_remove_configuration="DBMS_DG.RFS_REMOVE_CONFIGURATION",
    rfs_remove_member="DBMS_DG.RFS_REMOVE_MEMBER",
    rfs_replace_name_in_props="DBMS_DG.RFS_REPLACE_NAME_IN_PROPS",
    rfs_reset_config_property="DBMS_DG.RFS_RESET_CONFIG_PROPERTY",
    rfs_reset_member_property="DBMS_DG.RFS_RESET_MEMBER_PROPERTY",
    rfs_set_member_property="DBMS_DG.RFS_SET_MEMBER_PROPERTY",
    rfs_set_protection_mode="DBMS_DG.RFS_SET_PROTECTION_MODE",
    rfs_startup_for_relocate="DBMS_DG.RFS_STARTUP_FOR_RELOCATE",
    rfs_stop_observer="DBMS_DG.RFS_STOP_OBSERVER",
    rfs_wait="DBMS_DG.RFS_WAIT",
    rfsAfPing="DBMS_DG.RFSAFPING",
    rfsAfReadyToFailover="DBMS_DG.RFSAFREADYTOFAILOVER",
    rfsAfStateChangeRecorded="DBMS_DG.RFSAFSTATECHANGERECORDED",
    rfsbrq="DBMS_DG.RFSBRQ",
    rfsc2r="DBMS_DG.RFSC2R",
    rfscnl="DBMS_DG.RFSCNL",
    rfsdel="DBMS_DG.RFSDEL",
    rfsinfo="DBMS_DG.RFSINFO",
    rfspmeta="DBMS_DG.RFSPMETA",
    rfsr2c="DBMS_DG.RFSR2C",
    rfsreq="DBMS_DG.RFSREQ",
    rfsrsp="DBMS_DG.RFSRSP",
    rfuima="rowsource for update implementation a",
    rixima="rowsource index implementation a",
    rnm="rename statement operation",
    rpi="recursive program interface",
    rpibnn="recursive program interface bind by number",
    rpicls="recursive program interface close",
    rpidec="recursive program interface describe with callback",
    rpidrr="recursive program interface error handler for setup memory for the recursive session (dru)",
    rpidru="recursive program interface setup memory for recursive session",
    rpidrus="recursive program interface setup memory for recursive session recursive program handling",
    rpidrv="recursive program interface recursive program interface driver",
    rpiexe="recursive program interface execute",
    rpispl="recursive program interface switch user and parse",
    rpiswu2="recursive program interface switch user in recursive sql",
    rtb="rowsource table",
    rw="row",
    rwo="row operand",
    rwoima="row operand vector implementation a",
    rwoupo="row operand unpack row from buffer queue (px)",
    rws="row source",
    rwsaid="row source allocate new identity source",
    rwsdef="row source definitions",
    rwsfcd="row source fetch from rowsource",
    rwsima="row source retrieval according to defining query",
    rwsstd="row source start row source",
    sage="exadata specific",
    sagebkcomp="exadata specific block(or backup?) compression",
    sagebxfer="exadata specific block transfer",
    sageCache="exadata specific cache layer",
    sagecell="exadata specific cell",
    sageData="exadata specific data layer",
    sageIndex="exadata specific index layer",
    sagesql="exadata specific sql",
    sageTxn="exadata specific transaction layer",
    scg="concurrency global locks",
    scl="latches",
    sclfr="latches free",
    sclgtf="latches fast get with no spin",
    sclgts="latches slow get with spin (if CPU greater than 1)",
    scls="latches operating system dependent clusterware integration",
    scm="PLSQL apps",
    scu="operating system concurrency unique(?)",
    scuinst="operating system concurrency unique(?) instance",
    sculkget="operating system concurrency unique(?) lockfile (lk DB_UNIQUE_NAME )",
    scumnt="operating system concurrency unique(?) mount",
    scurls="operating system concurrency unique(?) release",
    sdbgrf="Diagnostic directory and file services",
    sdbgrfwf_write_file="Diagnostic directory and file services write to tracefile",
    sdbima="sort operation",
    sel="select",
    select="select ??",
    selexe="select execute: prepare area for fetch",
    semtimedop ="Linux: perform atomically an array of semaphore operations",
    seq="sequence numbers",
    sgipc="operatign system dependent grid inter process calls",
    sk="operating system dependent kernel",
    skdstdst="operating system dependent kernel dump a stack trace",
    skg="operating system dependent kernel generic",
    skgf="operating system dependent kernel generic file",
    skgfalo="operating system dependent kernel generic file allocate sequential device",
    skgfcls="operating system dependent kernel generic file close device",
    skgfgiod="operating system dependent kernel generic file get IO done (?)",
    skgfnxtio="operating system dependent kernel generic file next IO",
    skgfofi="operating system dependent kernel generic file open file",
    skgfospo="operating system dependent kernel generic file operating system poll for IO completion",
    skgfqio="operating system dependent kernel generic file queue I/O request(s)",
    skgfr="operating system dependent kernel generic file requests",
    skgfr_error64="operating system dependent kernel generic file requests check for errors",
    skgfr_lio_listio64="operating system dependent kernel generic file requests perform listio (AIO) 64 bits",
    skgfr_open64="operating system dependent kernel generic file requests open file 64 bits",
    skgfrciohdlr="operating system dependent kernel generic file requests concurrent IO handler",
    skgfrdup="operating system dependent kernel generic file requests duplicate file handle",
    skgfrgsz="operating system dependent kernel generic file requests get size",
    skgfrliopo="operating system dependent kernel generic file requests listio (AIO) poll",
    skgfrls="operating system dependent kernel generic file requests release a sequential device previously allocated",
    skgfrvldtrq="operating system dependent kernel generic file requests validate requests",
    skgfrwat="operating system dependent kernel generic file requests wait for IO to complete",
    skgm="operating system dependent kernel generic memory (os dependent)",
    skgmattach="operating system dependent kernel generic memory (os dependent) attach to shared memory realm",
    skgmlocate="operating system dependent kernel generic memory (os dependent) locate a primary segment from a realm",
    skgmrf="operating system dependent kernel generic memory (os dependent) real free heap",
    skgmrf_alloc="operating system dependent kernel generic memory (os dependent) real free heap allocate memory",
    skgmrf_blknotoaddr="operating system dependent kernel generic memory (os dependent) real free heap calculate memory address for mmap",
    skgmrf_free="operating system dependent kernel generic memory (os dependent) real free heap calculate memory ranges to be freed",
    skgmrf_release="operating system dependent kernel generic memory (os dependent) real free heap release memory",
    skgmstack="operating system dependent kernel generic memory (os dependent) call specified function with extra stack space",
    skgnfs="operating system dependent kernel generic network file system",
    skgnfs_poll_channels="operating system dependent kernel generic network file system poll network paths",
    skgpnumcpu="operating system dependent kernel generic return number of cpus in system",
    skgptalive="operating system dependent kernel generic thread alive (check if process or thread is alive)",
    skgpw="operating system dependent kernel generic post/wait",
    skgpwinit="operating system dependent kernel generic post/wait initialization",
    skgpwpost="operating system dependent kernel generic post/wait post",
    skgpwwait="operating system dependent kernel generic post/wait wait",
    skgs="operating system dependent kernel generic service",
    skgsl="operating system dependent kernel generic service latches",
    skgslcas="operating system dependent kernel generic service latches get latch fast with no spin (SPARC 11g)",
    skgslgf="operating system dependent kernel generic service latches get latch fast with no spin (SPARC 8i-10g)",
    skgslgts="operating system dependent kernel generic service latches 8i-10g spin get of exclusive latch (SPARC)",
    skgstm="operating system dependent kernel generic service time",
    skgstmGetEpochTs="operating system dependent kernel generic service time get epoch timestamp (gettimeofday)",
    skgvm="operating system dependent kernel generic virtual machine",
    skgvm_cpuid="operating system dependent kernel generic virtual machine detect cpuid",
    skgvm_detect_vmware="operating system dependent kernel generic virtual machine detect vmware",
    skgvm_detect_xen="operating system dependent kernel generic virtual machine detect xen",
    skgx="operating system dependent kernel generic communication",
    skgxn="operating system dependent kernel generic communication node monitor",
    skgxncin="operating system dependent kernel generic communication node monitor defines an OSD context and returns a handle",
    skgxnpstat="operating system dependent kernel generic communication node monitor polls/waits for process group status",
    skgxnreg="operating system dependent kernel generic communication node monitor registers with process group as primary member (LMON)",
    skgxnsrg="operating system dependent kernel generic communication node monitor registers with process group as slave member",
    skgxp="operating system dependent kernel generic communication IPC",
    skgxpdmpmem="operating system dependent kernel generic IPC communication ??",
    skgxpfragsnd="operating system dependent kernel generic IPC communication ??",
    skgxpimcpy="operating system dependent kernel generic IPC communication ??",
    skgxpiwait="operating system dependent kernel generic IPC communication ??",
    skgxpmcpy="operating system dependent kernel generic IPC communication ??",
    skgxppost="operating system dependent kernel generic communication IPC post the owner of a contact out of a blocking call",
    skgxpprcrcv="operating system dependent kernel generic IPC communication ??",
    skgxprusr="operating system dependent kernel generic IPC communication ??",
    skgxpsegsnda="operating system dependent kernel generic IPC communication ??",
    skgxpwait="operating system dependent kernel generic IPC communication ??",
    skgxpwaiti="operating system dependent kernel generic IPC communication ??",
    skgxpxmit="operating system dependent kernel generic IPC communication ??",
    skofs="operating system dependent kernel OFS file system implementation",
    skuz="operating system dependent kernel security (orapwd)",
    skuzfbs="operating system dependent kernel security (orapwd) determine orapw file block size",
    sl="operating system (dependent) library",
    slave="operating system dependent call ??",
    slcpu="operating system (dependent) library get cpu usage",
    slcpums="operating system (dependent) library get cpu usage measurement (for getrusage)",
    slcra="operating system (dependent) library we trip here if someone else other than ssexhd() calls us",
    slgei="operating system (dependent) library call function with the oracle error code and arguments",
    slgts="operating system (dependent) library get time stamp (for gettimeofday)",
    slmecpy="operating system dependent call ??",
    slmsrd="operating system (dependent) library message file read, reads .msb file",
    slrac="operating system (dependent) library verify (memory) read access",
    sltrgatime64="operating system (dependent) library arbitrary time lookup",
    sltrgftime64="operating system (dependent) library time lookup main (for clock_gettime)",
    sltrgftime64_cgt="operating system (dependent) library time lookup main (for clock_gettime) clock_gettime",
    sltrusleep="operating system (dependent) library true (?) sleep (calls nanosleep)",
    slts="operating system (dependent) library threading services",
    sltsm="operating system (dependent) library threading services mutex",
    sltsmda="operating system (dependent) library threading services mutex directed acquire. wrapper for ssOswPthread_mutex_lock",
    sltsmdi="operating system (dependent) library threading services mutex directed insert memory? calls ssMemAlloc",
    sltsmdr="operating system (dependent) library threading services mutex directed release. wrapper for ssOswPthread_mutex_unlock",
    sltsmdt="operating system (dependent) library threading services mutex directed try. wrapper for ssOswPthread_mutex_trylock",
    sltsmdta="operating system (dependent) library threading services mutex directed try. wrapper for ssOswPthread_mutex_trylock directed timed acquire. calls sltsmnta",
    sltsmna="operating system (dependent) library threading services mutex named acquire. wrapper for ssOswPthread_mutex_lock",
    sltsmnr="operating system (dependent) library threading services mutex named release. wrapper for ssOswPthread_mutex_unlock",
    sltsmnt="operating system (dependent) library threading services mutex named try. wrapper for ssOswPthread_mutex_trylock",
    sltsmnta="operating system (dependent) library threading services mutex named try. wrapper for ssOswPthread_mutex_trylock named timed acquire. calls pthread_mutex_timedlock",
    sltsmxd="operating system (dependent) library threading services mutex 'exchange' destroy. destroy a mutex",
    sltsmxi="operating system (dependent) library threading services mutex 'exchange' insert. insert a mutex",
    slz="operating system (dependent) library zoned (NLS)",
    slzgetevar="operating system (dependent) library zoned (NLS) get environment variable",
    slzsetevar="operating system (dependent) library zoned (NLS) set environment variable",
    sm="operating system dependent memory",
    smb="operating system dependent memory buffer",
    smbalo="operating system dependent memory buffer allocate an smkdef from specified storage bin",
    smbeod="operating system dependent memory buffer signal end of data for memory buffer",
    smboCkaGetPivot="operating system dependent memory buffer ??",
    smbput="operating system dependent memory buffer put a record into the memory buffer",
    sn="operating system dependent network",
    sndmsg="operating system dependent network ??",
    snltmdf="operating system dependent network timer driver: called by SIGALRM",
    snt="operating system dependent network transport",
    sntp="operating system dependent network transport ipc",
    sntpread="operating system dependent network transport ipc issue read",
    sntpwrite="operating system dependent network transport ipc issue write",
    sntt="operating system dependent network transport tcp/ip",
    snttread="operating system dependent network transport tcp/ip read data on a socket",
    snttwrite="operating system dependent network transport tcp/ip write data to a socket",
    sor="sort operation",
    soreod="sort operation end of data: close data input for sort",
    sorputqb="sort operation insert record into sort",
    sou2o="main oracle executable entry point",
    sp="operating system dependent process functions",
    sp_sigset_raise_signal="operating system dependent process functions obtain process ID and send signal",
    spefcmpa="operating system dependent process functions marshall procedure arguments",
    spefmccallstd="operating system dependent process functions c calling standard",
    sqn="sequence",
    sqnprs="sequence reference parsing",
    sr="sort operation",
    ss="operating system dependent system",
    ssexhd="operating system dependent system dump routine",
    ssk="operating system dependent system kernel",
    sskg="operating system dependent system kernel generic",
    sskgm="operating system dependent system kernel generic memory",
    sskgmrf="operating system dependent system kernel generic memory real free heap",
    sskgmrf_unmaprange="operating system dependent system kernel generic memory real free heap unmap memory range",
    sskgmrf_validaterange="operating system dependent system kernel generic memory real free heap mmap memory range",
    sskgp="operating system dependent system kernel generic process",
    sskgp_gettid="operating system dependent system kernel generic process get thread id",
    sskgp_tgkill="operating system dependent system kernel generic process thread get and kill. send a signal to a process/thread",
    sskgpw="operating system dependent system kernel generic process post/wait",
    sskgpwidcmp="operating system dependent system kernel generic process post/wait compare semid of semaphores to be posted",
    sskgpwpost="operating system dependent system kernel generic process post/wait post a single semaphore",
    sskgpwvectorpost="operating system dependent system kernel generic process post/wait post multiple semaphores",
    sskgpwwait="operating system dependent system kernel generic process post/wait wait",
    sskgslgf="operating system dependent system kernel generic immediate latch get (X86, 8i-10g)",
    sskgslspin="operating system dependent system kernel generic spin for a latch",
    sskgxp="operating system dependent system kernel generic ipc communication",
    sskgxp_select="operating system dependent system kernel generic ipc communication waits \"timeout\" microseconds for an asynchronous request/event associated with context. if zero, return immediately",
    sskgxph="operating system dependent system kernel generic ipc communication hmp implementation (hpux)",
    sskgxpu="operating system dependent system kernel generic ipc communication udp",
    sslsshandler="operating system dependent system SSLS signal handler for all signals",
    sslssSynchHdlr="operating system dependent system SSLS signal handler for synch. signals",
    ssMem="operating system dependent system memory",
    ssMemCalloc="operating system dependent system memory calls ksmem_calloc or calloc",
    ssMemCalloc_shared="operating system dependent system memory calls ksmem_calloc or calloc calls calloc",
    ssMemFree="operating system dependent system memory calls ksmem_free or free",
    ssMemFree_shared="operating system dependent system memory calls ksmem_free or free calls free",
    ssMemMalloc="operating system dependent system memory calls ksmem_malloc or malloc",
    ssMemMalloc_shared="operating system dependent system memory calls ksmem_malloc or malloc calls malloc",
    ssMemRealloc="operating system dependent system memory calls ksmem_realloc or realloc",
    ssMemRealloc_shared="operating system dependent system memory calls ksmem_realloc or realloc calls realloc",
    ssMemStrdup="operating system dependent system memory calls ksmem_strdup or __intel_sse2_strdup",
    ssMemStrdup_shared="operating system dependent system memory calls ksmem_strdup or __intel_sse2_strdup calls __intel_sse2_strdup",
    ssOsw="operating system dependent system operating system (call) wrapper (?)",
    ssOswClose="operating system dependent system operating system (call) wrapper (?) close. close a file descriptor",
    ssOswCreat="operating system dependent system operating system (call) wrapper (?) creat. open and possibly create a file or device",
    ssOswDlclose="operating system dependent system operating system (call) wrapper (?) dlclose. decrements dynamic library file handle count, on zero is unloaded",
    ssOswDlopen="operating system dependent system operating system (call) wrapper (?) dlopen. load dynamic library file",
    ssOswDup="operating system dependent system operating system (call) wrapper (?) dup. duplicate a file descriptor",
    ssOswDup2="operating system dependent system operating system (call) wrapper (?) dup. duplicate a file descriptor dup2. duplicate a file descriptor",
    ssOswFclose="operating system dependent system operating system (call) wrapper (?) fclose. close file",
    ssOswFdopen="operating system dependent system operating system (call) wrapper (?) fdopen. associate a stream with a file descriptor",
    ssOswFopen="operating system dependent system operating system (call) wrapper (?) fopen. open file",
    ssOswFreopen="operating system dependent system operating system (call) wrapper (?) freopen. open file and associate stream with it",
    ssOswOpen="operating system dependent system operating system (call) wrapper (?) open64. open a file",
    ssOswPclose="operating system dependent system operating system (call) wrapper (?) pclose. close pipe",
    ssOswPipe="operating system dependent system operating system (call) wrapper (?) pipe. create pipe",
    ssOswPopen="operating system dependent system operating system (call) wrapper (?) popen. pipe stream to process",
    ssOswPthread_mutex_lock="operating system dependent system operating system (call) wrapper (?) pthread_mutex_lock",
    ssOswPthread_mutex_trylock="operating system dependent system operating system (call) wrapper (?) pthread_mutex_trylock",
    ssOswPthread_mutex_unlock="operating system dependent system operating system (call) wrapper (?) pthread_mutex_unlock",
    ssOswSocket="operating system dependent system operating system (call) wrapper (?) socket. create an endpoint for communication",
    sspuser="operating system dependent system handle SIGUSR2 for Oracle",
    ssthrdmain="operating system dependent system main for every thread in a threaded oracle",
    stack="sort operation ??",
    start="(non oracle)c program entry point",
    std="PLSQL apps",
    stsima="sort support implementation",
    subex1="evaluate subquery; exists subquery method 1",
    subsr1="evaluate subquery; single row subquery method 1",
    subsr3="evaluate subquery; single row subquery method 3",
    sxorchk="system xor check",
    tbsdrv="create/alter/drop tablespace function support",
    tre="PLSQL infrastructure",
    ttc="two task common",
    ttcacr="two task common read into a user data area",
    ttcbur="two task common burst record",
    ttcc2u="two task common convert type x to type y",
    ttcclr="two task common send/receive without conversion",
    ttcdrv="two task common called when message received",
    ttcgcshnd="two task common get character set handle(?): oracle is checking that the remote character set id is valid to do type conversions with different character sets",
    ttci2u="two task common integer type to universal representation",
    ttcpip="two task common pipe read/write",
    ttcrd2r="two task common rowid descriptor to rowid conversion routine",
    ttcrs2c="two task common result set to cursor conversion routine",
    ttp="Database Audit Next Generation",
    ub8_to_kscn_impl="convert ub8 to kernel SCN",
    uixexe="index maintenance operations",
    ul="SQLLDR Load",
    upd="update",
    updAfterRowTrigger="update ??",
    updaul="update Attempt Update of all rows or Lock all rows",
    updauw="update get the values of the update columns",
    upderh="update evaluate right hand side expressions in order to get values",
    updexe="update update execute",
    updgrh="update ??",
    updpcr="update perform constraint operations for each row updated",
    updrow="update Row Procedure used by KXRD to update or lock a row",
    updThreePhaseExe="update ??",
    upduaw="update ??",
    upi="user program interface",
    upirtrc="user program interface router with callback",
    ups="upsert",
    upseq="upsert ??",
    upsexe="upsert execute",
    vop="view optimisation",
    vopdrv="view optimisation driver",
    vopqbc="view optimisation query block",
    vsn="version (?)",
    wpiu="PLSQL apps",
    xct="transaction management",
    xctcom="transaction management commit: commit the current tranaction of the current session",
    xctctl="transaction management commit top level transaction in a transaction tree",
    xctend="transaction management end",
    xctrol="transaction management rollback: rollback current transaction of the current session",
    xpl="SQL explain plan",
    xplComputePlanHashExt="SQL explain plan DBMS_SPM.I_COMPUTE_PLAN_HASH_VALUE",
    xplDumpSqlTrace="SQL explain plan produce STAT lines in sql trace",
    xplFetchRow="SQL explain plan ??",
    xplGenXpl="SQL explain plan generate explain plan",
    xplGetPredicates="SQL explain plan ??",
    xplMakeRow="SQL explain plan ??",
    xplPredToText="SQL explain plan ??",
    xs="olap analytic workspace",
    xsAdvSparse="olap analytic workspace DBMS_AW.XSADVSPARSE",
    xsagAdvCube="olap analytic workspace DBMS_AW.ADVISE_CUBE",
    xsagAdvRel="olap analytic workspace DBMS_AW.ADVISE_REL",
    xsAnalyze="olap analytic workspace DBMS_AW_STATS.XSANALYZE",
    xsAWNameOk="olap analytic workspace DBMS_AW.XSAWNAMEOK",
    xsawUpgrade="olap analytic workspace DBMS_AW.XSAWUPGRADE",
    xscatClean="olap analytic workspace DBMS_AW.CLEAN_ACCESS_TRACKING",
    xscatDisable="olap analytic workspace DBMS_AW.DISABLE_ACCESS_TRACKING",
    xscatEnable="olap analytic workspace DBMS_AW.ENABLE_ACCESS_TRACKING",
    xsClearStats="olap analytic workspace DBMS_AW_STATS.XSCLEARSTATS",
    xsCmdExcKL="olap analytic workspace DBMS_AW.XSCMDEXCKL",
    xsCmdExcKN="olap analytic workspace DBMS_AW.XSCMDEXCKN",
    xsCmdExcLL="olap analytic workspace DBMS_AW.XSCMDEXCLL",
    xsdb="olap analytic workspace paging manager",
    xseifExportBLOB="olap analytic workspace DBMS_AW.INT_EIF_BLOB_OUT",
    xseifExportTable="olap analytic workspace DBMS_AW.INT_EIF_TABLE_OUT",
    xseifImportBLOB="olap analytic workspace DBMS_AW.INT_EIF_BLOB_IN",
    xseifImportTable="olap analytic workspace DBMS_AW.INT_EIF_TABLE_IN",
    xsevalnum="olap analytic workspace DBMS_AW.XSEVALNUM",
    xsevaltxt="olap analytic workspace DBMS_AW.EVAL_TEXT",
    xsFileNameOK="olap analytic workspace DBMS_AW.XSFILENAMEOK",
    xsGetCompat="olap analytic workspace DBMS_AW.XSGETCOMPAT",
    xsiculog_disable="olap analytic workspace DBMS_CUBE_LOG.DISABLE",
    xsiculog_enable_loc="olap analytic workspace DBMS_CUBE_LOG.ENABE",
    xsiculog_enable_text="olap analytic workspace DBMS_CUBE_LOG.TEXT",
    xsiculog_get_log="olap analytic workspace DBMS_CUBE_LOG.GET_LOG",
    xsiculog_get_log_spec="olap analytic workspace DBMS_CUBE_LOG.GET_LOG DBMS_CUBE_LOG.GET_LOG_SPEC",
    xsiculog_set_log_spec="olap analytic workspace DBMS_CUBE_LOG.SET_LOG_SPEC",
    xsInAWCleanup="olap analytic workspace DBMS_AW.IN_AW_CLEANUP",
    xsinitdrv="olap analytic workspace DBMS_AW.STARTUP",
    xsisactive="olap analytic workspace DBMS_AW.OLAP_ACTIVE",
    xskditalp="(xs)kditalp - olap analytic workspace ??",
    xskilldrv="olap analytic workspace DBMS_AW.SHUTDOWN",
    xsociClean="olap analytic workspace DBMS_AW.OCI_CLEAN",
    xsoplog_complete_tco="olap analytic workspace DBMS_CUBE_LOG.COMPLETEOPLOGTCO",
    xsoplog_start_tco="olap analytic workspace DBMS_CUBE_LOG.STARTOPLOGTCO",
    xsoplog_write_tco="olap analytic workspace DBMS_CUBE_LOG.WRITEOPLOGTCO",
    xspg="olap analytic workspace paging manager",
    xspgPValClob="olap analytic workspace paging manager DBMS_AW.XSPVALCLOB",
    xspgPValGet="olap analytic workspace paging manager DBMS_AW.PROP_VAL",
    xspgPValLen="olap analytic workspace paging manager DBMS_AW.XSPGPVALLEN",
    xsRunKK="olap analytic workspace DBMS_AW.XSRUNKK",
    xsRunKL="olap analytic workspace DBMS_AW.XSRUNKL",
    xsRunKN="olap analytic workspace DBMS_AW.XSRUNKN",
    xsRunLK="olap analytic workspace DBMS_AW.XSRUNLK",
    xsRunLL="olap analytic workspace DBMS_AW.XSRUNLL",
    xsRunLN="olap analytic workspace DBMS_AW.XSRUNLN",
    xsrunning="olap analytic workspace DBMS_AW.OLAP_RUNNING",
    xsSmplGetObjProtect="olap analytic workspace DBMS_AW.GET_OBJ_PROTECT",
    xsSmplSetObjProtect="olap analytic workspace DBMS_AW_EXP.SET_OBJ_PROTECT",
    xstco_check_olap="olap analytic workspace DBMS_CUBE_LOG.CHECK_OLAP",
    xsttsfreeze="olap analytic workspace DBMS_AW_EXP.TTS_AW_FREEZE",
    xsttsthaw="olap analytic workspace DBMS_AW_EXP.TTS_AW_THAW",
    xty="expression type check",
    xtydrv="expression type check driver",
    xtyginf="expression type check get character set id and form",
    xtyinpr="expression type check insert numeric precision operator",
    xtyopn="expression type check operand",
    xtypls="expression type check check plsql functions",
    z="security",
    zlke="security label error handling",
    zll="security label security",
    zt="security encryption"
}
